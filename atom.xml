<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Gitlee Blog | 李家泉的博客</title>
  
  <link href="/hexo-blog/atom.xml" rel="self"/>
  
  <link href="http://darcylee.coding.me/hexo-blog/"/>
  <updated>2016-12-06T06:04:47.807Z</updated>
  <id>http://darcylee.coding.me/hexo-blog/</id>
  
  <author>
    <name>Gitlee</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="http://darcylee.coding.me/hexo-blog/2016/12/06/hello-world/"/>
    <id>http://darcylee.coding.me/hexo-blog/2016/12/06/hello-world/</id>
    <published>2016-12-06T06:04:47.807Z</published>
    <updated>2016-12-06T06:04:47.807Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Code Highlight Sample</title>
    <link href="http://darcylee.coding.me/hexo-blog/2016/11/16/2016-11-16-code_highlight_sample/"/>
    <id>http://darcylee.coding.me/hexo-blog/2016/11/16/2016-11-16-code_highlight_sample/</id>
    <published>2016-11-15T16:00:00.000Z</published>
    <updated>2016-12-06T09:17:14.038Z</updated>
    
    <content type="html"><![CDATA[<h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><p>目前使用rouge作为highlighter</p>
<h4 id="查看支持的themes"><a href="#查看支持的themes" class="headerlink" title="查看支持的themes"></a>查看支持的themes</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">$ rougify help style</div><div class="line">usage: rougify style [&lt;theme-name&gt;] [&lt;options&gt;]</div><div class="line"></div><div class="line">Print CSS styles for the given theme.  Extra options are</div><div class="line">passed to the theme.  Theme defaults to thankful_eyes.</div><div class="line"></div><div class="line">options:</div><div class="line">  --scope	(default: .highlight) a css selector to scope by</div><div class="line"></div><div class="line">available themes:</div><div class="line">  base16, base16.dark, base16.monokai, base16.monokai.light, base16.solarized, base16.solarized.dark, colorful, github, molokai, monokai, monokai.sublime, thankful_eyes</div></pre></td></tr></table></figure>
<h4 id="支持的语言"><a href="#支持的语言" class="headerlink" title="支持的语言"></a>支持的语言</h4><table>
<thead>
<tr>
<th style="text-align:center">语言</th>
<th style="text-align:center">aliases</th>
<th style="text-align:left">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">apache</td>
<td style="text-align:center"></td>
<td style="text-align:left">configuration files for Apache web server</td>
</tr>
<tr>
<td style="text-align:center">applescript</td>
<td style="text-align:center">applescript</td>
<td style="text-align:left">The AppleScript scripting language by Apple Inc. (<a href="http://developer.apple.com/applescript/" target="_blank" rel="external">http://developer.apple.com/applescript/</a>)</td>
</tr>
<tr>
<td style="text-align:center">c</td>
<td style="text-align:center"></td>
<td style="text-align:left">The C programming language</td>
</tr>
<tr>
<td style="text-align:center">clojure</td>
<td style="text-align:center">clj,cljs</td>
<td style="text-align:left">The Clojure programming language (clojure.org)</td>
</tr>
<tr>
<td style="text-align:center">coffeescript</td>
<td style="text-align:center">coffee,coffee-script</td>
<td style="text-align:left">The Coffeescript programming language (coffeescript.org)</td>
</tr>
<tr>
<td style="text-align:center">common_lisp</td>
<td style="text-align:center">cl,common-lisp,elisp,emacs-lisp</td>
<td style="text-align:left">The Common Lisp variant of Lisp (common-lisp.net)</td>
</tr>
<tr>
<td style="text-align:center">conf</td>
<td style="text-align:center">config,configuration</td>
<td style="text-align:left">A generic lexer for configuration files</td>
</tr>
<tr>
<td style="text-align:center">cpp</td>
<td style="text-align:center">c++</td>
<td style="text-align:left">The C++ programming language</td>
</tr>
<tr>
<td style="text-align:center">csharp</td>
<td style="text-align:center">c#,cs</td>
<td style="text-align:left">a multi-paradigm language targeting .NET</td>
</tr>
<tr>
<td style="text-align:center">css</td>
<td style="text-align:center"></td>
<td style="text-align:left">Cascading Style Sheets, used to style web pages</td>
</tr>
<tr>
<td style="text-align:center">dart</td>
<td style="text-align:center"></td>
<td style="text-align:left">The Dart programming language (dartlang.com)</td>
</tr>
<tr>
<td style="text-align:center">diff</td>
<td style="text-align:center">patch,udiff</td>
<td style="text-align:left">Lexes unified diffs or patches</td>
</tr>
<tr>
<td style="text-align:center">elixir</td>
<td style="text-align:center">elixir,exs</td>
<td style="text-align:left">Elixir language (elixir-lang.org)</td>
</tr>
<tr>
<td style="text-align:center">erb</td>
<td style="text-align:center">eruby,rhtml</td>
<td style="text-align:left">Embedded ruby template files</td>
</tr>
<tr>
<td style="text-align:center">erlang</td>
<td style="text-align:center">erl</td>
<td style="text-align:left">The Erlang programming language (erlang.org)</td>
</tr>
<tr>
<td style="text-align:center">factor</td>
<td style="text-align:center"></td>
<td style="text-align:left">Factor, the practical stack language (factorcode.org)</td>
</tr>
<tr>
<td style="text-align:center">gherkin</td>
<td style="text-align:center">cucumber,behat</td>
<td style="text-align:left">A business-readable spec DSL ( github.com/cucumber/cucumber/wiki/Gherkin )</td>
</tr>
<tr>
<td style="text-align:center">glsl</td>
<td style="text-align:center"></td>
<td style="text-align:left">The GLSL shader language</td>
</tr>
<tr>
<td style="text-align:center">go</td>
<td style="text-align:center">go,golang</td>
<td style="text-align:left">The Go programming language (<a href="http://golang.org" target="_blank" rel="external">http://golang.org</a>)</td>
</tr>
<tr>
<td style="text-align:center">groovy</td>
<td style="text-align:center"></td>
<td style="text-align:left">The Groovy programming language (groovy.codehaus.org)</td>
</tr>
<tr>
<td style="text-align:center">haml</td>
<td style="text-align:center">HAML</td>
<td style="text-align:left">The Haml templating system for Ruby (haml.info)</td>
</tr>
<tr>
<td style="text-align:center">handlebars</td>
<td style="text-align:center">hbs,mustache</td>
<td style="text-align:left">the Handlebars and Mustache templating languages</td>
</tr>
<tr>
<td style="text-align:center">haskell</td>
<td style="text-align:center">hs</td>
<td style="text-align:left">The Haskell programming language (haskell.org)</td>
</tr>
<tr>
<td style="text-align:center">html</td>
<td style="text-align:center"></td>
<td style="text-align:left">HTML, the markup language of the web</td>
</tr>
<tr>
<td style="text-align:center">http</td>
<td style="text-align:center"></td>
<td style="text-align:left">http requests and responses</td>
</tr>
<tr>
<td style="text-align:center">ini</td>
<td style="text-align:center"></td>
<td style="text-align:left">the INI configuration format</td>
</tr>
<tr>
<td style="text-align:center">io</td>
<td style="text-align:center"></td>
<td style="text-align:left">The IO programming language (<a href="http://iolanguage.com" target="_blank" rel="external">http://iolanguage.com</a>)</td>
</tr>
<tr>
<td style="text-align:center">java</td>
<td style="text-align:center"></td>
<td style="text-align:left">The Java programming language (java.com)</td>
</tr>
<tr>
<td style="text-align:center">javascript</td>
<td style="text-align:center">js</td>
<td style="text-align:left">JavaScript, the browser scripting language</td>
</tr>
<tr>
<td style="text-align:center">json</td>
<td style="text-align:center"></td>
<td style="text-align:left">JavaScript Object Notation (json.org)</td>
</tr>
<tr>
<td style="text-align:center">json-doc</td>
<td style="text-align:center"></td>
<td style="text-align:left">JavaScript Object Notation with extenstions for documentation</td>
</tr>
<tr>
<td style="text-align:center">liquid</td>
<td style="text-align:center"></td>
<td style="text-align:left">Liquid is a templating engine for Ruby (liquidmarkup.org)</td>
</tr>
<tr>
<td style="text-align:center">literate_coffeescript</td>
<td style="text-align:center">litcoffee</td>
<td style="text-align:left">Literate coffeescript</td>
</tr>
<tr>
<td style="text-align:center">literate_haskell</td>
<td style="text-align:center">lithaskell,lhaskell,lhs</td>
<td style="text-align:left">Literate haskell</td>
</tr>
<tr>
<td style="text-align:center">llvm</td>
<td style="text-align:center"></td>
<td style="text-align:left">The LLVM Compiler Infrastructure (<a href="http://llvm.org/" target="_blank" rel="external">http://llvm.org/</a>)</td>
</tr>
<tr>
<td style="text-align:center">lua</td>
<td style="text-align:center"></td>
<td style="text-align:left">Lua (<a href="http://www.lua.org" target="_blank" rel="external">http://www.lua.org</a>)</td>
</tr>
<tr>
<td style="text-align:center">make</td>
<td style="text-align:center">makefile,mf,gnumake,bsdmake</td>
<td style="text-align:left">Makefile syntax</td>
</tr>
<tr>
<td style="text-align:center">markdown</td>
<td style="text-align:center">md,mkd</td>
<td style="text-align:left">Markdown, a light-weight markup language for authors</td>
</tr>
<tr>
<td style="text-align:center">matlab</td>
<td style="text-align:center">m</td>
<td style="text-align:left">Matlab</td>
</tr>
<tr>
<td style="text-align:center">moonscript</td>
<td style="text-align:center">moon</td>
<td style="text-align:left">Moonscript (<a href="http://www.moonscript.org" target="_blank" rel="external">http://www.moonscript.org</a>)</td>
</tr>
<tr>
<td style="text-align:center">nginx</td>
<td style="text-align:center"></td>
<td style="text-align:left">configuration files for the nginx web server (nginx.org)</td>
</tr>
<tr>
<td style="text-align:center">nim</td>
<td style="text-align:center">nimrod</td>
<td style="text-align:left">The Nim programming language (<a href="http://nim-lang.org/" target="_blank" rel="external">http://nim-lang.org/</a>)</td>
</tr>
<tr>
<td style="text-align:center">objective_c</td>
<td style="text-align:center">objc</td>
<td style="text-align:left">an extension of C commonly used to write Apple software</td>
</tr>
<tr>
<td style="text-align:center">ocaml</td>
<td style="text-align:center"></td>
<td style="text-align:left">Objective CAML (ocaml.org)</td>
</tr>
<tr>
<td style="text-align:center">perl</td>
<td style="text-align:center">pl</td>
<td style="text-align:left">The Perl scripting language (perl.org)</td>
</tr>
<tr>
<td style="text-align:center">php</td>
<td style="text-align:center">php,php3,php4,php5</td>
<td style="text-align:left">The PHP scripting language (php.net)</td>
</tr>
<tr>
<td style="text-align:center">plaintext</td>
<td style="text-align:center">text</td>
<td style="text-align:left">A boring lexer that doesn’t highlight anything [aliases: text]</td>
</tr>
<tr>
<td style="text-align:center">powershell</td>
<td style="text-align:center">posh</td>
<td style="text-align:left">powershell [aliases: posh]</td>
</tr>
<tr>
<td style="text-align:center">praat</td>
<td style="text-align:center"></td>
<td style="text-align:left">The Praat scripting language (praat.org)</td>
</tr>
<tr>
<td style="text-align:center">prolog</td>
<td style="text-align:center">prolog</td>
<td style="text-align:left">The Prolog programming language (<a href="http://en.wikipedia.org/wiki/Prolog" target="_blank" rel="external">http://en.wikipedia.org/wiki/Prolog</a>)</td>
</tr>
<tr>
<td style="text-align:center">properties</td>
<td style="text-align:center"></td>
<td style="text-align:left">.properties config files for Java</td>
</tr>
<tr>
<td style="text-align:center">puppet</td>
<td style="text-align:center">pp</td>
<td style="text-align:left">The Puppet configuration management language (puppetlabs.org)</td>
</tr>
<tr>
<td style="text-align:center">python</td>
<td style="text-align:center">py</td>
<td style="text-align:left">The Python programming language (python.org)</td>
</tr>
<tr>
<td style="text-align:center">qml</td>
<td style="text-align:center">qml</td>
<td style="text-align:left">QML, a UI markup language</td>
</tr>
<tr>
<td style="text-align:center">r</td>
<td style="text-align:center">r,R,s,S</td>
<td style="text-align:left">The R statistics language (r-project.org)</td>
</tr>
<tr>
<td style="text-align:center">racket</td>
<td style="text-align:center"></td>
<td style="text-align:left">Racket is a Lisp descended from Scheme (racket-lang.org)</td>
</tr>
<tr>
<td style="text-align:center">ruby</td>
<td style="text-align:center">rb</td>
<td style="text-align:left">The Ruby programming language (ruby-lang.org)</td>
</tr>
<tr>
<td style="text-align:center">rust</td>
<td style="text-align:center">rs</td>
<td style="text-align:left">The Rust programming language (rust-lang.org)</td>
</tr>
<tr>
<td style="text-align:center">sass</td>
<td style="text-align:center"></td>
<td style="text-align:left">The Sass stylesheet language language (sass-lang.com)</td>
</tr>
<tr>
<td style="text-align:center">scala</td>
<td style="text-align:center">scala</td>
<td style="text-align:left">The Scala programming language (scala-lang.org)</td>
</tr>
<tr>
<td style="text-align:center">scheme</td>
<td style="text-align:center"></td>
<td style="text-align:left">The Scheme variant of Lisp</td>
</tr>
<tr>
<td style="text-align:center">scss</td>
<td style="text-align:center"></td>
<td style="text-align:left">SCSS stylesheets (sass-lang.com)</td>
</tr>
<tr>
<td style="text-align:center">sed</td>
<td style="text-align:center"></td>
<td style="text-align:left">sed, the ultimate stream editor</td>
</tr>
<tr>
<td style="text-align:center">shell</td>
<td style="text-align:center">bash,zsh,ksh,sh</td>
<td style="text-align:left">Various shell languages, including sh and bash</td>
</tr>
<tr>
<td style="text-align:center">slim</td>
<td style="text-align:center"></td>
<td style="text-align:left">The Slim template language</td>
</tr>
<tr>
<td style="text-align:center">smalltalk</td>
<td style="text-align:center">st,squeak]</td>
<td style="text-align:left">The Smalltalk programming language</td>
</tr>
<tr>
<td style="text-align:center">sml</td>
<td style="text-align:center">ml</td>
<td style="text-align:left">Standard ML</td>
</tr>
<tr>
<td style="text-align:center">sql</td>
<td style="text-align:center"></td>
<td style="text-align:left">Structured Query Language, for relational databases</td>
</tr>
<tr>
<td style="text-align:center">swift</td>
<td style="text-align:center"></td>
<td style="text-align:left">Multi paradigm, compiled programming language developed by Apple for iOS and OS X development. (developer.apple.com/swift)</td>
</tr>
<tr>
<td style="text-align:center">tcl</td>
<td style="text-align:center"></td>
<td style="text-align:left">The Tool Command Language (tcl.tk)</td>
</tr>
<tr>
<td style="text-align:center">tex</td>
<td style="text-align:center">TeX,LaTeX,latex</td>
<td style="text-align:left">The TeX typesetting system</td>
</tr>
<tr>
<td style="text-align:center">toml</td>
<td style="text-align:center"></td>
<td style="text-align:left">the TOML configuration format (<a href="https://github.com/mojombo/toml" target="_blank" rel="external">https://github.com/mojombo/toml</a>)</td>
</tr>
<tr>
<td style="text-align:center">tulip</td>
<td style="text-align:center">tlp</td>
<td style="text-align:left">The tulip programming language <a href="http://github.com/jneen/tulip" target="_blank" rel="external">http://github.com/jneen/tulip</a></td>
</tr>
<tr>
<td style="text-align:center">vb</td>
<td style="text-align:center">visualbasic</td>
<td style="text-align:left">Visual Basic</td>
</tr>
<tr>
<td style="text-align:center">viml</td>
<td style="text-align:center">vim,vimscript,ex</td>
<td style="text-align:left">VimL, the scripting language for the Vim editor (vim.org)</td>
</tr>
<tr>
<td style="text-align:center">xml</td>
<td style="text-align:center"></td>
<td style="text-align:left"><desc for="this-lexer">XML</desc></td>
</tr>
<tr>
<td style="text-align:center">yaml</td>
<td style="text-align:center">yml</td>
<td style="text-align:left">Yaml Ain’t Markup Language (yaml.org)</td>
</tr>
</tbody>
</table>
<h1 id="Sample"><a href="#Sample" class="headerlink" title="Sample"></a>Sample</h1><h4 id="C"><a href="#C" class="headerlink" title="C"></a>C</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span> <span class="params">(<span class="keyword">char</span> *argc <span class="keyword">char</span> **argv)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">return</span> ;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="ruby"><a href="#ruby" class="headerlink" title="ruby"></a>ruby</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">module</span> <span class="title">Jekyll</span></span></div><div class="line"></div><div class="line">  <span class="class"><span class="keyword">class</span> <span class="title">PrismBlock</span> &lt; Liquid::Block</span></div><div class="line">    <span class="keyword">include</span> Liquid::StandardFilters</div><div class="line"></div><div class="line">    OPTIONS_SYNTAX = <span class="regexp">%r&#123;^([a-zA-Z0-9.+#-]+)((\s+\w+(=[0-9,-]+)?)*)$&#125;</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">initialize</span><span class="params">(tag_name, markup, tokens)</span></span></div><div class="line">      <span class="keyword">super</span></div><div class="line">      <span class="keyword">if</span> markup.strip =~ OPTIONS_SYNTAX</div><div class="line">        @lang = $1</div><div class="line">        <span class="keyword">if</span> <span class="keyword">defined</span>?($2) &amp;&amp; $2 != <span class="string">''</span></div><div class="line">          tmp_options = &#123;&#125;</div><div class="line">          $2.split.each <span class="keyword">do</span> <span class="params">|opt|</span></div><div class="line">            key, value = opt.split(<span class="string">'='</span>)</div><div class="line">            <span class="keyword">if</span> value.<span class="literal">nil</span>?</div><div class="line">              value = <span class="literal">true</span></div><div class="line">            <span class="keyword">end</span></div><div class="line">            tmp_options[key] = value</div><div class="line">          <span class="keyword">end</span></div><div class="line">          @options = tmp_options</div><div class="line">        <span class="keyword">else</span></div><div class="line">          @options = &#123; <span class="string">"linenos"</span> =&gt; <span class="string">""</span> &#125;</div><div class="line">        <span class="keyword">end</span></div><div class="line">      <span class="keyword">else</span></div><div class="line">        raise SyntaxError.new(<span class="string">"Syntax Error in 'prism' - Valid syntax: prism &lt;lang&gt; [linenos(='1-5')]"</span>)</div><div class="line">      <span class="keyword">end</span></div><div class="line">    <span class="keyword">end</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">render</span><span class="params">(context)</span></span></div><div class="line">      code = h(<span class="keyword">super</span>).strip</div><div class="line"></div><div class="line">      <span class="keyword">if</span> @options[<span class="string">"linenos"</span>] == <span class="literal">true</span></div><div class="line">        @options[<span class="string">"linenos"</span>] = <span class="string">"1-<span class="subst">#&#123;code.lines.count&#125;</span>"</span></div><div class="line">      <span class="keyword">end</span></div><div class="line"></div><div class="line">      <span class="string">&lt;&lt;-HTML</span></div><div class="line">&lt;div&gt;</div><div class="line">  &lt;pre data-line='<span class="subst">#&#123;@options[<span class="string">"linenos"</span>]&#125;</span>'&gt;&lt;code class='language-<span class="subst">#&#123;@lang&#125;</span>'&gt;<span class="subst">#&#123;code&#125;</span>&lt;/code&gt;&lt;/pre&gt;</div><div class="line">&lt;/div&gt;</div><div class="line">      HTML</div><div class="line">    <span class="keyword">end</span></div><div class="line">  <span class="keyword">end</span></div><div class="line"></div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line">Liquid::Template.register_tag(<span class="string">'prism'</span>, Jekyll::PrismBlock)</div></pre></td></tr></table></figure>
<h4 id="makefile"><a href="#makefile" class="headerlink" title="makefile"></a>makefile</h4><figure class="highlight makefile"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">BUILDDIR      = _build</div><div class="line">EXTRAS       ?= <span class="variable">$(BUILDDIR)</span>/extras</div><div class="line"></div><div class="line"><span class="meta"><span class="meta-keyword">.PHONY</span>: main clean</span></div><div class="line"></div><div class="line"><span class="section">main:</span></div><div class="line">	@echo <span class="string">"Building main facility..."</span></div><div class="line">	build_main <span class="variable">$(BUILDDIR)</span></div><div class="line"></div><div class="line"><span class="section">clean:</span></div><div class="line">	rm -rf <span class="variable">$(BUILDDIR)</span>/*</div></pre></td></tr></table></figure>
<h4 id="markdown"><a href="#markdown" class="headerlink" title="markdown"></a>markdown</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="section"># hello world</span></div><div class="line"></div><div class="line">you can write text [<span class="string">with links</span>](<span class="link">http://example.com</span>) inline or [<span class="string">link references</span>][<span class="symbol">1</span>].</div><div class="line"></div><div class="line"><span class="bullet">* </span>one <span class="emphasis">_thing_</span> has <span class="emphasis">*em*</span>phasis</div><div class="line"><span class="bullet">* </span>two <span class="strong">__things__</span> are <span class="strong">**bold**</span></div><div class="line"></div><div class="line">[<span class="symbol">1</span>]: <span class="link">http://example.com</span></div><div class="line"></div><div class="line">---</div><div class="line"></div><div class="line"><span class="section">hello world</span></div><div class="line">===========</div><div class="line"></div><div class="line">&lt;this_is inline="xml"&gt;&lt;/this_is&gt;</div><div class="line"></div><div class="line"><span class="quote">&gt; markdown is so cool</span></div><div class="line"></div><div class="line"><span class="code">    so are code segments</span></div><div class="line"></div><div class="line"><span class="bullet">1. </span>one thing (yeah!)</div><div class="line"><span class="bullet">2. </span>two thing <span class="code">`i can write code`</span>, and <span class="code">`more`</span> wipee!</div></pre></td></tr></table></figure>
<h4 id="elisp"><a href="#elisp" class="headerlink" title="elisp"></a>elisp</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">(defun prompt-for-cd ()</div><div class="line">   &quot;Prompts</div><div class="line">    for CD&quot;</div><div class="line">   (prompt-read &quot;Title&quot; 1.53 1 2/4 1.7 1.7e0 2.9E-4 +42 -7 #b001 #b001/100 #o777 #O777 #xabc55 #c(0 -5.6))</div><div class="line">   (prompt-read &quot;Artist&quot; &amp;rest)</div><div class="line">   (or (parse-integer (prompt-read &quot;Rating&quot;) :junk-allowed t) 0)</div><div class="line">  (if x (format t &quot;yes&quot;) (format t &quot;no&quot; nil) ;and here comment</div><div class="line">  )</div><div class="line">  ;; second line comment</div><div class="line">  &apos;(+ 1 2)</div><div class="line">  (defvar *lines*)                ; list of all lines</div><div class="line">  (position-if-not #&apos;sys::whitespacep line :start beg))</div><div class="line">  (quote (privet 1 2 3))</div><div class="line">  &apos;(hello world)</div><div class="line">  (* 5 7)</div><div class="line">  (1 2 34 5)</div><div class="line">  (:use &quot;aaaa&quot;)</div><div class="line">  (let ((x 10) (y 20))</div><div class="line">    (print (+ x y))</div><div class="line">  )</div></pre></td></tr></table></figure>
<h4 id="bash"><a href="#bash" class="headerlink" title="bash"></a>bash</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"></div><div class="line"><span class="comment">###### CONFIG</span></div><div class="line">ACCEPTED_HOSTS=<span class="string">"/root/.hag_accepted.conf"</span></div><div class="line">BE_VERBOSE=<span class="literal">false</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$UID</span>"</span> <span class="_">-ne</span> 0 ]</div><div class="line"><span class="keyword">then</span></div><div class="line"> <span class="built_in">echo</span> <span class="string">"Superuser rights required"</span></div><div class="line"> <span class="built_in">exit</span> 2</div><div class="line"><span class="keyword">fi</span></div><div class="line"></div><div class="line"><span class="function"><span class="title">genApacheConf</span></span>()&#123;</div><div class="line"> <span class="built_in">echo</span> <span class="_">-e</span> <span class="string">"# Host <span class="variable">$&#123;HOME_DIR&#125;</span><span class="variable">$1</span>/<span class="variable">$2</span> :"</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="java"><a href="#java" class="headerlink" title="java"></a>java</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * <span class="doctag">@author</span> John Smith &lt;john.smith@example.com&gt;</div><div class="line">*/</div><div class="line"><span class="keyword">package</span> l2f.gameserver.model;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">L2Char</span> <span class="keyword">extends</span> <span class="title">L2Object</span> </span>&#123;</div><div class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Short ERROR = <span class="number">0x0001</span>;</div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">moveTo</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span> </span>&#123;</div><div class="line">    _ai = <span class="keyword">null</span>;</div><div class="line">    log(<span class="string">"Should not be called"</span>);</div><div class="line">    <span class="keyword">if</span> (<span class="number">1</span> &gt; <span class="number">5</span>) &#123; <span class="comment">// wtf!?</span></div><div class="line">      <span class="keyword">return</span>;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="json"><a href="#json" class="headerlink" title="json"></a>json</h4><figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">[</div><div class="line">  &#123;</div><div class="line">    <span class="attr">"title"</span>: <span class="string">"apples"</span>,</div><div class="line">    <span class="attr">"count"</span>: [<span class="number">12000</span>, <span class="number">20000</span>],</div><div class="line">    <span class="attr">"description"</span>: &#123;<span class="attr">"text"</span>: <span class="string">"..."</span>, <span class="attr">"sensitive"</span>: <span class="literal">false</span>&#125;</div><div class="line">  &#125;,</div><div class="line">  &#123;</div><div class="line">    <span class="attr">"title"</span>: <span class="string">"oranges"</span>,</div><div class="line">    <span class="attr">"count"</span>: [<span class="number">17500</span>, <span class="literal">null</span>],</div><div class="line">    <span class="attr">"description"</span>: &#123;<span class="attr">"text"</span>: <span class="string">"..."</span>, <span class="attr">"sensitive"</span>: <span class="literal">false</span>&#125;</div><div class="line">  &#125;</div><div class="line">]</div></pre></td></tr></table></figure>
<h4 id="objc"><a href="#objc" class="headerlink" title="objc"></a>objc</h4><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#import <span class="meta-string">&lt;UIKit/UIKit.h&gt;</span></span></div><div class="line"><span class="meta">#import <span class="meta-string">"Dependency.h"</span></span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">@protocol</span> <span class="title">WorldDataSource</span></span></div><div class="line"><span class="keyword">@optional</span></div><div class="line">- (<span class="built_in">NSString</span>*)worldName;</div><div class="line"><span class="keyword">@required</span></div><div class="line">- (<span class="built_in">BOOL</span>)allowsToLive;</div><div class="line"><span class="keyword">@end</span></div><div class="line"></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">readonly</span>) <span class="built_in">NSString</span> *title;</div><div class="line">- (<span class="keyword">IBAction</span>) show;</div><div class="line"><span class="keyword">@end</span></div></pre></td></tr></table></figure>
<h4 id="shell"><a href="#shell" class="headerlink" title="shell"></a>shell</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install gcc</div></pre></td></tr></table></figure>
<h4 id="swift"><a href="#swift" class="headerlink" title="swift"></a>swift</h4><figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> defaultName = <span class="string">"xiaoli"</span></div><div class="line"><span class="keyword">var</span> userDefinedName: <span class="type">String</span>?;   <span class="comment">//默认值为 nil</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> <span class="type">NameToUse</span> = userDefinedName ?? defaultName</div><div class="line"><span class="comment">// userDefinedName 的值为空，所以 NameToUse 的值为 "xiaoli"</span></div><div class="line"></div><div class="line">userDefinedName = <span class="string">"zhangsan"</span>;</div><div class="line"><span class="keyword">var</span> <span class="type">NameToUse1</span> = userDefinedName ?? defaultName</div><div class="line"><span class="comment">// userDefinedName 有值，则 NameToUse 的值为 ”zhangsan”</span></div></pre></td></tr></table></figure>
<h4 id="css"><a href="#css" class="headerlink" title="css"></a>css</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">@<span class="keyword">font-face</span> &#123;</div><div class="line">  <span class="attribute">font-family</span>: Chunkfive; <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">'Chunkfive.otf'</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-tag">body</span>, <span class="selector-class">.usertext</span> &#123;</div><div class="line">  <span class="attribute">color</span>: <span class="number">#F0F0F0</span>; <span class="attribute">background</span>: <span class="number">#600</span>;</div><div class="line">  <span class="attribute">font-family</span>: Chunkfive, sans;</div><div class="line">&#125;</div><div class="line"></div><div class="line">@<span class="keyword">import</span> url(print.css);</div><div class="line">@<span class="keyword">media</span> print &#123;</div><div class="line">  <span class="selector-tag">a</span><span class="selector-attr">[href^=http]</span><span class="selector-pseudo">::after</span> &#123;</div><div class="line">    <span class="attribute">content</span>: <span class="built_in">attr</span>(href)</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="less"><a href="#less" class="headerlink" title="less"></a>less</h4><figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">@import</span> <span class="string">"fruits"</span>;</div><div class="line"></div><div class="line"><span class="variable">@rhythm:</span> <span class="number">1.5em</span>;</div><div class="line"></div><div class="line"><span class="keyword">@media</span> screen and (<span class="attribute">min-resolution</span>: <span class="number">2dppx</span>) &#123;</div><div class="line">    <span class="selector-tag">body</span> &#123;<span class="attribute">font-size</span>: <span class="number">125%</span>&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-tag">section</span> &gt; <span class="selector-class">.foo</span> + <span class="selector-id">#bar</span><span class="selector-pseudo">:hover</span> <span class="selector-attr">[href*="less"]</span> &#123;</div><div class="line">    <span class="attribute">margin</span>:     <span class="variable">@rhythm</span> <span class="number">0</span> <span class="number">0</span> <span class="variable">@rhythm</span>;</div><div class="line">    <span class="attribute">padding</span>:    calc(<span class="number">5%</span> + <span class="number">20px</span>);</div><div class="line">    <span class="attribute">background</span>: <span class="number">#f00ba7</span> url(<span class="string">http://placehold.alpha-centauri/42.png</span>) no-repeat;</div><div class="line">    <span class="attribute">background-image</span>: linear-gradient(-<span class="number">135deg</span>, wheat, fuchsia) <span class="meta">!important</span> ;</div><div class="line">    <span class="attribute">background-blend-mode</span>: multiply;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">@font-face</span> &#123;</div><div class="line">    <span class="attribute">font-family</span>: <span class="comment">/* ? */</span> <span class="string">'Omega'</span>;</div><div class="line">    <span class="attribute">src</span>: url(<span class="string">'../fonts/omega-webfont.woff?v=2.0.2'</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.icon-baz</span><span class="selector-pseudo">::before</span> &#123;</div><div class="line">    <span class="attribute">display</span>:     inline-block;</div><div class="line">    <span class="attribute">font-family</span>: <span class="string">"Omega"</span>, Alpha, sans-serif;</div><div class="line">    <span class="attribute">content</span>:     <span class="string">"\f085"</span>;</div><div class="line">    <span class="attribute">color</span>:       rgba(<span class="number">98</span>, <span class="number">76</span> <span class="comment">/* or 54 */</span>, <span class="number">231</span>, .<span class="number">75</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="tex"><a href="#tex" class="headerlink" title="tex"></a>tex</h4><figure class="highlight tex"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="tag">\<span class="name">documentclass</span><span class="string">&#123;article&#125;</span></span></div><div class="line"><span class="tag">\<span class="name">usepackage</span><span class="string">[koi8-r]</span><span class="string">&#123;inputenc&#125;</span></span></div><div class="line"><span class="tag">\<span class="name">hoffset</span>=<span class="number">0pt</span></span></div><div class="line"><span class="tag">\<span class="name">voffset</span>=<span class="number">.3em</span></span></div><div class="line"><span class="tag">\<span class="name">tolerance</span>=<span class="number">400</span></span></div><div class="line"><span class="tag">\<span class="name">newcommand</span><span class="string">&#123;\eTiX&#125;</span><span class="string">&#123;\TeX&#125;</span></span></div><div class="line"><span class="tag">\<span class="name">begin</span><span class="string">&#123;document&#125;</span></span></div><div class="line"><span class="tag">\<span class="name">section*</span><span class="string">&#123;Highlight.js&#125;</span></span></div><div class="line"><span class="tag">\<span class="name">begin</span><span class="string">&#123;table&#125;</span><span class="string">[c|c]</span></span></div><div class="line"><span class="formula">$<span class="tag">\<span class="name">frac</span></span> 12<span class="tag">\<span class="name">,</span></span> + <span class="tag">\<span class="name">,</span></span> <span class="tag">\<span class="name">frac</span></span> 1&#123;x^3&#125;<span class="tag">\<span class="name">text</span><span class="string">&#123;Hello \! world&#125;</span></span>$</span> &amp; <span class="tag">\<span class="name">textbf</span><span class="string">&#123;Goodbye\~ world&#125;</span></span> <span class="tag">\<span class="name">\</span></span><span class="tag">\<span class="name">eTiX</span></span> <span class="formula">$ <span class="tag">\<span class="name">pi</span>=<span class="number">400</span></span> $</span></div><div class="line"><span class="tag">\<span class="name">end</span><span class="string">&#123;table&#125;</span></span></div><div class="line">Ch<span class="tag">\<span class="name">'</span></span>erie, <span class="tag">\<span class="name">c</span><span class="string">&#123;c&#125;</span></span>a ne me pla<span class="tag">\<span class="name">^</span></span><span class="tag">\<span class="name">i</span></span> t pas! <span class="comment">% comment \b</span></div><div class="line">G<span class="tag">\<span class="name">"</span></span>otterd<span class="tag">\<span class="name">"</span></span>ammerung~45<span class="tag">\<span class="name">%</span>=<span class="number">34</span></span>.</div><div class="line"><span class="formula">$$</span></div><div class="line">    <span class="tag">\<span class="name">int</span></span><span class="tag">\<span class="name">limits</span></span>_&#123;0&#125;^&#123;<span class="tag">\<span class="name">pi</span></span>&#125;<span class="tag">\<span class="name">frac</span><span class="string">&#123;4&#125;</span><span class="string">&#123;x-7&#125;</span>=<span class="number">3</span></span></div><div class="line">$$</div><div class="line"><span class="tag">\<span class="name">end</span><span class="string">&#123;document&#125;</span></span></div></pre></td></tr></table></figure>
<h4 id="asm"><a href="#asm" class="headerlink" title="asm"></a>asm</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">.text</div><div class="line"></div><div class="line">.global connect</div><div class="line">connect:</div><div class="line">    mov     r3, #2              ; s-&gt;sin_family = AF_INET</div><div class="line">    strh    r3, [sp]</div><div class="line">    ldr     r3, =server_port    ; s-&gt;sin_port = server_port</div><div class="line">    ldr     r3, [r3]</div><div class="line">    strh    r3, [sp, #2]</div><div class="line">    ldr     r3, =server_addr    ; s-&gt;sin_addr = server_addr</div><div class="line">    ldr     r3, [r3]</div><div class="line">    str     r3, [sp, #4]</div><div class="line">    mov     r3, #0              ; bzero(&amp;s-&gt;sin_zero)</div><div class="line">    str     r3, [sp, #8]</div><div class="line">    str     r3, [sp, #12]</div><div class="line">    mov     r1, sp      ; const struct sockaddr *addr = sp</div><div class="line"></div><div class="line">    ldr     r7, =connect_call</div><div class="line">    ldr     r7, [r7]</div><div class="line">    swi     #0</div><div class="line"></div><div class="line">    add     sp, sp, #16</div><div class="line">    pop     &#123;r0&#125;        ; pop sockfd</div><div class="line"></div><div class="line">    pop     &#123;r7&#125;</div><div class="line">    pop     &#123;fp, ip, lr&#125;</div><div class="line">    mov     sp, ip</div><div class="line">    bx      lr</div><div class="line"></div><div class="line">.data</div><div class="line">socket_call:   .long 281</div><div class="line">connect_call:  .long 283</div><div class="line"></div><div class="line">/* all addresses are network byte-order (big-endian) */</div><div class="line">server_addr:            .long 0x0100007f ; localhost</div><div class="line">server_port:            .hword 0x0b1a</div></pre></td></tr></table></figure>
<h4 id="javascript"><a href="#javascript" class="headerlink" title="javascript"></a>javascript</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*</span></div><div class="line"> * Execute a callback function &amp; remove it from the Cordova object</div><div class="line"> */</div><div class="line">Cordova.callback = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> scId = <span class="built_in">arguments</span>[<span class="number">0</span>];</div><div class="line">    <span class="keyword">var</span> callbackRef = <span class="literal">null</span>;</div><div class="line"></div><div class="line">    <span class="keyword">var</span> parameters = [];</div><div class="line">    <span class="keyword">for</span>( <span class="keyword">var</span> i = <span class="number">1</span>; i &lt; <span class="built_in">arguments</span>.length; i++ ) &#123;</div><div class="line">        <span class="comment">//debug.log( "Adding parameter " + arguments[i] );</span></div><div class="line">        parameters[i<span class="number">-1</span>] = <span class="built_in">arguments</span>[i];</div><div class="line">    &#125;</div><div class="line">    <span class="comment">// Keep reference to callback</span></div><div class="line">    callbackRef = Cordova.callbacks[scId];</div><div class="line"></div><div class="line">    <span class="comment">// Even IDs are success-, odd are error-callbacks - make sure we remove both</span></div><div class="line">    <span class="keyword">if</span>( (scId % <span class="number">2</span>) !== <span class="number">0</span> ) &#123;</div><div class="line">        scId = scId - <span class="number">1</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">// Remove both the success as well as the error callback from the stack</span></div><div class="line">    Cordova.callbacks.splice( scId, <span class="number">2</span> );</div><div class="line"></div><div class="line">    <span class="comment">// Finally run the callback</span></div><div class="line">    <span class="keyword">if</span>( <span class="keyword">typeof</span> callbackRef == <span class="string">"function"</span> ) callbackRef.apply( <span class="keyword">this</span>, parameters );</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="comment">/*</span></div><div class="line"> * Enable a plugin for use within Cordova</div><div class="line"> */</div><div class="line">Cordova.enablePlugin = <span class="function"><span class="keyword">function</span>(<span class="params"> pluginName </span>) </span>&#123;</div><div class="line">    <span class="comment">// Enable the plugin</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="string">"typeof pluginName"</span>);</div><div class="line">    Cordova.plugins[pluginName] = <span class="literal">true</span>;</div><div class="line"></div><div class="line">    <span class="comment">// Run constructor for plugin if available</span></div><div class="line">    <span class="keyword">if</span>( <span class="keyword">typeof</span> Cordova.constructors[pluginName] == <span class="string">"function"</span> ) Cordova.constructors[pluginName]();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h1&gt;&lt;p&gt;目前使用rouge作为highlighter&lt;/p&gt;
&lt;h4 id=&quot;查看支持的themes&quot;&gt;&lt;a href=&quot;#查看支持的themes&quot;
    
    </summary>
    
    
      <category term="highlight" scheme="http://darcylee.coding.me/hexo-blog/tags/highlight/"/>
    
      <category term="sample" scheme="http://darcylee.coding.me/hexo-blog/tags/sample/"/>
    
  </entry>
  
  <entry>
    <title>ibus使用过程中碰到的问题</title>
    <link href="http://darcylee.coding.me/hexo-blog/2016/11/04/2016-11-4-debian8-use-ibus/"/>
    <id>http://darcylee.coding.me/hexo-blog/2016/11/04/2016-11-4-debian8-use-ibus/</id>
    <published>2016-11-04T06:19:30.000Z</published>
    <updated>2016-12-06T09:17:14.038Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>主要针对在<code>debian8</code> 和 <code>ubuntu-gnome-1604</code>linux系统使用过程中遇到的问题</p>
</blockquote>
<h1 id="ibus-sunpiny-无法打开设置"><a href="#ibus-sunpiny-无法打开设置" class="headerlink" title="ibus-sunpiny 无法打开设置"></a>ibus-sunpiny 无法打开设置</h1><p>下载python-ibus安装即可，依赖python-dbus软件包<br>先安装python-dbus</p>
<p><code>sudo apt-get install python-dbus</code></p>
<p>然后下载<code>python-ibus</code>,<a href="http://packages.ubuntu.com/search?suite=default&amp;section=all&amp;arch=any&amp;keywords=python-ibus&amp;searchon=names" target="_blank" rel="external">下载地址</a></p>
<h1 id="输入框跟随问题。"><a href="#输入框跟随问题。" class="headerlink" title="输入框跟随问题。"></a>输入框跟随问题。</h1><p>主要是因为ibus没有在GUI框架中注册</p>
<p>以下是傻瓜解决方法。安装几个包</p>
<p><code>sudo apt-get install ibus-gtk ibus-gtk3 ibus-qt4</code></p>
<p>将linux主流的GUI 框架都注册了，然后注销或者重启就搞定。</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;主要针对在&lt;code&gt;debian8&lt;/code&gt; 和 &lt;code&gt;ubuntu-gnome-1604&lt;/code&gt;linux系统使用过程中遇到的问题&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;ibus-sunpiny-无法打开设置&quot;&gt;&lt;
    
    </summary>
    
    
      <category term="linux" scheme="http://darcylee.coding.me/hexo-blog/tags/linux/"/>
    
      <category term="note" scheme="http://darcylee.coding.me/hexo-blog/tags/note/"/>
    
  </entry>
  
  <entry>
    <title>搭建简单的git服务器</title>
    <link href="http://darcylee.coding.me/hexo-blog/2016/10/10/2016-10-10-setup-simple-git-server/"/>
    <id>http://darcylee.coding.me/hexo-blog/2016/10/10/2016-10-10-setup-simple-git-server/</id>
    <published>2016-10-10T02:19:30.000Z</published>
    <updated>2016-12-06T09:17:14.038Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装<code>git</code></h2><blockquote>
<p>sudo apt-get install git</p>
</blockquote>
<h2 id="创建一个git用户和组"><a href="#创建一个git用户和组" class="headerlink" title="创建一个git用户和组"></a>创建一个<code>git</code>用户和组</h2><p>创建一个<code>git</code>组</p>
<blockquote>
<p>sudo groupadd git</p>
</blockquote>
<p>创建一个<code>git</code>用户，指定家目录<code>/home/git</code>, 指定登入<code>shell</code>为git-shell,禁止<code>git</code>用户以<code>bash-shell</code>登入服务器,并加入用户组<code>git</code></p>
<blockquote>
<p>sudo mkdir /home/git</p>
<p>sudo chown git:git /home/git</p>
<p>sudo useradd -d /home/git -m git -s /usr/bin/git-shell -G git</p>
</blockquote>
<h2 id="创建证书登入"><a href="#创建证书登入" class="headerlink" title="创建证书登入"></a>创建证书登入</h2><p>收集所有需要登入的用户公钥, 就是用户的<code>id_rsa.pub</code>文件,把公钥导入到<code>/home/git/.ssh/authorized_keys</code></p>
<p>如果没有<code>authorized_keys</code>文件则创建</p>
<blockquote>
<p>touch /home/git/.ssh/authorized_keys</p>
</blockquote>
<p>然后导入需要访问该服务器git仓库的用户的ssh公钥， 可以手动导入</p>
<blockquote>
<p>cat id_rsa.pub &gt;&gt; /home/git/.ssh/authorized_keys</p>
</blockquote>
<p>如果觉得手动导入比较麻烦，可以使用下面方法导入</p>
<blockquote>
<p>ssh-copy-id -i /your/path/of/id_rsa.pub git@server<a href="`server`请换成你的树梅派`ip`地址或者域名">^1</a></p>
</blockquote>
<h2 id="创建一个仓库"><a href="#创建一个仓库" class="headerlink" title="创建一个仓库"></a>创建一个仓库</h2><p>在<code>/srv</code>下创建一个git仓库</p>
<blockquote>
<p>cd /srv</p>
<p>sudo git init –bare test.git</p>
</blockquote>
<p>修改属性,设置只允许<code>git</code>用户访问</p>
<blockquote>
<p>sudo chown git:git -R test.git</p>
</blockquote>
<h2 id="克隆远程仓库"><a href="#克隆远程仓库" class="headerlink" title="克隆远程仓库"></a>克隆远程仓库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">git clone git@server:/srv/test.git</div><div class="line">Cloning into &apos;test&apos;...</div><div class="line">warning: You appear to have cloned an empty repository.</div><div class="line">Checking connectivity... done.</div></pre></td></tr></table></figure>
<p>到此<code>git</code>服务器搭建完成</p>
<h2 id="NOTE"><a href="#NOTE" class="headerlink" title="NOTE"></a>NOTE</h2>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;安装git&quot;&gt;&lt;a href=&quot;#安装git&quot; class=&quot;headerlink&quot; title=&quot;安装git&quot;&gt;&lt;/a&gt;安装&lt;code&gt;git&lt;/code&gt;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;sudo apt-get install git&lt;/p&gt;
&lt;/b
    
    </summary>
    
    
      <category term="linux" scheme="http://darcylee.coding.me/hexo-blog/tags/linux/"/>
    
      <category term="git" scheme="http://darcylee.coding.me/hexo-blog/tags/git/"/>
    
      <category term="RaspberryPi" scheme="http://darcylee.coding.me/hexo-blog/tags/RaspberryPi/"/>
    
  </entry>
  
  <entry>
    <title>zephyr项目在macos平台的开发</title>
    <link href="http://darcylee.coding.me/hexo-blog/2016/08/14/2016-8-14-Develop_zephry_project_on_mac/"/>
    <id>http://darcylee.coding.me/hexo-blog/2016/08/14/2016-8-14-Develop_zephry_project_on_mac/</id>
    <published>2016-08-14T04:19:30.000Z</published>
    <updated>2016-12-06T09:17:14.038Z</updated>
    
    <content type="html"><![CDATA[<h2 id="关于zephyr™项目"><a href="#关于zephyr™项目" class="headerlink" title="关于zephyr™项目"></a>关于<code>zephyr™</code>项目</h2><p><a href="https://www.zephyrproject.org" target="_blank" rel="external">zephyr™</a>, 首先它是一个开源的项目，主要目的是针对资源有限的系统设计的实时的系统内核，可以胜任从简单的嵌入式传感器到复杂的物联网网关等应用场景。官方的文档也相对比较完整，可以<a href="https://www.zephyrproject.org/doc/" target="_blank" rel="external">移步官网了解一下</a>。<br>该项目开源于今年2月份，到目前版本已升级到1.5.0</p>
<p>获取源代码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git clone https://gerrit.zephyrproject.org/r/zephyr</div></pre></td></tr></table></figure>
<p>zephyr™使用类似linux内核<code>Kbuild</code>构建系统来组织整个项目的，相信有一定嵌入式linux开发经验的童鞋们，看了官网的<a href="https://www.zephyrproject.org/doc/getting_started/getting_started.html" target="_blank" rel="external">QuickStart</a>文档后，很容易上手开发的， 文档中提供了三个不同平台<code>linux</code>、<code>windows</code>、<code>macOS</code>的开发环境设置介绍，如果你目前使用的是<code>linux</code>或者<code>windows</code>平台可以移步<a href="">官网</a>，寻找相对应平台的说明。这里我们要说的是基于<code>macOS</code>平台的开发环境设置。</p>
<p>虽然官网有给出<code>macOS</code>平台的<a href="https://www.zephyrproject.org/doc/getting_started/installation_mac.html" target="_blank" rel="external">开发环境设置指南</a>，但是还是会碰到一些问题，我这里记录了一下我的设置过程，以及我碰到的问题的解决办法，希望能帮到和我一样想在<code>macOS</code>平台上做基于<code>zephyr</code>的嵌入式开发的朋友。</p>
<h2 id="开发环境设置"><a href="#开发环境设置" class="headerlink" title="开发环境设置"></a>开发环境设置</h2><ul>
<li>首先请把系统升级到<code>Mac OS X 10.11 (El Capitan)</code>，我是基于这个版本来设置的，官网也有相应的声明。</li>
</ul>
<h4 id="安装依赖包"><a href="#安装依赖包" class="headerlink" title="安装依赖包"></a>安装依赖包</h4><p>安装<code>Homebrew</code>， 安装过的同学跳过， <code>Homebrew</code>好比debian系Linux系统里的<code>apt-get</code>工具，很好很强大。安装很简单，移步<a href="http://brew.sh" target="_blank" rel="external">Homebrew官网</a>，按照上面的说明安装。</p>
<p>继续安装一些工具</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$ brew install gettext qemu help2man mpfr gmp coreutils wget python3</div><div class="line"></div><div class="line">$ brew tap homebrew/dupes</div><div class="line"></div><div class="line">$ brew install grep --with-default-names</div><div class="line"></div><div class="line">$ pip3 install ply</div><div class="line"></div><div class="line">$ brew install gettext</div></pre></td></tr></table></figure>
<p>稍作设置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ brew edit crosstool-ng</div></pre></td></tr></table></figure>
<p>添加下面一行到<code>depends</code>section</p>
<pre><code>depends_on &apos;grep&apos; =&gt; &apos;--default-names&apos;
</code></pre><p>安装<code>Crosstool-ng</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ brew install crosstool-ng</div><div class="line"></div><div class="line">$ brew link --force gettext</div></pre></td></tr></table></figure>
<h4 id="编译工具链"><a href="#编译工具链" class="headerlink" title="编译工具链"></a>编译工具链</h4><p><code>macOS</code>使用的文件系统对文件名称大小写是不敏感的，而编译工具链需要一个大小写敏感的文件系统，所以我们要为编译工作提供一个大小写敏感的分区作为工具链编译空间。使用<code>macOS</code>自带的<code>diskutil</code>可以很方便的创建一个出来。创建一个8G左右的分区,分区名称可以任意，我这里叫<code>excs</code>，<strong><em>注意Format的选择</em></strong><br><img src="/img/in-post/post_zephyr_on_mac/creat_case-sensitive.png" alt="img"></p>
<p>创建好后，在<code>／Volumes</code>下面会多出一个文件夹，也就是你创建的新分区。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ ls /Volumes/</div><div class="line">Macintosh HD excs</div></pre></td></tr></table></figure>
<p>进入<code>excs</code>（根据你创建的分区名称）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$ cd /Volumes/excs</div><div class="line"></div><div class="line">$ mkdir CrossToolNG</div><div class="line"></div><div class="line">$ cd CrossToolNG</div><div class="line"></div><div class="line">$ mkdir build src x-tools</div><div class="line"></div><div class="line">$ cd build</div></pre></td></tr></table></figure>
<p>复制zephyr项目下面的配置文件到<code>build</code>目录，zephyr提供了2个平台的配置x86、arm，我这里选择的是arm，因为我的目标平台是嵌入式arm平台。<code>${ZEPHYR_BASE}</code>为你zephyr项目的根目录</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ cp $&#123;ZEPHYR_BASE&#125;/scripts/cross_compiler/arm.config .config</div></pre></td></tr></table></figure>
<p>有配置过<code>Crosstool-ng</code>的童鞋也可以自行配置，这里不再说。</p>
<p>开始构建工具链，首先</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ct-ng menuconfig</div></pre></td></tr></table></figure>
<p>执行上面的命令，进行简单的配置后退出保存，主要配置编译输出的一些目录，下图是我的配置<br><img src="/img/in-post/post_zephyr_on_mac/ct-ng_config1.png" alt="img"></p>
<p>打开<code>.config</code>文件再次确认下路径设置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">...</div><div class="line">#</div><div class="line"># Paths</div><div class="line">#</div><div class="line">CT_LOCAL_TARBALLS_DIR=&quot;/Volumes/excs/CrossToolNG/src&quot;</div><div class="line">CT_SAVE_TARBALLS=y</div><div class="line">CT_WORK_DIR=&quot;$&#123;CT_TOP_DIR&#125;/.build&quot;</div><div class="line">CT_PREFIX_DIR=&quot;/Volumes/excs/CrossToolNG/x-tools/$&#123;CT_TARGET&#125;&quot;</div><div class="line">CT_INSTALL_DIR=&quot;$&#123;CT_PREFIX_DIR&#125;&quot;</div><div class="line">...</div><div class="line">＃ 下面2行很重要，必须为n，不然编译不过</div><div class="line">CT_WANTS_STATIC_LINK=n</div><div class="line">CT_CC_STATIC_LIBSTDCXX=n</div><div class="line">...</div></pre></td></tr></table></figure>
<p>在开始编译之前，我推荐使用<code>Homebrew</code>安装gcc，不要使用<code>macOS</code>自带的gcc版本，我一开始使用自带的gcc版本编译错误，当时没有截图， 错误信息没办法提供给你们看了。安装gcc命令很简单， 如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ brew install gcc</div></pre></td></tr></table></figure>
<p>过程很漫长，差不多20分钟左右（15年中旬15寸低配macbookpro）， 在安装过程中本本风扇狂转。。。我也是醉了。。回归正题</p>
<p>安装完成后确认一下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$ gcc -v</div><div class="line">Using built-in specs.</div><div class="line">COLLECT_GCC=gcc</div><div class="line">COLLECT_LTO_WRAPPER=/usr/local/Cellar/gcc/5.3.0/libexec/gcc/x86_64-apple-darwin15.6.0/5.3.0/lto-wrapper</div><div class="line">Target: x86_64-apple-darwin15.6.0</div><div class="line">Configured with: ../configure --build=x86_64-apple-darwin15.6.0 --prefix=/usr/local/Cellar/gcc/5.3.0 --libdir=/usr/local/Cellar/gcc/5.3.0/lib/gcc/5 --enable-languages=c,c++,objc,obj-c++,fortran --program-suffix=-5 --with-gmp=/usr/local/opt/gmp --with-mpfr=/usr/local/opt/mpfr --with-mpc=/usr/local/opt/libmpc --with-isl=/usr/local/opt/isl --with-system-zlib --enable-libstdcxx-time=yes --enable-stage1-checking --enable-checking=release --enable-lto --with-build-config=bootstrap-debug --disable-werror --with-pkgversion=&apos;Homebrew gcc 5.3.0&apos; --with-bugurl=https://github.com/Homebrew/homebrew/issues --enable-plugin --disable-nls --enable-multilib --with-native-system-header-dir=/usr/include --with-sysroot=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk</div><div class="line">Thread model: posix</div><div class="line">gcc version 5.3.0 (Homebrew gcc 5.3.0)</div></pre></td></tr></table></figure>
<p>一切准备就绪，ok，开始编译工具链</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ct-ng build</div></pre></td></tr></table></figure>
<p>又是一个漫长的等待，大概15分钟左右，提示编译成功。我们察看一下<code>x-tools</code>文件夹</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ cd /Volumes/excs/CrossToolNG/x-tools</div><div class="line"></div><div class="line">$ ls</div><div class="line">arm-none-eabi</div></pre></td></tr></table></figure>
<p>交叉编译工具链产生了，试验一下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">$ cd arm-none-eabi/bin</div><div class="line"></div><div class="line">$ ./arm-none-eabi-gcc -v</div><div class="line">Using built-in specs.</div><div class="line">COLLECT_GCC=./arm-none-eabi-gcc</div><div class="line">COLLECT_LTO_WRAPPER=/Volumes/excs/CrossToolNG/x-tools/arm-none-eabi/libexec/gcc/arm-none-eabi/5.2.0/lto-wrapper</div><div class="line">Target: arm-none-eabi</div><div class="line">Configured with: /Volumes/excs/CrossToolNG/build/.build/src/gcc-5.2.0/configure --build=x86_64-build_apple-darwin15.6.0 --host=x86_64-build_apple-darwin15.6.0 --target=arm-none-eabi --prefix=/Volumes/excs/CrossToolNG/x-tools/arm-none-eabi --with-local-prefix=/Volumes/excs/CrossToolNG/x-tools/arm-none-eabi/arm-none-eabi/sysroot --with-sysroot=/Volumes/excs/CrossToolNG/x-tools/arm-none-eabi/arm-none-eabi/sysroot --with-newlib --enable-threads=no --disable-shared --with-pkgversion=&apos;crosstool-NG crosstool-ng-1.22.0&apos; --with-float=soft --enable-__cxa_atexit --with-gmp=/Volumes/excs/CrossToolNG/build/.build/arm-none-eabi/buildtools --with-mpfr=/Volumes/excs/CrossToolNG/build/.build/arm-none-eabi/buildtools --with-mpc=/Volumes/excs/CrossToolNG/build/.build/arm-none-eabi/buildtools --with-isl=/Volumes/excs/CrossToolNG/build/.build/arm-none-eabi/buildtools --with-cloog=/Volumes/excs/CrossToolNG/build/.build/arm-none-eabi/buildtools --with-libelf=/Volumes/excs/CrossToolNG/build/.build/arm-none-eabi/buildtools --enable-lto --enable-target-optspace --disable-libgomp --disable-libmudflap --disable-libssp --disable-libquadmath --disable-libquadmath-support --disable-nls --disable-multilib --enable-languages=c</div><div class="line">Thread model: single</div><div class="line">gcc version 5.2.0 (crosstool-NG crosstool-ng-1.22.0)</div></pre></td></tr></table></figure>
<p>没有问题，很好</p>
<p>回到<code>zephyr</code>工程目录</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ cd $&#123;ZEPHYR_BASE&#125;</div><div class="line"></div><div class="line">$ source zephry_env.sh</div></pre></td></tr></table></figure>
<p>编译一个例子程序helloworld试试， go</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ cd samples/hello_world/microkernel</div></pre></td></tr></table></figure>
<p>在编译前，先设置2个环境变量</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ export ZEPHYR_GCC_VARIANT=xtools</div><div class="line"></div><div class="line">$ export XTOOLS_TOOLCHAIN_PATH=/Volumes/excs/CrossToolNG/x-tools</div></pre></td></tr></table></figure>
<p>编译helloworld</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">$ make BOARD=frdm_k64f</div><div class="line">Using /Users/dl/work/proj/ex_projects/zephyr/boards/frdm_k64f/frdm_k64f_defconfig as base</div><div class="line">Merging /Users/dl/work/proj/ex_projects/zephyr/kernel/configs/nano.config</div><div class="line">Merging prj.conf</div><div class="line">#</div><div class="line"># configuration written to .config</div><div class="line">#</div><div class="line">  GEN     ./Makefile</div><div class="line">scripts/kconfig/conf --silentoldconfig Kconfig</div><div class="line">  Using /Users/dl/work/proj/ex_projects/zephyr as source for kernel</div><div class="line">  GEN     ./Makefile</div><div class="line">  CHK     include/generated/version.h</div><div class="line">  UPD     include/generated/version.h</div><div class="line">  CHK     misc/generated/configs.c</div><div class="line">.</div><div class="line">.</div><div class="line">.</div><div class="line">  LD      src/built-in.o</div><div class="line">  AR      libzephyr.a</div><div class="line">  LINK    zephyr.lnk</div><div class="line">  BIN     zephyr.bin</div></pre></td></tr></table></figure>
<p>没有错误，编译成功，最终生成的<code>bin</code>文件在outdir文件下</p>
<p>察看编译出来的<code>elf</code>文件，确实是arm平台的</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ file zephyr.elf</div><div class="line">zephyr.elf: ELF 32-bit LSB executable, ARM, version 1 (SYSV), statically linked, not stripped</div></pre></td></tr></table></figure>
<p>到这里你的环境基本上配置好了。</p>
<p>可以把上面的环境变量设置到<code>~/.zephyrrc</code>中，这样下次就不需要重新export了</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ cat ~/.zephyrrc</div><div class="line">export XTOOLS_TOOLCHAIN_PATH=/Volumes/CrossToolNG/x-tools</div><div class="line">export ZEPHYR_GCC_VARIANT=xtools</div></pre></td></tr></table></figure>
<p>如果你觉得最开始分割到那8G左右到空间比较浪费，我们可以做一个<code>dmg</code>，这样有用的时候打开这个<code>dmg</code>就可以了。</p>
<p>打开<code>diskutil</code>工具，选择<code>File-&gt;New Image-&gt;Image from folder</code>,选择<code>/Volumes/excs/CrossToolNG/x-tools</code>文件夹<br><img src="/img/in-post/post_zephyr_on_mac/make_xtool_dmg.png" alt="img"></p>
<p>生成一个<code>dmg</code><img src="/img/in-post/post_zephyr_on_mac/xtool_dmg.png" alt="img">，有用的时候打开, 就会在<code>／Volumes</code>，多出<code>x-tools</code>文件夹</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ ls ／Volumes</div><div class="line">Macintosh HD   x-tools</div></pre></td></tr></table></figure>
<p>然后环境变量做相应的变更</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">export XTOOLS_TOOLCHAIN_PATH=/Volumes/x-tools</div></pre></td></tr></table></figure>
<p>这样，就可以把8G的分区<code>excs</code>删除，把磁盘空间还给<code>macOS</code>系统了。</p>
<h2 id="使用menuconfig配置工程遇到的错误"><a href="#使用menuconfig配置工程遇到的错误" class="headerlink" title="使用menuconfig配置工程遇到的错误"></a>使用<code>menuconfig</code>配置工程遇到的错误</h2><p>具体错误如下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">$ cd $&#123;ZEPHYR_BASE&#125;/samples/hello_world/microkernel</div><div class="line"></div><div class="line">$ make menuconfig</div><div class="line">  GEN     ./Makefile</div><div class="line">  HOSTLD  scripts/kconfig/mconf</div><div class="line">Undefined symbols for architecture x86_64:</div><div class="line">  &quot;_acs_map&quot;, referenced from:</div><div class="line">      _print_arrows in checklist.o</div><div class="line">      _dialog_checklist in checklist.o</div><div class="line">      _dialog_clear in util.o</div><div class="line">      _draw_box in util.o</div><div class="line">      _dialog_inputbox in inputbox.o</div><div class="line">      _dialog_textbox in textbox.o</div><div class="line">.</div><div class="line">.</div><div class="line">.</div></pre></td></tr></table></figure>
<p>解决办法</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ brew install ncurses</div></pre></td></tr></table></figure>
<p>然后在<code>~/.zephyrrc</code>中添加<code>ncurse</code>pkgconfig</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">export PKG_CONFIG_PATH=/usr/local/opt/ncurses/lib/pkgconfig:$PKG_CONFIG_PATH</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;关于zephyr™项目&quot;&gt;&lt;a href=&quot;#关于zephyr™项目&quot; class=&quot;headerlink&quot; title=&quot;关于zephyr™项目&quot;&gt;&lt;/a&gt;关于&lt;code&gt;zephyr™&lt;/code&gt;项目&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://www.
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://darcylee.coding.me/hexo-blog/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="zephyr" scheme="http://darcylee.coding.me/hexo-blog/tags/zephyr/"/>
    
  </entry>
  
  <entry>
    <title>qtevdevkeyboard实现</title>
    <link href="http://darcylee.coding.me/hexo-blog/2016/04/20/2016-4-20-qtevdevkeyboard/"/>
    <id>http://darcylee.coding.me/hexo-blog/2016/04/20/2016-4-20-qtevdevkeyboard/</id>
    <published>2016-04-20T07:19:30.000Z</published>
    <updated>2016-12-06T09:17:14.038Z</updated>
    
    <content type="html"><![CDATA[<p>this is a test page!!<br>add later.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;this is a test page!!&lt;br&gt;add later.&lt;/p&gt;

    
    </summary>
    
    
      <category term="学习笔记" scheme="http://darcylee.coding.me/hexo-blog/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Qt" scheme="http://darcylee.coding.me/hexo-blog/tags/Qt/"/>
    
  </entry>
  
  <entry>
    <title>命令行连接VPN</title>
    <link href="http://darcylee.coding.me/hexo-blog/2016/01/29/2016-1-29-vpn_on_command_line/"/>
    <id>http://darcylee.coding.me/hexo-blog/2016/01/29/2016-1-29-vpn_on_command_line/</id>
    <published>2016-01-29T02:19:30.000Z</published>
    <updated>2016-12-06T09:17:14.038Z</updated>
    
    <content type="html"><![CDATA[<p><code>VPN</code> 相信大家都很熟悉，在有图形界面的系统上，使用<code>VPN</code>我想大家都不会特别困难。比如在<code>windows</code>，或者有图形界面的<code>linux</code>，甚至在手上，设置都相当容易。然而要在没有图形界面的系统上使用<code>VPN</code>呢？大家可能都没那么熟悉了，今天就来趴一趴如何在字符终端上建立<code>VPN</code>连接。</p>
<h4 id="1-安装VPN客户端"><a href="#1-安装VPN客户端" class="headerlink" title="1. 安装VPN客户端"></a>1. 安装<code>VPN</code>客户端</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">dl@debian ~/work  [Fri 29 Jan 2016 09:48:55 AM CST]</div><div class="line">$ sudo apt-get install pptp-linux</div></pre></td></tr></table></figure>
<h4 id="2-创建VPN连接"><a href="#2-创建VPN连接" class="headerlink" title="2. 创建VPN连接"></a>2. 创建<code>VPN</code>连接</h4><p>假定：你需要拨号的vpn服务器地址为<code>44.125.4.11</code>，你从<code>vpn</code>服务提供商那里申请的帐号为<code>abc</code>，密码为<code>123456</code>，你么你可以这样创建一个名为<code>myVpnName</code>的<code>vpn</code>连接</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo pptpsetup --create myVpnName --server 44.125.4.11 --username abc --password 123456 --encrypt --start</div></pre></td></tr></table></figure>
<ul>
<li>--create 后的是创建的连接名称，可以为任意名称;</li>
<li>--server 后接的是vpn服务器的IP;</li>
<li>--username 是用户名</li>
<li>--password 是密码，在这也可以没这个参数，命令稍后会自动询问。这样可以保证账号安全</li>
<li>--encrypt 是表示需要加密，不必指定加密方式，命令会读取配置文件中的加密方式</li>
<li>--start 是表示创建连接完后马上连接，如果你不想连，就不写</li>
</ul>
<p>如果没有出现意外，你在控制台中将看到如下输出，说明你的vpn已经建立成功，并且以成功连接到<code>VPN</code>服务器</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">Using interface ppp0</div><div class="line">Connect: ppp0 &lt;--&gt; /dev/pts/1</div><div class="line">CHAP authentication succeeded</div><div class="line"><span class="built_in">local</span>  IP address 192.168.99.12</div><div class="line">remote IP address 192.168.99.1</div></pre></td></tr></table></figure>
<p>我们查看下本地IP配置，发现多了一个ppp0的连接</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">dl@debian ~/work  [Fri 29 Jan 2016 09:52:58 AM CST]</div><div class="line">$ ifconfig</div><div class="line">eth0      ....</div><div class="line"></div><div class="line">lo        ....</div><div class="line"></div><div class="line">ppp0      Link encap:Point-to-Point Protocol</div><div class="line">          inet addr:192.168.99.12  P-t-P:192.168.99.1  Mask:255.255.255.255</div><div class="line">          UP POINTOPOINT RUNNING NOARP MULTICAST  MTU:1496  Metric:1</div><div class="line">          RX packets:6 errors:0 dropped:0 overruns:0 frame:0</div><div class="line">          TX packets:6 errors:0 dropped:0 overruns:0 carrier:0</div><div class="line">          collisions:0 txqueuelen:3</div><div class="line">          RX bytes:60 (60.0 B)  TX bytes:66 (66.0 B)</div></pre></td></tr></table></figure>
<h4 id="3-常用操作"><a href="#3-常用操作" class="headerlink" title="3. 常用操作"></a>3. 常用操作</h4><ul>
<li><p>打开<code>VPN</code><br><code>sudo pon myVpnName</code>&lt;-<code>myVpnName</code>就是上面创建的vpn名称</p>
</li>
<li><p>关闭<code>VPN</code><br><code>sudo poff myVpnName</code>。如果你再次<code>ifconfig</code>查看本地连接，发现刚才出现的<code>ppp0</code>连接已经不见了。</p>
</li>
</ul>
<h4 id="4-全部流量走vpn通道"><a href="#4-全部流量走vpn通道" class="headerlink" title="4. 全部流量走vpn通道"></a>4. 全部流量走<code>vpn</code>通道</h4><p>我们分别<code>ping</code>下<code>google</code>和<code>baidu</code>服务器</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">dl@debian ~/work  [Fri 29 Jan 2016 09:52:15 AM CST]</div><div class="line">$ ping www.google.com</div><div class="line">PING www.google.com (216.58.221.68) 56(84) bytes of data.</div><div class="line">^C</div><div class="line">--- www.google.com ping statistics ---</div><div class="line">14 packets transmitted, 0 received, 100% packet loss, time 13000ms</div><div class="line"></div><div class="line">dl@debian ~/work  [Fri 29 Jan 2016 09:53:01 AM CST]</div><div class="line">$ ping www.baidu.com</div><div class="line">PING www.a.shifen.com (14.215.177.38) 56(84) bytes of data.</div><div class="line">64 bytes from 14.215.177.38: icmp_seq=1 ttl=128 time=18.6 ms</div><div class="line">64 bytes from 14.215.177.38: icmp_seq=2 ttl=128 time=19.0 ms</div><div class="line">64 bytes from 14.215.177.38: icmp_seq=3 ttl=128 time=18.9 ms</div></pre></td></tr></table></figure>
<p>发现无法ping通墙外的<code>google</code>而国内的<code>baidu</code>正常，细心的你一定发现了，<code>baidu</code>的连接延时和没有拨<code>VPN</code>时是相近的。这是为什么？原因是我们新创建的<code>VPN</code>通道并没有被加入系统路由，可以<code>route</code><br>查看一下。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">dl@debian ~  [Fri 29 Jan 2016 11:27:39 AM CST]</div><div class="line">$ route</div><div class="line">Kernel IP routing table</div><div class="line">Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</div><div class="line">default         10.211.55.1     0.0.0.0         UG    0      0        0 eth0</div><div class="line">10.211.55.0     *               255.255.255.0   U     0      0        0 eth0</div><div class="line">li1100-244.memb 10.211.55.1     255.255.255.255 UGH   0      0        0 eth0</div><div class="line">link-local      *               255.255.0.0     U     1000   0        0 eth0</div><div class="line">192.168.99.1    *               255.255.255.255 UH    0      0        0 ppp0</div></pre></td></tr></table></figure>
<p>你看<code>default</code>后面<code>Iface</code>是<code>eth0</code>并不是我们创建的<code>ppp0</code>，我们需要手动创建：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">dl@debian ~  [Fri 29 Jan 2016 11:32:00 AM CST]</div><div class="line">$ sudo route add default dev ppp0</div></pre></td></tr></table></figure>
<p>再次<code>route</code></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">dl@debian ~  [Fri 29 Jan 2016 11:32:48 AM CST]</div><div class="line">$ route</div><div class="line">Kernel IP routing table</div><div class="line">Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</div><div class="line">default         *               0.0.0.0         U     0      0        0 ppp0</div><div class="line">default         10.211.55.1     0.0.0.0         UG    0      0        0 eth0</div><div class="line">10.211.55.0     *               255.255.255.0   U     0      0        0 eth0</div><div class="line">li1100-244.memb 10.211.55.1     255.255.255.255 UGH   0      0        0 eth0</div><div class="line">link-local      *               255.255.0.0     U     1000   0        0 eth0</div><div class="line">192.168.99.1    *               255.255.255.255 UH    0      0        0 ppp0</div></pre></td></tr></table></figure>
<p>出现了2条<code>default</code>，其中一条是我们创建的痛过<code>ppp0</code>通道的，我们再次<code>ping</code>一下，发现都可以通了。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">dl@debian /etc/ppp/peers  [Fri 29 Jan 2016 11:33:09 AM CST]</div><div class="line">$ ping www.google.com</div><div class="line">PING www.google.com (216.58.221.228) 56(84) bytes of data.</div><div class="line">64 bytes from hkg07s21-in<span class="_">-f</span>4.1e100.net (216.58.221.228): icmp_seq=1 ttl=53 time=493 ms</div><div class="line">64 bytes from hkg07s21-in<span class="_">-f</span>4.1e100.net (216.58.221.228): icmp_seq=2 ttl=53 time=440 ms</div><div class="line">64 bytes from hkg07s21-in<span class="_">-f</span>4.1e100.net (216.58.221.228): icmp_seq=3 ttl=53 time=436 ms</div><div class="line">64 bytes from hkg07s21-in<span class="_">-f</span>4.1e100.net (216.58.221.228): icmp_seq=4 ttl=53 time=440 ms</div><div class="line">64 bytes from hkg07s21-in<span class="_">-f</span>4.1e100.net (216.58.221.228): icmp_seq=5 ttl=53 time=440 ms</div><div class="line">64 bytes from hkg07s21-in<span class="_">-f</span>4.1e100.net (216.58.221.228): icmp_seq=6 ttl=53 time=444 ms</div><div class="line">^C</div><div class="line">--- www.google.com ping statistics ---</div><div class="line">6 packets transmitted, 6 received, 0% packet loss, time 9511ms</div><div class="line">rtt min/avg/max/mdev = 436.317/449.187/493.006/19.749 ms</div><div class="line">dl@debian /etc/ppp/peers  [Fri 29 Jan 2016 11:32:54 AM CST]</div><div class="line">$ ping www.baidu.com</div><div class="line">PING www.a.shifen.com (14.215.177.37) 56(84) bytes of data.</div><div class="line">64 bytes from 14.215.177.37: icmp_seq=2 ttl=45 time=525 ms</div><div class="line">64 bytes from 14.215.177.37: icmp_seq=3 ttl=45 time=570 ms</div><div class="line">64 bytes from 14.215.177.37: icmp_seq=4 ttl=45 time=574 ms</div><div class="line">64 bytes from 14.215.177.37: icmp_seq=5 ttl=45 time=567 ms</div><div class="line">^C</div><div class="line">--- www.a.shifen.com ping statistics ---</div><div class="line">5 packets transmitted, 4 received, 20% packet loss, time 4001ms</div><div class="line">rtt min/avg/max/mdev = 525.227/559.586/574.565/19.994 ms</div></pre></td></tr></table></figure>
<p>如果你还不能确定新创建的<code>VPN</code>已正常使用，可以通过下面命令来查看外网的<code>IP</code></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">dl@debian /etc/ppp/peers  [Fri 29 Jan 2016 10:31:12 AM CST]</div><div class="line">$ curl ifconfig.me</div><div class="line">44.125.4.11 ＃这个其实就是你vpn服务器的ip地址，这里只是个举例</div></pre></td></tr></table></figure>
<p>至于如何自动完成路由的添加，目前还没有试验出来。等发现了添加说明。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;VPN&lt;/code&gt; 相信大家都很熟悉，在有图形界面的系统上，使用&lt;code&gt;VPN&lt;/code&gt;我想大家都不会特别困难。比如在&lt;code&gt;windows&lt;/code&gt;，或者有图形界面的&lt;code&gt;linux&lt;/code&gt;，甚至在手上，设置都相当容易。然而要在没
    
    </summary>
    
    
      <category term="linux" scheme="http://darcylee.coding.me/hexo-blog/tags/linux/"/>
    
      <category term="shell" scheme="http://darcylee.coding.me/hexo-blog/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>swift－Optional类型</title>
    <link href="http://darcylee.coding.me/hexo-blog/2016/01/08/2016-1-8-swift-note-01/"/>
    <id>http://darcylee.coding.me/hexo-blog/2016/01/08/2016-1-8-swift-note-01/</id>
    <published>2016-01-08T07:19:30.000Z</published>
    <updated>2016-12-06T09:17:14.038Z</updated>
    
    <content type="html"><![CDATA[<p>使用可选类型（optionals）来处理值可能缺失的情况。可选类型表示：</p>
<ul>
<li>有值，等于 x</li>
</ul>
<p>或者</p>
<ul>
<li>没有值</li>
</ul>
<blockquote>
<p>C 和 Objective-C 中并没有可选类型这个概念。最接近的是 Objective-C 中的一个特性，一个方法要不返回一个对象要不返回nil，nil表示“缺少一个合法的对象”。然而，这只对对象起作用——对于结构体，基本的 C 类型或者枚举类型不起作用。对于这些类型，Objective-C 方法一般会返回一个特殊值（比如NSNotFound）来暗示值缺失。这种方法假设方法的调用者知道并记得对特殊值进行判断。然而，Swift 的可选类型可以让你暗示<em>任意类型</em>的值缺失，并不需要一个特殊值。</p>
</blockquote>
<p>一个例子。Swift 的String类型有一种构造器，作用是将一个String值转换成一个Int值。然而，并不是所有的字符串都可以转换成一个整数。字符串”123”可以被转换成数字123，但是字符串”hello, world”不行。</p>
<p>下面的例子使用这种构造器来尝试将一个String转换成Int：</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> possibleNumber = <span class="string">"123"</span></div><div class="line"><span class="keyword">let</span> convertedNumber = <span class="type">Int</span>(possibleNumber)</div><div class="line"><span class="comment">// convertedNumber 被推测为类型 "Int?"， 或者类型 "optional Int"</span></div></pre></td></tr></table></figure>
<p>因为该构造器可能会失败，所以它返回一个可选类型（optional）Int，而不是一个Int。一个可选的Int被写作Int?而不是Int。问号暗示包含的值是可选类型，也就是说可能包含Int值也可能不包含值。（不能包含其他任何值比如Bool值或者String值。只能是Int或者什么都没有。）</p>
<p>nil</p>
<p>你可以给可选变量赋值为nil来表示它没有值：</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> serverResponseCode: <span class="type">Int</span>? = <span class="number">404</span></div><div class="line"><span class="comment">// serverResponseCode 包含一个可选的 Int 值 404</span></div><div class="line">serverResponseCode = <span class="literal">nil</span></div><div class="line"><span class="comment">// serverResponseCode 现在不包含值</span></div></pre></td></tr></table></figure>
<blockquote>
<p>nil不能用于非可选的常量和变量。如果你的代码中有常量或者变量需要处理值缺失的情况，请把它们声明成对应的可选类型。</p>
</blockquote>
<p>如果你声明一个可选常量或者变量但是没有赋值，它们会自动被设置为nil：</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> surveyAnswer: <span class="type">String</span>?</div><div class="line"><span class="comment">// surveyAnswer 被自动设置为 nil</span></div></pre></td></tr></table></figure>
<blockquote>
<p>注意：<br>Swift 的nil和 Objective-C 中的nil并不一样。在 Objective-C 中，nil是一个指向不存在对象的指针。在 Swift 中，nil不是指针——它是一个确定的值，用来表示值缺失。任何类型的可选状态都可以被设置为nil，不只是对象类型。</p>
</blockquote>
<p>可以使用if语句和nil比较来判断一个可选值是否包含值</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> optionalVal: <span class="type">String</span>?</div><div class="line"></div><div class="line"><span class="keyword">if</span> optionalVal != <span class="literal">nil</span> &#123;</div><div class="line">    <span class="built_in">print</span>(<span class="string">"optionalVal contains some string"</span>)</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">    <span class="built_in">print</span>(<span class="string">"optionalVal is nothing!"</span>)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>当你确定可选类型确实包含值之后，你可以在可选的名字后面加一个感叹号（!）来获取值。这被称为可选值的强制解析（forced unwrapping）：</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> optionalVal: <span class="type">String</span>?</div><div class="line">optionalVal ＝ “123s” <span class="comment">//如果没有值，则下面的if判断会出现编译错误</span></div><div class="line"><span class="keyword">if</span> <span class="keyword">let</span> actValue = <span class="type">Int</span>(optionalVal!) &#123;</div><div class="line">    <span class="built_in">print</span>(<span class="string">"\(optionalVal) has an integer value \(actValue)"</span>)</div><div class="line">&#125; <span class="keyword">else</span>  &#123;</div><div class="line">    <span class="built_in">print</span>(<span class="string">"\(optionalVal) could not be converted to an integer"</span>)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>还没明白，这样的一个可选属性的设置，在实际编程里面，主要用在什么样的情况下。</p>
<p>顺道提下swift里面对可选类型判断的运算符：</p>
<p><strong>空合运算符 (Nil Coalescing Operator)</strong></p>
<p>空合运算符(a ?? b)将对可选类型a进行空判断，如果a包含一个值就进行解封，否则就返回一个默认值b.这个运算符有两个条件:</p>
<ul>
<li>表达式a必须是Optional类型</li>
<li>默认值b的类型必须要和a存储值的类型保持一致</li>
</ul>
<p>空合运算符等同于下面的表达式：</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">a != <span class="literal">nil</span> ? a! : b</div></pre></td></tr></table></figure>
<p>上述代码使用了三目运算符。当可选类型a的值不为空时，进行强制解封(a!)访问a中值，反之当a中值为空时，返回默认值b。无疑空合运算符(??)提供了一种更为优雅的方式去封装条件判断和解封两种行为，显得简洁以及更具可读性。</p>
<p>再一个例子</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> defaultName = <span class="string">"xiaoli"</span></div><div class="line"><span class="keyword">var</span> userDefinedName: <span class="type">String</span>?;   <span class="comment">//默认值为 nil</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> <span class="type">NameToUse</span> = userDefinedName ?? defaultName</div><div class="line"><span class="comment">// userDefinedName 的值为空，所以 NameToUse 的值为 "xiaoli"</span></div><div class="line"></div><div class="line">userDefinedName = <span class="string">"zhangsan"</span>;</div><div class="line"><span class="keyword">var</span> <span class="type">NameToUse1</span> = userDefinedName ?? defaultName</div><div class="line"><span class="comment">// userDefinedName 有值，则 NameToUse 的值为 ”zhangsan”</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用可选类型（optionals）来处理值可能缺失的情况。可选类型表示：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;有值，等于 x&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;或者&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;没有值&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;C 和 Objective-C 中并
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://darcylee.coding.me/hexo-blog/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="swift" scheme="http://darcylee.coding.me/hexo-blog/tags/swift/"/>
    
  </entry>
  
  <entry>
    <title>title</title>
    <link href="http://darcylee.coding.me/hexo-blog/2015/12/31/tmp_post/"/>
    <id>http://darcylee.coding.me/hexo-blog/2015/12/31/tmp_post/</id>
    <published>2015-12-31T02:19:30.000Z</published>
    <updated>2016-12-06T09:17:14.038Z</updated>
    
    <content type="html"><![CDATA[<p>default:</p>
<ul>
<li>categories:</li>
<li>header-img: “/img/post-bg-default.jpg”</li>
<li>author:     darcylee</li>
<li>catalog:    true</li>
<li>permalink: /blog/:categories/:title/</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;default:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;categories:&lt;/li&gt;
&lt;li&gt;header-img: “/img/post-bg-default.jpg”&lt;/li&gt;
&lt;li&gt;author:     darcylee&lt;/li&gt;
&lt;li&gt;catalog:    true
    
    </summary>
    
    
      <category term="tag1" scheme="http://darcylee.coding.me/hexo-blog/tags/tag1/"/>
    
      <category term="tag2" scheme="http://darcylee.coding.me/hexo-blog/tags/tag2/"/>
    
  </entry>
  
  <entry>
    <title>两个命令行察看二进制文件的工具</title>
    <link href="http://darcylee.coding.me/hexo-blog/2015/12/31/2015-12-31-dump_bin_in_shell/"/>
    <id>http://darcylee.coding.me/hexo-blog/2015/12/31/2015-12-31-dump_bin_in_shell/</id>
    <published>2015-12-31T02:19:30.000Z</published>
    <updated>2016-12-06T09:17:14.038Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<ol>
<li>hexdump</li>
<li>xxd</li>
</ol>
</blockquote>
<h2 id="hexdump"><a href="#hexdump" class="headerlink" title="hexdump"></a>hexdump</h2><p>hexdump命令一般用来查看“二进制”文件的十六进制编码，但实际上它能查看任何文件，而不只限于二进制文件</p>
<p>命令行输入：<code>hexdump --help</code>查看详细介绍：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">lijq@server » hexdump --help</div><div class="line">hexdump: invalid option -- &apos;-&apos;</div><div class="line">usage: hexdump [-bcCdovx] [-e fmt] [-f fmt_file] [-n length]</div><div class="line">               [-s skip] [file ...]</div><div class="line">       hd      [-bcdovx]  [-e fmt] [-f fmt_file] [-n length]</div><div class="line">               [-s skip] [file ...]</div></pre></td></tr></table></figure>
<p>语法选项</p>
<blockquote>
<p>huxdump [选项] [文件] …</p>
<p>-n length 只格式化输入文件的前length个字节。<br>-C 输出规范的十六进制和ASCII码。<br>-b 单字节八进制显示。<br>-c 单字节字符显示。<br>-d 双字节十进制显示。<br>-o 双字节八进制显示。<br>-x 双字节十六进制显示。<br>-s 从偏移量开始输出。<br>-e 指定格式字符串，格式字符串包含在一对单引号中，格式字符串形如：’a/b “format1” “format2”‘。</p>
</blockquote>
<p>每个格式字符串由三部分组成，每个由空格分隔，第一个形如a/b，b表示对每b个输入字节应用format1格式，a表示对每a个输入字节应用format2格式，一般a&gt;b，且b只能为1，2，4，另外a可以省略，省略则a=1。format1和format2中可以使用类似printf的格式字符串，如：</p>
<blockquote>
<p>%02d：两位十进制<br>%03x：三位十六进制<br>%02o：两位八进制<br>%c：单个字符等</p>
</blockquote>
<p>还有一些特殊的用法：</p>
<blockquote>
<p>%_ad：标记下一个输出字节的序号，用十进制表示。<br>%_ax：标记下一个输出字节的序号，用十六进制表示。<br>%_ao：标记下一个输出字节的序号，用八进制表示。<br>%_p：对不能以常规字符显示的用 . 代替。</p>
</blockquote>
<p>同一行如果要显示多个格式字符串，则可以跟多个-e选项。</p>
<p>示例：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">lijq@server » hexdump -e &apos;16/1 &quot;%02X &quot; &quot; | &quot;&apos; -e &apos;16/1 &quot;%_p&quot; &quot;\n&quot;&apos; rootfs.ubi</div><div class="line">55 42 49 23 01 00 00 00 00 00 00 00 00 00 00 00 | UBI#............</div><div class="line">00 00 08 00 00 00 10 00 2A AD C9 72 00 00 00 00 | ........*..r....</div><div class="line">00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 | ................</div><div class="line">00 00 00 00 00 00 00 00 00 00 00 00 F2 06 B0 A2 | ................</div><div class="line">FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF | ................</div><div class="line">*</div><div class="line">55 42 49 21 01 01 00 05 7F FF EF FF 00 00 00 00 | UBI!............</div><div class="line">...</div><div class="line">...</div></pre></td></tr></table></figure>
<p>部分引用自<a href="http://man.linuxde.net/hexdump" target="_blank" rel="external">linuxde</a></p>
<h2 id="xxd"><a href="#xxd" class="headerlink" title="xxd"></a>xxd</h2><p><code>xxd --help</code> 查看详细使用方法</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">lijq@server » xxd --help</div><div class="line">Usage:</div><div class="line">       xxd [options] [infile [outfile]]</div><div class="line">    or</div><div class="line">       xxd -r [-s [-]offset] [-c cols] [-ps] [infile [outfile]]</div><div class="line">Options:</div><div class="line">    -a          toggle autoskip: A single &apos;*&apos; replaces nul-lines. Default off.</div><div class="line">    -b          binary digit dump (incompatible with -ps,-i,-r). Default hex.</div><div class="line">    -c cols     format &lt;cols&gt; octets per line. Default 16 (-i: 12, -ps: 30).</div><div class="line">    -E          show characters in EBCDIC. Default ASCII.</div><div class="line">    -g          number of octets per group in normal output. Default 2.</div><div class="line">    -h          print this summary.</div><div class="line">    -i          output in C include file style.</div><div class="line">    -l len      stop after &lt;len&gt; octets.</div><div class="line">    -ps         output in postscript plain hexdump style.</div><div class="line">    -r          reverse operation: convert (or patch) hexdump into binary.</div><div class="line">    -r -s off   revert with &lt;off&gt; added to file positions found in hexdump.</div><div class="line">    -s [+][-]seek  start at &lt;seek&gt; bytes abs. (or +: rel.) infile offset.</div><div class="line">    -u          use upper case hex letters.</div><div class="line">    -v          show version: &quot;xxd V1.10 27oct98 by Juergen Weigert&quot;.</div></pre></td></tr></table></figure>
<p>语法</p>
<blockquote>
<p>xxd [options] [infile [outfile]]<br>xxd -r [-s [-]offset] [-c cols] [-ps] [infile [outfile]]</p>
</blockquote>
<p>常用选项</p>
<blockquote>
<p>-b: 以二进制格式显示，每个字符将被转化成8个0/1的数据<br>-l: 只显示N个字符，<code>-l N</code><br>-s: [+][-]seek 从infile的绝对或者想对位置开始显示， <code>-s offset</code><br>-u: 以大写字母输出，默认小写字母输出<br>-g: 显示方式，<code>-g N</code> 以N个byte为一组输出，默认是2</p>
</blockquote>
<p>例子</p>
<blockquote>
<p>从0x500000处开始显示64个字节</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">lijq@server » xxd -s 0x500000 -l 64 rootfs.ubi</div><div class="line">0500000: 5542 4923 0100 0000 0000 0000 0000 0000  UBI#............</div><div class="line">0500010: 0000 0800 0000 1000 2aad c972 0000 0000  ........*..r....</div><div class="line">0500020: 0000 0000 0000 0000 0000 0000 0000 0000  ................</div><div class="line">0500030: 0000 0000 0000 0000 0000 0000 f206 b0a2  ................</div></pre></td></tr></table></figure>
<p>这个对调试通讯协议出错的时候特别有用</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;hexdump&lt;/li&gt;
&lt;li&gt;xxd&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;hexdump&quot;&gt;&lt;a href=&quot;#hexdump&quot; class=&quot;headerlink&quot; title=&quot;hexdump&quot;&gt;&lt;
    
    </summary>
    
    
      <category term="linux" scheme="http://darcylee.coding.me/hexo-blog/tags/linux/"/>
    
      <category term="shell" scheme="http://darcylee.coding.me/hexo-blog/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>Objective－C 实例化</title>
    <link href="http://darcylee.coding.me/hexo-blog/2015/12/01/2015-12-1-objc_%E5%AE%9E%E4%BE%8B%E5%8C%96/"/>
    <id>http://darcylee.coding.me/hexo-blog/2015/12/01/2015-12-1-objc_实例化/</id>
    <published>2015-12-01T04:00:00.000Z</published>
    <updated>2016-12-06T09:17:14.038Z</updated>
    
    <content type="html"><![CDATA[<h1 id="类实例化"><a href="#类实例化" class="headerlink" title="类实例化"></a>类实例化</h1><p>类的实例化位导致两个问题：构造函数、析构函数和赋值运算符如何实现，以及如何分配内存。</p>
<p>在 C++ 中，变量默认是“自动的”：除非被声明为static，否则变量仅在自己的定义块中有意义。动态分配的内存可以一直使用，直到调用了free()或者delete。C++ 中，所有对象都遵循这一规则。</p>
<p>然而在 Objective-C 中，所有对象都是动态分配的。其实这也是符合逻辑的，因为 C++ 更加 static，而 Objective-C 则更加动态。除非能够在运行时动态分配内存，否则 Objective-C 实现不了这么多动态的特性。</p>
<h2 id="构造函数和初始化函数"><a href="#构造函数和初始化函数" class="headerlink" title="构造函数和初始化函数"></a>构造函数和初始化函数</h2><h3 id="分配allocation和初始化initialization的区别"><a href="#分配allocation和初始化initialization的区别" class="headerlink" title="分配allocation和初始化initialization的区别"></a>分配<em>allocation</em>和初始化<em>initialization</em>的区别</h3><p>在 <code>C++</code> 中，内存分配和对象初始化都是在构造函数中完成的。在 <code>Objective-C</code> 中，这是两个不同的函数。</p>
<p>内存分配由类方法 <code>alloc</code> 完成，此时将初始化所有的实例数据。实例数据将被初始化为 <code>0</code>，除了一个名为<code>isa</code>的<code>NSObject</code>的指针。这个指针将在运行时指向对象的实际类型。实例数据根据传入的参数初始化为某一特定的值，这一过程将在一个实例方法 <code>instance method</code> 中完成。这个方法通常命名为<code>init</code>。因此，构造过程被明确地分为两步：内存分配和初始化。<code>alloc</code>消息被发送给类，而<code>init</code>消息则被发送给由<code>alloc</code>创建出来的新的对象。初始化过程不是可选的，<code>alloc</code>之后应该跟着<code>init</code>，之后，父类的init也会被调用，直到<code>NSObject</code>的<code>init</code>方法。这一方法完成了很多重要的工作。</p>
<p>在 C<code>+</code>+ 中，构造函数的名字是规定好的，必须与类名一致。在 <code>Objective-C</code> 中，初始化方法与普通方法没有什么区别。你可以用任何名字，只不过通常都是选用 <code>init</code> 这个名字。然而，我们还是强烈建议，<strong>初始化方法名字一定要用<code>init</code>或者 <code>init</code> 开头的字符串。</strong></p>
<h3 id="使用alloc和init"><a href="#使用alloc和init" class="headerlink" title="使用alloc和init"></a>使用<code>alloc</code>和<code>init</code></h3><p>调用<code>alloc</code>之后将返回一个新的对象，并且应该给这个对象发送一个<code>init</code>消息。<code>init</code>调用之后也会返回一个对象。通常，这就是初始化完成的对象。有时候，如果使用单例模式，<code>init</code>可能会返回另外的对象（单例模式要求始终返回同一对象）。因此，<code>init</code>的返回值不应该被忽略。通常，<code>alloc</code>和<code>init</code>都会在一行上。</p>
<p>c++</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Foo* foo = <span class="keyword">new</span> Foo;</div></pre></td></tr></table></figure>
<p>Objective-C</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">Foo* foo1 = [Foo alloc];</div><div class="line">[foo1 init]; <span class="comment">// 这是不好的行为：应该使用 init 的返回值</span></div><div class="line">Foo* foo2 = [Foo alloc];</div><div class="line">foo2 = [foo2 init]; <span class="comment">// 正确，不过看上去很啰嗦</span></div><div class="line">Foo* foo3 = [[Foo alloc] init]; <span class="comment">// 正确，这才是通常的做法</span></div></pre></td></tr></table></figure>
<p>为检查内存分配是否成功，C++ 可以判断 new 返回的指针是否是 0（如果使用的是 new(nothrow)运算符）。在 Objective-C 中，检查返回值是否是nil就已经足够了。</p>
<h3 id="初始化方法的正确示例代码"><a href="#初始化方法的正确示例代码" class="headerlink" title="初始化方法的正确示例代码"></a>初始化方法的正确示例代码</h3><p>一个正确的初始化方法应该有如下特点：</p>
<ul>
<li>名字以 init 开始；</li>
<li>返回能够使用的对象；</li>
<li>调用父类的 init 方法，直到NSObject的init方法被调用；</li>
<li>保存[super init…]的返回值；</li>
<li>处理构造期间出现的任何错误，无论是自己的还是父类的。</li>
</ul>
<p>下面一些代码：</p>
<p>c++</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">class</span> Point2D</div><div class="line">&#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    Point2D(<span class="keyword">int</span> x, <span class="keyword">int</span> y);</div><div class="line"><span class="keyword">private</span>:</div><div class="line">    <span class="keyword">int</span> x;</div><div class="line">    <span class="keyword">int</span> y;</div><div class="line">&#125;;</div><div class="line">Point2D::Point2D(<span class="keyword">int</span> anX, <span class="keyword">int</span> anY) &#123;x = anX; y = anY;&#125;</div><div class="line">...</div><div class="line"></div><div class="line"><span class="function">Point2D  <span class="title">p1</span><span class="params">(<span class="number">3</span>,<span class="number">4</span>)</span></span>;</div><div class="line">Point2D* p2 = <span class="keyword">new</span> Point2D(<span class="number">5</span>, <span class="number">6</span>);</div></pre></td></tr></table></figure>
<p>Objective-C</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">Point2D</span> : <span class="title">NSObject</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> x;</div><div class="line">    <span class="keyword">int</span> y;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 注意，在 Objective-C 中，id 类似于 void *</span></div><div class="line"><span class="comment">// (id) 就是对象的“一般”类型</span></div><div class="line">-(<span class="keyword">id</span>) initWithX:(<span class="keyword">int</span>)anX andY:(<span class="keyword">int</span>)anY;</div><div class="line"><span class="keyword">@end</span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">Point2D</span></span></div><div class="line"></div><div class="line">-(<span class="keyword">id</span>) initWithX:(<span class="keyword">int</span>)anX andY:(<span class="keyword">int</span>)anY</div><div class="line">&#123;</div><div class="line">    <span class="comment">// 调用父类的初始化方法</span></div><div class="line">    <span class="keyword">if</span> (!(<span class="keyword">self</span> = [<span class="keyword">super</span> init])) <span class="comment">// 如果父类是 NSObject，必须进行 init 操作</span></div><div class="line">        <span class="keyword">return</span> <span class="literal">nil</span>; <span class="comment">// 如果父类 init 失败，返回 nil</span></div><div class="line">    <span class="comment">// 父类调用成功，进行自己的初始化操作</span></div><div class="line">    <span class="keyword">self</span>-&gt;x = anX;</div><div class="line">    <span class="keyword">self</span>-&gt;y = anY;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">self</span>; <span class="comment">// 返回指向自己的指针</span></div><div class="line">&#125;</div><div class="line"><span class="keyword">@end</span></div><div class="line"></div><div class="line">...</div><div class="line"></div><div class="line">Point2D* p1 = [[Point2D alloc] initWithX:<span class="number">3</span> andY:<span class="number">4</span>];</div></pre></td></tr></table></figure>
<h2 id="self-super-init…"><a href="#self-super-init…" class="headerlink" title="self = [super init…]"></a>self = [super init…]</h2><p>在上一篇提到的代码中，最不可思议的可能就是这句<code>self = [super init...]</code>。回想一下，self是每个方法的一个隐藏参数，指向当前对象。因此，这是一个局部变量。那么，为什么我们要改变一个局部变量的值呢？事实上，<code>self</code>必须要改变。我们将在下面解释为什么要这样做。</p>
<p><code>[super init]</code>实际上返回不同于当前对象的另外一个对象。单例模式就是这样一种情况。然而， 有一个 API 可以用一个对象替换新分配的对象。<code>Core Data</code>（<code>Apple</code> 提供的 <code>Cocoa</code> 里面的一个 <code>API</code>）就是用了这种 <code>API</code>，对实例数据做一些特殊的操作，从而让这些数据能够和数据库的字段关联起来。当继承<code>NSManagedObject</code>类的时候，就需要仔细对待这种替换。在这种情形下，<code>self</code>就要指向两个对象：一个是<code>alloc</code>返回的对象，一个是<code>[super init]</code>返回的对象。修改<code>self</code>的值对代码有一定的影响：每次访问实例数据的时候都是隐式的。</p>
<p>正如下面的代码所示：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">B</span> : <span class="title">A</span></span></div><div class="line">&#123;</div><div class="line"><span class="keyword">int</span> i;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">@end</span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">B</span></span></div><div class="line"></div><div class="line">-(<span class="keyword">id</span>) init</div><div class="line">&#123;</div><div class="line">    <span class="comment">// 此时，self 指向 alloc 返回的值</span></div><div class="line">    <span class="comment">// 假设 A 进行了替换操作，返回一个不同的 self</span></div><div class="line">    <span class="keyword">id</span> newSelf = [<span class="keyword">super</span> init];</div><div class="line">    <span class="built_in">NSLog</span>(<span class="string">@"%d"</span>, i); <span class="comment">// 输出 self-&gt;i 的值</span></div><div class="line">    <span class="keyword">self</span> = newSelf; <span class="comment">// 有人会认为 i 没有变化</span></div><div class="line">    <span class="built_in">NSLog</span>(<span class="string">@"%d"</span>, i); <span class="comment">// 事实上，此时的 self-&gt;i, 实际是 newSelf-&gt;i,</span></div><div class="line">                     <span class="comment">// 和之前的值可能不一样了</span></div><div class="line">    <span class="keyword">return</span> <span class="keyword">self</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">@end</span></div><div class="line">...</div><div class="line">B* b = [[B alloc] init];</div></pre></td></tr></table></figure>
<p><code>self = [super init]</code>简洁明了，也不必担心以后会引入 bug。然而，我们应该注意旧的<code>self</code>指向的对象的命运：它必须被释放。第一规则很简单：谁替换<code>self</code>指针，谁就要负责处理旧的<code>self</code>指针。在这里，也就是<code>[super init]</code>负责完成这一操作。例如，如果你创建<code>NSManagedObject</code>子类（这个类会执行替换操作），你就不必担心旧的<code>self</code>指针。事实上，<code>NSManagedObject</code>的开发者必须考虑这种处理。因此，如果你要创建一个执行替换操作的类，你必须知道如何在初始化过程中释放旧有对象。这种操作同错误处理很类似：如果因为非法参数、不可访问的资源造成构造失败，我们要如何处理？</p>
<h2 id="初始化错误"><a href="#初始化错误" class="headerlink" title="初始化错误"></a>初始化错误</h2><p>初始化出错可能发生在三个地方：</p>
<ol>
<li>调用[super init…]之前：如果构造函数参数非法，那么初始化应该立即停止；</li>
<li>调用[super init…]期间：如果父类调用失败，那么当前的初始化操作也应该停止；</li>
<li>调用[super init…]之后：例如资源分配失败等。</li>
</ol>
<p>在上面每一种情形中，只要失败，就应该返回<code>nil</code>；相应的处理应该由发生错误的对象去完成。这里，我们主要关心的是1, 3情况。要释放当前对象，我们调用<code>[self release]</code>即可。</p>
<p>在调用<code>dealloc</code>之后，对象的析构才算完成。因此，<code>dealloc</code>的实现必须同初始化方法兼容。事实上，<code>alloc</code>将所有的实例数据初始化成 <code>0</code> 是相当有用的。</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">A</span> : <span class="title">NSObject</span> </span>&#123;</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> n;</div><div class="line">&#125;</div><div class="line"></div><div class="line">-(<span class="keyword">id</span>) initWithN:(<span class="keyword">unsigned</span> <span class="keyword">int</span>)value;</div><div class="line"><span class="keyword">@end</span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">A</span></span></div><div class="line"></div><div class="line">-(<span class="keyword">id</span>) initWithN:(<span class="keyword">unsigned</span> <span class="keyword">int</span>)value</div><div class="line">&#123;</div><div class="line">    <span class="comment">// 第一种情况：参数合法吗？</span></div><div class="line">    <span class="keyword">if</span> (value == <span class="number">0</span>) <span class="comment">// 我们需要一个正值</span></div><div class="line">    &#123;</div><div class="line">        [<span class="keyword">self</span> release];</div><div class="line">        <span class="keyword">return</span> <span class="literal">nil</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">// 第二种情况：父类调用成功吗？</span></div><div class="line">    <span class="keyword">if</span> (!(<span class="keyword">self</span> = [<span class="keyword">super</span> init])) <span class="comment">// 即是 self 被替换，它也是父类</span></div><div class="line">        <span class="keyword">return</span> <span class="literal">nil</span>; <span class="comment">// 错误发生时，谁负责释放 self？</span></div><div class="line">    <span class="comment">// 第三种情况：初始化能够完成吗？</span></div><div class="line">    n = (<span class="keyword">int</span>)log(value);</div><div class="line">    <span class="keyword">void</span>* p = malloc(n); <span class="comment">// 尝试分配资源</span></div><div class="line">    <span class="keyword">if</span> (!p) <span class="comment">// 如果分配失败，我们希望发生错误</span></div><div class="line">    &#123;</div><div class="line">        [<span class="keyword">self</span> release];</div><div class="line">        <span class="keyword">return</span> <span class="literal">nil</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">@end</span><span class="class"><span class="keyword">@interface</span> <span class="title">A</span> : <span class="title">NSObject</span> </span>&#123;</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> n;</div><div class="line">&#125;</div><div class="line"></div><div class="line">-(<span class="keyword">id</span>) initWithN:(<span class="keyword">unsigned</span> <span class="keyword">int</span>)value;</div><div class="line"><span class="keyword">@end</span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">A</span></span></div><div class="line"></div><div class="line">-(<span class="keyword">id</span>) initWithN:(<span class="keyword">unsigned</span> <span class="keyword">int</span>)value</div><div class="line">&#123;</div><div class="line">    <span class="comment">// 第一种情况：参数合法吗？</span></div><div class="line">    <span class="keyword">if</span> (value == <span class="number">0</span>) <span class="comment">// 我们需要一个正值</span></div><div class="line">    &#123;</div><div class="line">        [<span class="keyword">self</span> release];</div><div class="line">        <span class="keyword">return</span> <span class="literal">nil</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">// 第二种情况：父类调用成功吗？</span></div><div class="line">    <span class="keyword">if</span> (!(<span class="keyword">self</span> = [<span class="keyword">super</span> init])) <span class="comment">// 即是 self 被替换，它也是父类</span></div><div class="line">        <span class="keyword">return</span> <span class="literal">nil</span>; <span class="comment">// 错误发生时，谁负责释放 self？</span></div><div class="line">    <span class="comment">// 第三种情况：初始化能够完成吗？</span></div><div class="line">    n = (<span class="keyword">int</span>)log(value);</div><div class="line">    <span class="keyword">void</span>* p = malloc(n); <span class="comment">// 尝试分配资源</span></div><div class="line">    <span class="keyword">if</span> (!p) <span class="comment">// 如果分配失败，我们希望发生错误</span></div><div class="line">    &#123;</div><div class="line">        [<span class="keyword">self</span> release];</div><div class="line">        <span class="keyword">return</span> <span class="literal">nil</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">@end</span></div></pre></td></tr></table></figure>
<h2 id="将构造过程合并为alloc-init"><a href="#将构造过程合并为alloc-init" class="headerlink" title="将构造过程合并为alloc+init"></a>将构造过程合并为alloc+init</h2><p>有时候，alloc和init被分割成两个部分显得很罗嗦。幸运的是，我们也可以将其合并在一起。这主要牵扯到 Objective-C 的内存管理机制。简单来说，作为一个构造函数，它的名字必须以类名开头，其行为类似init，但要自己实现alloc。然而，这个对象需要注册到autorelease池中，除非发送retain消息，否则其生命周期是有限制的。以下即是示例代码：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 啰嗦的写法</span></div><div class="line"><span class="built_in">NSNumber</span>* tmp1 = [[<span class="built_in">NSNumber</span> alloc] initWithFloat:<span class="number">0.0</span>f];</div><div class="line">...</div><div class="line">[tmp1 release];</div><div class="line"><span class="comment">// 简洁一些</span></div><div class="line"><span class="built_in">NSNumber</span>* tmp2 = [<span class="built_in">NSNumber</span> numberWithFloat:<span class="number">0.0</span>f];</div><div class="line">...</div><div class="line"><span class="comment">// 无需调用 release</span></div></pre></td></tr></table></figure>
<h2 id="默认构造函数：指定初始化函数"><a href="#默认构造函数：指定初始化函数" class="headerlink" title="默认构造函数：指定初始化函数"></a>默认构造函数：指定初始化函数</h2><p>在 <code>Objective-C</code> 中，默认构造函数没有实在的意义，因为所有对象都是动态分配内存，也就是说，构造函数都是确定的。但是，一个常用的构造函数确实可以精简代码。事实上，一个正确的初始化过程通常类似于：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (!(<span class="keyword">self</span> = [<span class="keyword">super</span> init])) <span class="comment">// "init" 或其他父类恰当的函数</span></div><div class="line">    <span class="keyword">return</span> <span class="literal">nil</span>;</div><div class="line"><span class="comment">// 父类初始化成功，继续其他操作……</span></div><div class="line"><span class="keyword">return</span> <span class="keyword">self</span>;</div></pre></td></tr></table></figure>
<p>剪贴复制代码是一个不良习惯。好的做法是，将共同代码放到一个独立的函数中，通常称为“指定初始化函数”。通常这种指定初始化函数会包含很多参数，因为 <code>Objective-C</code> 不允许参数有默认值。</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">-(<span class="keyword">id</span>) initWithX:(<span class="keyword">int</span>)x</div><div class="line">&#123;</div><div class="line">    <span class="keyword">return</span> [<span class="keyword">self</span> initWithX:x andY:<span class="number">0</span> andZ:<span class="number">0</span>];</div><div class="line">&#125;</div><div class="line"></div><div class="line">-(<span class="keyword">id</span>) initWithX:(<span class="keyword">int</span>)x andY:(<span class="keyword">int</span>)y</div><div class="line">&#123;</div><div class="line">    <span class="keyword">return</span> [<span class="keyword">self</span> initWithX:x andY:y andZ:<span class="number">0</span>];</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 指定初始化函数</span></div><div class="line">-(<span class="keyword">id</span>) initWithX:(<span class="keyword">int</span>)x andY:(<span class="keyword">int</span>)y andZ:(<span class="keyword">int</span>)z</div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span> (!(<span class="keyword">self</span> = [<span class="keyword">super</span> init]))</div><div class="line">        <span class="keyword">return</span> <span class="literal">nil</span>;</div><div class="line">    <span class="keyword">self</span>-&gt;x = x;</div><div class="line">    <span class="keyword">self</span>-&gt;y = y;</div><div class="line">    <span class="keyword">self</span>-&gt;z = z;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">self</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>如果指定初始化函数没有最大数量的参数，那基本上就没什么用处：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 以下代码就有很多重复部分</span></div><div class="line">-(<span class="keyword">id</span>) initWithX:(<span class="keyword">int</span>)x <span class="comment">// 指定初始化函数</span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span> (!(<span class="keyword">self</span> = [<span class="keyword">super</span> init]))</div><div class="line">        <span class="keyword">return</span> <span class="literal">nil</span>;</div><div class="line">    <span class="keyword">self</span>-&gt;x = x;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">self</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line">-(<span class="keyword">id</span>) initWithX:(<span class="keyword">int</span>)x andY:(<span class="keyword">int</span>)y</div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span> (![<span class="keyword">self</span> initWithX:x])</div><div class="line">        <span class="keyword">return</span> <span class="literal">nil</span>;</div><div class="line">    <span class="keyword">self</span>-&gt;y = y;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">self</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line">-(<span class="keyword">id</span>) initWithX:(<span class="keyword">int</span>)x andY:(<span class="keyword">int</span>)y andZ:(<span class="keyword">int</span>)z</div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span> (![<span class="keyword">self</span> initWithX:x])</div><div class="line">        <span class="keyword">return</span> <span class="literal">nil</span>;</div><div class="line">    <span class="keyword">self</span>-&gt;y = y;</div><div class="line">    <span class="keyword">self</span>-&gt;z = z;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">self</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="初始化列表和实例数据的默认值"><a href="#初始化列表和实例数据的默认值" class="headerlink" title="初始化列表和实例数据的默认值"></a>初始化列表和实例数据的默认值</h2><p><code>Objective-C</code> 中不存在 <code>C++</code> 构造函数的初始化列表的概念。然而，不同于 <code>C++</code>，<code>Objective-C</code> 的alloc会将所有实例数据初始化成 <code>0</code>，因此指针也会被初始化成<code>nil</code>。<code>C++</code> 中，对象属性不同于指针，但是在 <code>Objective-C</code> 中，所有对象都被当做指针处理。</p>
<h2 id="虚构造函数"><a href="#虚构造函数" class="headerlink" title="虚构造函数"></a>虚构造函数</h2><p><code>Objective-C</code> 中存在虚构造函数。我们将在后面的章节中详细讲诉这个问题。</p>
<h2 id="类构造函数"><a href="#类构造函数" class="headerlink" title="类构造函数"></a>类构造函数</h2><p>在 <code>Objective-C</code> 中，类本身就是对象，因此它也有自己的构造函数，并且也能够被重定义。它显然是一个类函数，继承自NSObject，其原型是<code>+(void) initialize</code>;。</p>
<p>第一次使用这个类或其子类的时候，这个函数将被自动调用。但这并不意味着，对于指定的类，这个函数只被调用一次。事实上，如果子类没有定义<code>+(void) initialize</code>;，那么 <code>Objective-C</code> 将调用其父类的<code>+(void) initialize</code>;。</p>
<h2 id="析构函数"><a href="#析构函数" class="headerlink" title="析构函数"></a>析构函数</h2><p>在 <code>C++</code> 中，析构函数同构造函数一样，是一个特殊的函数。在 <code>Objective-C</code> 中，析构函数也是一个普通的实例函数，叫做<code>dealloc</code>。<code>C++</code> 中，当对象被释放时，析构函数将自动调用；<code>Objective-C</code> 也是类似的，但是释放对象的方式有所不同。</p>
<p>析构函数永远不应该被显式调用。在 <code>C++</code> 中存在这么一种情况：开发者自己在析构时管理内存池。但是在 <code>Objective-C</code> 中没有这种限制。你可以在 <code>Cocoa</code> 中使用自定义的内存区域，但是这并不会影响平常的内存的分配、释放机制。</p>
<p>C++</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">class</span> Point2D</div><div class="line">&#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    ~Point2D();</div><div class="line">&#125;;</div><div class="line"></div><div class="line">Point2D::~Point2D() &#123;&#125;</div></pre></td></tr></table></figure>
<p>Objective-C</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">Point2D</span> : <span class="title">NSObject</span></span></div><div class="line">-(<span class="keyword">void</span>) dealloc; <span class="comment">// 该方法可以被重定义</span></div><div class="line"><span class="keyword">@end</span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">Point2D</span></span></div><div class="line"><span class="comment">// 在这个例子中，重定义并不需要</span></div><div class="line">-(<span class="keyword">void</span>) dealloc</div><div class="line">&#123;</div><div class="line">    [<span class="keyword">super</span> dealloc]; <span class="comment">// 不要忘记调用父类代码</span></div><div class="line">&#125;</div><div class="line"><span class="keyword">@end</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;类实例化&quot;&gt;&lt;a href=&quot;#类实例化&quot; class=&quot;headerlink&quot; title=&quot;类实例化&quot;&gt;&lt;/a&gt;类实例化&lt;/h1&gt;&lt;p&gt;类的实例化位导致两个问题：构造函数、析构函数和赋值运算符如何实现，以及如何分配内存。&lt;/p&gt;
&lt;p&gt;在 C++ 中，变量默认
    
    </summary>
    
    
      <category term="objective-c" scheme="http://darcylee.coding.me/hexo-blog/tags/objective-c/"/>
    
      <category term="学习笔记" scheme="http://darcylee.coding.me/hexo-blog/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>关于Blog，我有话要说</title>
    <link href="http://darcylee.coding.me/hexo-blog/2015/11/21/2015-11-21-about_this_blog/"/>
    <id>http://darcylee.coding.me/hexo-blog/2015/11/21/2015-11-21-about_this_blog/</id>
    <published>2015-11-21T04:00:00.000Z</published>
    <updated>2016-12-06T09:17:14.038Z</updated>
    
    <content type="html"><![CDATA[<h3 id="缘由"><a href="#缘由" class="headerlink" title="缘由"></a>缘由</h3><p>在某个无聊到蛋疼的晚上，在网上瞎逛，无意间接触到一个叫<code>jeklly</code>的技术，百度之。才发现原来一直关注的个人博客，好几个都是基于这个技术实现的，原来不知道，看到那些漂亮的个人博客网站都羡慕不已，先不看blog的内容写如何，单看到能开个人blog，就觉得博主好🐂（牛）。这个叫<code>jeklly</code>的，让我眼睛一亮，所以百度了一个晚上，找theme装环境……。最终fork了<a href="https://github.com/huxpro/huxpro.github.io/" target="_blank" rel="external">Hux</a>的theme，建了这个<a href="http://www.gitlee.com" target="_blank" rel="external"><strong>blog</strong>👉</a>。</p>
<p>其实真的不难，有兴趣的朋友可以去折腾下，如果你会一点<code>前端</code>以及<code>git</code>的使用，那你可以很快速的完成blog的搭建，当然还要学习一下<code>Markdown</code>的语法，因为之后你要<code>发布</code>／<code>post</code>文章，需要用<code>markdown</code>语法编辑，然后再传到托管服务器的。</p>
<h3 id="关于内容"><a href="#关于内容" class="headerlink" title="关于内容"></a>关于内容</h3><p>我要做什么呢？ 可以吐槽吗？ 可以当作一个公开的笔记本么？当然在外人眼里，或许觉得<code>blog</code>应该主要是分享吧，分享经验、感受等。对于技术<code>blog</code>更多的是要分享技术。嗯，应该是这样的！真的必须要这样❓</p>
<p>NO！</p>
<p>我的地盘我做主啊！！！ 哈哈哈😄</p>
<h3 id="迷惑的"><a href="#迷惑的" class="headerlink" title="迷惑的"></a>迷惑的</h3><p>开了blog能坚持经常写博么，平时那么上班那么忙，下班还有时间去写blog？说实在，现在更多的是好奇吧，更有一点想炫耀的心里😄，至于后面如何，who care？</p>
<p>好吧，我承认，开blog的动机不纯。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;缘由&quot;&gt;&lt;a href=&quot;#缘由&quot; class=&quot;headerlink&quot; title=&quot;缘由&quot;&gt;&lt;/a&gt;缘由&lt;/h3&gt;&lt;p&gt;在某个无聊到蛋疼的晚上，在网上瞎逛，无意间接触到一个叫&lt;code&gt;jeklly&lt;/code&gt;的技术，百度之。才发现原来一直关注的个人博客，好
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Welcome to Tranquilpeak 1.7</title>
    <link href="http://darcylee.coding.me/hexo-blog/2015/06/15/Welcome-to-the-new-Tranquilpeak/"/>
    <id>http://darcylee.coding.me/hexo-blog/2015/06/15/Welcome-to-the-new-Tranquilpeak/</id>
    <published>2015-06-15T12:30:05.000Z</published>
    <updated>2016-12-06T06:39:10.052Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --></p>
<p><img src="http://d1u9biwaxjngwg.cloudfront.net/showcases/showcase-v1.7.jpg" alt="Tranquilpeak"><br>Tranquilpeak is a gorgeous responsive theme for Hexo blog framework. It has many features and integrated services to improve user experience.<br><!-- toc --></p>
<h1 id="Tranquilpeak"><a href="#Tranquilpeak" class="headerlink" title="Tranquilpeak"></a>Tranquilpeak</h1><p><a href="https://gitter.im/LouisBarranqueiro/hexo-theme-tranquilpeak?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge" target="_blank" rel="external"><img src="https://badges.gitter.im/Join%20Chat.svg" alt="Join the chat at https://gitter.im/LouisBarranqueiro/hexo-theme-tranquilpeak"></a></p>
<p>A gorgeous responsive theme for Hexo blog framework </p>
<p><a href="http://louisbarranqueiro.github.io/hexo-theme-tranquilpeak" target="_blank" rel="external"><img src="http://d1u9biwaxjngwg.cloudfront.net/showcases/showcase-v1.6.jpg" alt="Tranquilpeak"></a></p>
<h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><ul>
<li><a href="#general">General</a></li>
<li><a href="#features">Features</a></li>
<li><a href="#quick-start">Quick start</a></li>
<li><a href="#demo">Demo</a></li>
<li><a href="#documentation">Documentation</a></li>
<li><a href="#contributing">Contributing</a></li>
<li><a href="#showcase">Showcase</a></li>
<li><a href="#license">License</a></li>
</ul>
<h2 id="General"><a href="#General" class="headerlink" title="General"></a>General</h2><ul>
<li><strong>Author</strong> : Louis Barranqueiro</li>
<li><strong>Version</strong> : 1.7.0</li>
<li><strong>Compatibility</strong> : Hexo 3.0.0 or later</li>
</ul>
<h2 id="Features"><a href="#Features" class="headerlink" title="Features"></a>Features</h2><p><strong>General features :</strong>  </p>
<ul>
<li>Fully responsive</li>
<li>Optimized for tablets &amp; mobiles</li>
<li>Configurable menu of the sidebar</li>
<li>Pages to filter tags, categories and archives</li>
<li>Background cover image</li>
<li>Beautiful about page</li>
<li>Support Open Graph protocol</li>
<li>Support internationalization (i18</li>
<li>Easily customizable (fonts, colors, layout elements, code coloration, etc..</li>
</ul>
<p><strong>Posts features :</strong>  </p>
<ul>
<li>Thumbnail image</li>
<li>Cover image</li>
<li>Responsive videos &amp; images</li>
<li>Sharing options</li>
<li>Navigation menu</li>
<li>GitHub theme for code highlighting (customizable)</li>
<li>Image gallery</li>
<li>Tags for images (FancyBox), wide images, tabbed code blocks, highlighted text, alerts</li>
<li>Table of contents  </li>
</ul>
<p><strong>Integrated services :</strong>  </p>
<ul>
<li>Disqus</li>
<li>Duoshuo</li>
<li>Google analytics</li>
<li>Baidu analytics</li>
<li>Gravatar</li>
<li>Swiftype</li>
<li>Facebook Insights</li>
</ul>
<h2 id="Quick-start"><a href="#Quick-start" class="headerlink" title="Quick start"></a>Quick start</h2><p><strong>Please read <a href="https://github.com/LouisBarranqueiro/hexo-theme-tranquilpeak/blob/master/docs/user.md" target="_blank" rel="external">user documentation</a>, it’s short and useful to discover all features and possibilities of the theme, especially the  <a href="https://github.com/LouisBarranqueiro/hexo-theme-tranquilpeak/blob/master/docs/user.md#writing-posts" target="_blank" rel="external">writing posts</a> section</strong></p>
<h5 id="For-people-who-want-to-use-the-original-version-of-Tranquilpeak-without-modifications-users"><a href="#For-people-who-want-to-use-the-original-version-of-Tranquilpeak-without-modifications-users" class="headerlink" title="For people who want to use the original version of Tranquilpeak without modifications (users)"></a>For people who want to use the original version of Tranquilpeak without modifications (users)</h5><ol>
<li>Download the latest version ready for production use here : <a href="https://github.com/LouisBarranqueiro/hexo-theme-tranquilpeak/releases/download/v1.7.0/hexo-theme-tranquilpeak-built-for-production-1.7.0.zip" target="_blank" rel="external">hexo-theme-tranquilpeak-prod-1.7.0</a></li>
<li>Follow <a href="https://github.com/LouisBarranqueiro/hexo-theme-tranquilpeak/blob/master/docs/user.md" target="_blank" rel="external">user documentation</a> to install and configure the theme  </li>
</ol>
<h5 id="For-people-who-want-to-create-their-own-version-of-tranquilpeak-developers"><a href="#For-people-who-want-to-create-their-own-version-of-tranquilpeak-developers" class="headerlink" title="For people who want to create their own version of tranquilpeak (developers)"></a>For people who want to create their own version of tranquilpeak (developers)</h5><ol>
<li>Run <code>git clone https://github.com/LouisBarranqueiro/hexo-theme-tranquilpeak.git</code>  </li>
<li>Follow <a href="https://github.com/LouisBarranqueiro/hexo-theme-tranquilpeak/blob/master/docs/developer.md" target="_blank" rel="external">developer documentation</a> to edit and build the theme  </li>
</ol>
<h2 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h2><p>Check out Tranquilpeak theme in live : <a href="http://louisbarranqueiro.github.io/hexo-theme-tranquilpeak" target="_blank" rel="external">hexo-theme-tranquilpeak demo</a></p>
<h2 id="Showcase"><a href="#Showcase" class="headerlink" title="Showcase"></a>Showcase</h2><p>I would like to create a showcase with all blogs that use Tranquilpeak, please, add your blog into.<br><strong>Click <a href="https://github.com/LouisBarranqueiro/hexo-theme-tranquilpeak/issues/new?title=Add%20my%20blog%20into%20the%20showcase&amp;body=Hey,%20add%20my%20blog%20into%20the%20showcase:" target="_blank" rel="external">here</a> to add your blog into the showcase.</strong></p>
<h2 id="Documentation"><a href="#Documentation" class="headerlink" title="Documentation"></a>Documentation</h2><p>If it’s your first time using Hexo, please check <a href="https://hexo.io/docs/" target="_blank" rel="external">Hexo official documentation</a></p>
<h5 id="For-users"><a href="#For-users" class="headerlink" title="For users"></a>For users</h5><p>To install and configure the theme, consult the following documentation : <a href="https://github.com/LouisBarranqueiro/hexo-theme-tranquilpeak/blob/master/docs/user.md" target="_blank" rel="external">user documentation</a>  </p>
<h5 id="For-developers"><a href="#For-developers" class="headerlink" title="For developers"></a>For developers</h5><p>To understand the code, the workflow and edit the theme, consult the following documentation : <a href="https://github.com/LouisBarranqueiro/hexo-theme-tranquilpeak/blob/master/docs/developer.md" target="_blank" rel="external">developer documentation</a></p>
<h2 id="Contributing"><a href="#Contributing" class="headerlink" title="Contributing"></a>Contributing</h2><p>All kinds of contributions (enhancements, new features, documentation &amp; code improvements, issues &amp; bugs reporting) are welcome.</p>
<p>Read <a href="https://github.com/LouisBarranqueiro/hexo-theme-tranquilpeak/blob/master/.github/CONTRIBUTING.md" target="_blank" rel="external">guidelines for contributing</a> for more information.</p>
<h2 id="License"><a href="#License" class="headerlink" title="License"></a>License</h2><p>hexo-theme-tranquilpeak is released under the terms of the <a href="https://github.com/LouisBarranqueiro/hexo-theme-tranquilpeak/blob/master/LICENSE" target="_blank" rel="external">GNU General Public License v3.0</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Tranquilpeak is a gorgeous responsive theme for Hexo blog framework. It has many features and integrated services to improve user experience.&lt;br&gt;
    
    </summary>
    
      <category term="tranquilpeak" scheme="http://darcylee.coding.me/hexo-blog/categories/tranquilpeak/"/>
    
      <category term="releases" scheme="http://darcylee.coding.me/hexo-blog/categories/tranquilpeak/releases/"/>
    
    
      <category term="hexo theme" scheme="http://darcylee.coding.me/hexo-blog/tags/hexo-theme/"/>
    
      <category term="responsive" scheme="http://darcylee.coding.me/hexo-blog/tags/responsive/"/>
    
      <category term="swiftype" scheme="http://darcylee.coding.me/hexo-blog/tags/swiftype/"/>
    
      <category term="gravatar" scheme="http://darcylee.coding.me/hexo-blog/tags/gravatar/"/>
    
      <category term="disqus" scheme="http://darcylee.coding.me/hexo-blog/tags/disqus/"/>
    
      <category term="google analytics" scheme="http://darcylee.coding.me/hexo-blog/tags/google-analytics/"/>
    
  </entry>
  
  <entry>
    <title>Elements showcase</title>
    <link href="http://darcylee.coding.me/hexo-blog/2015/05/28/Elements-showcase/"/>
    <id>http://darcylee.coding.me/hexo-blog/2015/05/28/Elements-showcase/</id>
    <published>2015-05-28T12:30:05.000Z</published>
    <updated>2016-12-06T06:39:10.052Z</updated>
    
    <content type="html"><![CDATA[<p>Check out how Tranquilpeak theme display well HTML elements (title, paragraph, blockquote, table and more..). It’s simple and elegant.<br><a id="more"></a></p>
<h1 id="Heading-1"><a href="#Heading-1" class="headerlink" title="Heading 1"></a>Heading 1</h1><h2 id="Heading-2"><a href="#Heading-2" class="headerlink" title="Heading 2"></a>Heading 2</h2><h3 id="Heading-3"><a href="#Heading-3" class="headerlink" title="Heading 3"></a>Heading 3</h3><h4 id="Heading-4"><a href="#Heading-4" class="headerlink" title="Heading 4"></a>Heading 4</h4><h5 id="Heading-5"><a href="#Heading-5" class="headerlink" title="Heading 5"></a>Heading 5</h5><h6 id="Heading-6"><a href="#Heading-6" class="headerlink" title="Heading 6"></a>Heading 6</h6><h2 id="Paragraph"><a href="#Paragraph" class="headerlink" title="Paragraph"></a>Paragraph</h2><p>Lorem ipsum dolor sit amet, <a href="">test link</a> consectetur adipiscing elit. <strong>Strong text</strong> pellentesque ligula commodo viverra vehicula. <em>Italic text</em> at ullamcorper enim. Morbi a euismod nibh. <u>Underline text</u> non elit nisl. <del>Deleted text</del> tristique, sem id condimentum tempus, metus lectus venenatis mauris, sit amet semper lorem felis a eros. Fusce egestas nibh at sagittis auctor. Sed ultricies ac arcu quis molestie. Donec dapibus nunc in nibh egestas, vitae volutpat sem iaculis. Curabitur sem tellus, elementum nec quam id, fermentum laoreet mi. Ut mollis ullamcorper turpis, vitae facilisis velit ultricies sit amet. Etiam laoreet dui odio, id tempus justo tincidunt id. Phasellus scelerisque nunc sed nunc ultricies accumsan.</p>
<p>Interdum et malesuada fames ac ante ipsum primis in faucibus. <code>Sed erat diam</code>, blandit eget felis aliquam, rhoncus varius urna. Donec tellus sapien, sodales eget ante vitae, feugiat ullamcorper urna. Praesent auctor dui vitae dapibus eleifend. Proin viverra mollis neque, ut ullamcorper elit posuere eget.</p>
<h2 id="List-Types"><a href="#List-Types" class="headerlink" title="List Types"></a>List Types</h2><h3 id="Definition-List-dl"><a href="#Definition-List-dl" class="headerlink" title="Definition List (dl)"></a>Definition List (dl)</h3><dl><dt>Definition List Title</dt><dd>This is a definition list division.</dd></dl>

<h3 id="Ordered-List-ol"><a href="#Ordered-List-ol" class="headerlink" title="Ordered List (ol)"></a>Ordered List (ol)</h3><ol>
<li>List Item 1</li>
<li>List Item 2</li>
<li>List Item 3</li>
</ol>
<h3 id="Unordered-List-ul"><a href="#Unordered-List-ul" class="headerlink" title="Unordered List (ul)"></a>Unordered List (ul)</h3><ul>
<li>List Item 1</li>
<li>List Item 2</li>
<li>List Item 3</li>
</ul>
<h2 id="Table"><a href="#Table" class="headerlink" title="Table"></a>Table</h2><table>
<thead>
<tr>
<th>Header 1</th>
<th>Header 2</th>
<th>Header 3</th>
</tr>
</thead>
<tbody>
<tr>
<td>Division 1</td>
<td>Division 2</td>
<td>Division 3</td>
</tr>
<tr>
<td>Division 1</td>
<td>Division 2</td>
<td>Division 3</td>
</tr>
<tr>
<td>Division 1</td>
<td>Division 2</td>
<td>Division 3</td>
</tr>
<tr>
<td>Division 1</td>
<td>Division 2</td>
<td>Division 3</td>
</tr>
</tbody>
</table>
<h2 id="Misc-Stuff-abbr-acronym-sub-sup-etc"><a href="#Misc-Stuff-abbr-acronym-sub-sup-etc" class="headerlink" title="Misc Stuff - abbr, acronym, sub, sup, etc."></a>Misc Stuff - abbr, acronym, sub, sup, etc.</h2><p>Lorem <sup>superscript</sup> dolor <sub>subscript</sub> amet, consectetuer adipiscing <kdb>ctrl + c</kdb>. Nullam dignissim convallis est. Quisque aliquam. <cite>cite</cite>. Nunc iaculis suscipit dui.<br> Nam<br>sit amet sem. Aliquam libero nisi, imperdiet at, tincidunt nec, gravida vehicula, nisl. Praesent mattis, massa quis luctus fermentum, turpis mi volutpat justo, eu volutpat enim diam eget metus. Maecenas ornare tortor. Donec sed tellus eget sapien fringilla nonummy. <acronym title="National Basketball Association">NBA</acronym> Mauris a ante. Suspendisse quam sem, consequat at, commodo vitae, feugiat in, nunc. Morbi imperdiet augue quis tellus.  <abbr title="Avenue">AVE</abbr></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Check out how Tranquilpeak theme display well HTML elements (title, paragraph, blockquote, table and more..). It’s simple and elegant.&lt;br&gt;
    
    </summary>
    
      <category term="tranquilpeak" scheme="http://darcylee.coding.me/hexo-blog/categories/tranquilpeak/"/>
    
      <category term="features" scheme="http://darcylee.coding.me/hexo-blog/categories/tranquilpeak/features/"/>
    
    
      <category term="html elements" scheme="http://darcylee.coding.me/hexo-blog/tags/html-elements/"/>
    
      <category term="markdown" scheme="http://darcylee.coding.me/hexo-blog/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>Cover image showcase</title>
    <link href="http://darcylee.coding.me/hexo-blog/2015/05/13/Cover-image-showcase/"/>
    <id>http://darcylee.coding.me/hexo-blog/2015/05/13/Cover-image-showcase/</id>
    <published>2015-05-13T12:30:05.000Z</published>
    <updated>2016-12-06T06:39:10.052Z</updated>
    
    <content type="html"><![CDATA[<p>Tranquilpeak integrate a unique “cover image” feature. Open this post to see how this feature sublimate your article.<br><a id="more"></a><br>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce eget urna vitae velit eleifend interdum at ac nisi. In nec ligula lacus. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Sed eu cursus erat, ut dapibus quam. Aliquam eleifend dolor vitae libero pharetra adipiscing. Etiam adipiscing dolor a quam tempor, eu convallis nulla varius. Aliquam sollicitudin risus a porta aliquam. Ut nec velit dolor. Proin eget leo lobortis, aliquam est sed, mollis mauris. Fusce vitae leo pretium massa accumsan condimentum. Fusce malesuada gravida lectus vel vulputate. Donec bibendum porta nibh ut aliquam.<br>Sed lorem felis, congue non fringilla eu, aliquam eu eros. Curabitur orci libero, mollis sed semper vitae, adipiscing in lectus. Aenean non egestas odio. Donec sollicitudin nisi quis lorem gravida, in pharetra mauris fringilla. Duis sit amet faucibus dolor, id aliquam neque. In egestas, odio gravida tempor dictum, mauris felis faucibus purus, sit amet commodo lacus diam vitae est. Ut ut quam eget massa semper sodales. Aenean non ipsum cursus, blandit lectus in, ornare odio. Curabitur ultrices porttitor vulputate.<br>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce eget urna vitae velit eleifend interdum at ac nisi. In nec ligula lacus. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Sed eu cursus erat, ut dapibus quam. Aliquam eleifend dolor vitae libero pharetra adipiscing. Etiam adipiscing dolor a quam tempor, eu convallis nulla varius. Aliquam sollicitudin risus a porta aliquam. Ut nec velit dolor. Proin eget leo lobortis, aliquam est sed, mollis mauris. Fusce vitae leo pretium massa accumsan condimentum. Fusce malesuada gravida lectus vel vulputate. Donec bibendum porta nibh ut aliquam.</p>
<p>Sed lorem felis, congue non fringilla eu, aliquam eu eros. Curabitur orci libero, mollis sed semper vitae, adipiscing in lectus. Aenean non egestas odio. Donec sollicitudin nisi quis lorem gravida, in pharetra mauris fringilla. Duis sit amet faucibus dolor, id aliquam neque. In egestas, odio gravida tempor dictum, mauris felis faucibus purus, sit amet commodo lacus diam vitae est. Ut ut quam eget massa semper sodales. Aenean non ipsum cursus, blandit lectus in, ornare odio. Curabitur ultrices porttitor vulputate.<br>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce eget urna vitae velit eleifend interdum at ac nisi. In nec ligula lacus. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Sed eu cursus erat, ut dapibus quam. Aliquam eleifend dolor vitae libero pharetra adipiscing. Etiam adipiscing dolor a quam tempor, eu convallis nulla varius. Aliquam sollicitudin risus a porta aliquam. Ut nec velit dolor. Proin eget leo lobortis, aliquam est sed, mollis mauris. Fusce vitae leo pretium massa accumsan condimentum. Fusce malesuada gravida lectus vel vulputate. Donec bibendum porta nibh ut aliquam.</p>
<p>Sed lorem felis, congue non fringilla eu, aliquam eu eros. Curabitur orci libero, mollis sed semper vitae, adipiscing in lectus. Aenean non egestas odio. Donec sollicitudin nisi quis lorem gravida, in pharetra mauris fringilla. Duis sit amet faucibus dolor, id aliquam neque. In egestas, odio gravida tempor dictum, mauris felis faucibus purus, sit amet commodo lacus diam vitae est. Ut ut quam eget massa semper sodales. Aenean non ipsum cursus, blandit lectus in, ornare odio. Curabitur ultrices porttitor vulputate.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Tranquilpeak integrate a unique “cover image” feature. Open this post to see how this feature sublimate your article.&lt;br&gt;
    
    </summary>
    
      <category term="tranquilpeak" scheme="http://darcylee.coding.me/hexo-blog/categories/tranquilpeak/"/>
    
      <category term="features" scheme="http://darcylee.coding.me/hexo-blog/categories/tranquilpeak/features/"/>
    
    
      <category term="cover image" scheme="http://darcylee.coding.me/hexo-blog/tags/cover-image/"/>
    
  </entry>
  
  <entry>
    <title>highlighted code showcase</title>
    <link href="http://darcylee.coding.me/hexo-blog/2015/03/23/highlighted-code-showcase/"/>
    <id>http://darcylee.coding.me/hexo-blog/2015/03/23/highlighted-code-showcase/</id>
    <published>2015-03-23T12:30:05.000Z</published>
    <updated>2016-12-06T06:39:10.056Z</updated>
    
    <content type="html"><![CDATA[<p>Tranquilpeak Hexo theme have its own theme to highlight source code. It’s based on GitHub theme: simple and elegant. Check out how it sublimate source codes.<br><a id="more"></a></p>
<!-- toc -->
<h1 id="Tabbed-code-block"><a href="#Tabbed-code-block" class="headerlink" title="Tabbed code block"></a>Tabbed code block</h1><figure class="codeblock codeblock--tabbed"><figcaption><span>tabbed_codeblock</span><ul class="tabs"><li class="tab active">js</li><li class="tab">css</li><li class="tab">html</li></ul></figcaption><div class="tabs-content"><figure class="highlight js" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">$initHighlight</span>(<span class="params">block, flags</span>) </span>{</span><br><span class="line">  <span class="keyword">try</span> {</span><br><span class="line">    <span class="keyword">if</span> (block.className.search(<span class="regexp">/\bno\-highlight\b/</span>) != <span class="number">-1</span>)</span><br><span class="line">      <span class="keyword">return</span> processBlock(block.function, <span class="literal">true</span>, <span class="number">0x0F</span>) + <span class="string">' class=""'</span>;</span><br><span class="line">  } <span class="keyword">catch</span> (e) {</span><br><span class="line">    <span class="comment">/* handle exception */</span></span><br><span class="line">    <span class="keyword">var</span> e4x =</span><br><span class="line">        <span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span>Example</span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>1234<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span> / <span class="number">2</span>; i &lt; classes.length; i++) { <span class="comment">// "0 / 2" should not be parsed as regexp</span></span><br><span class="line">    <span class="keyword">if</span> (checkCondition(classes[i]) === <span class="literal">undefined</span>)</span><br><span class="line">      <span class="keyword">return</span> <span class="regexp">/\d+[\s/]/g</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="built_in">Array</span>.every(classes, <span class="built_in">Boolean</span>));</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight css" style="display: none;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">media</span> screen and (-webkit-min-device-pixel-ratio: <span class="number">0</span>) {</span><br><span class="line">  <span class="selector-tag">body</span><span class="selector-pseudo">:first-of-type</span> <span class="selector-tag">pre</span><span class="selector-pseudo">::after</span> {</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">'highlight: '</span> <span class="built_in">attr</span>(class);</span><br><span class="line">  }</span><br><span class="line">  <span class="selector-tag">body</span> {</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(45deg, blue, red);</span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">@<span class="keyword">import</span> url(<span class="string">'print.css'</span>);</span><br><span class="line">@<span class="keyword">page</span><span class="selector-pseudo">:right</span> {</span><br><span class="line"> <span class="attribute">margin</span>: <span class="number">1cm</span> <span class="number">2cm</span> <span class="number">1.3cm</span> <span class="number">4cm</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">@<span class="keyword">font-face</span> {</span><br><span class="line">  <span class="attribute">font-family</span>: Chunkfive; <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">'Chunkfive.otf'</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-class">.text</span>,</span><br><span class="line"><span class="selector-id">#content</span>,</span><br><span class="line"><span class="selector-tag">li</span><span class="selector-attr">[lang=ru]</span> {</span><br><span class="line">  <span class="attribute">font</span>: Tahoma, Chunkfive, sans-serif;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">'hatch.png'</span>) <span class="comment">/* wtf? */</span>;  <span class="attribute">color</span>: <span class="number">#F0F0F0</span> <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight html" style="display: none;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">response</span> <span class="attr">value</span>=<span class="string">"ok"</span> <span class="attr">xml:lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">text</span>&gt;</span>Ok<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">comment</span> <span class="attr">html_allowed</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ns1:description</span>&gt;</span>&lt;![CDATA[</span><br><span class="line">  CDATA is &lt;not&gt; magical.</span><br><span class="line">  ]]&gt;<span class="tag">&lt;/<span class="name">ns1:description</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">response</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"><span class="selector-tag">body</span> {<span class="attribute">width</span>: <span class="number">500px</span>;}</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"application/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">$init</span>(<span class="params"></span>) </span>{<span class="keyword">return</span> <span class="literal">true</span>;}</span><br><span class="line"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">checked</span> <span class="attr">class</span>=<span class="string">"title"</span> <span class="attr">id</span>=<span class="string">'title'</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- here goes the rest of the page --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure></div></figure>
<h1 id="ApacheConf"><a href="#ApacheConf" class="headerlink" title="ApacheConf"></a>ApacheConf</h1><figure class="highlight apacheconf"><figcaption><span>apache.conf</span><a href="http://underscorejs.org/#compact" target="_blank" rel="external">apache.conf</a></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># rewrite`s rules for wordpress pretty url</span></div><div class="line"><span class="attribute"><span class="nomarkup">LoadModule</span></span> rewrite_module  modules/mod_rewrite.so</div><div class="line"><span class="attribute"><span class="nomarkup">RewriteCond</span></span> <span class="variable">%&#123;REQUEST_FILENAME&#125;</span> !-f</div><div class="line"><span class="attribute"><span class="nomarkup">RewriteCond</span></span> <span class="variable">%&#123;REQUEST_FILENAME&#125;</span> !-d</div><div class="line"><span class="attribute"><span class="nomarkup">RewriteRule</span></span> . index.php<span class="meta"> [NC,L]</span></div><div class="line"></div><div class="line"><span class="attribute">ExpiresActive</span> <span class="literal">On</span></div><div class="line"><span class="attribute">ExpiresByType</span> application/x-javascript  <span class="string">"access plus 1 days"</span></div><div class="line"></div><div class="line"><span class="attribute"><span class="nomarkup">Order</span></span> Deny,Allow</div><div class="line"><span class="attribute"><span class="nomarkup">Allow</span></span> from <span class="literal">All</span></div><div class="line"></div><div class="line"><span class="section">&lt;Location /maps/&gt;</span></div><div class="line">  <span class="attribute">RewriteMap</span> map txt:map.txt</div><div class="line">  <span class="attribute">RewriteMap</span> lower int:tolower</div><div class="line">  <span class="attribute"><span class="nomarkup">RewriteCond</span></span> <span class="variable">%&#123;REQUEST_URI&#125;</span> ^/([^/.]+)\.html$<span class="meta"> [NC]</span></div><div class="line">  <span class="attribute"><span class="nomarkup">RewriteCond</span></span> <span class="variable">$&#123;map:<span class="variable">$&#123;lower:<span class="number">%1</span>&#125;</span>|NOT_FOUND&#125;</span> !NOT_FOUND</div><div class="line">  <span class="attribute"><span class="nomarkup">RewriteRule</span></span> .? /index.php?q=<span class="variable">$&#123;map:<span class="variable">$&#123;lower:<span class="number">%1</span>&#125;</span>&#125;</span><span class="meta"> [NC,L]</span></div><div class="line"><span class="section">&lt;/Location&gt;</span></div></pre></td></tr></table></figure>
<h1 id="Bash"><a href="#Bash" class="headerlink" title="Bash"></a>Bash</h1><figure class="highlight bash"><figcaption><span>test.bash</span><a href="http://underscorejs.org/#compact" target="_blank" rel="external">test.bash</a></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"></div><div class="line"><span class="comment">###### BEGIN CONFIG</span></div><div class="line">ACCEPTED_HOSTS=<span class="string">"/root/.hag_accepted.conf"</span></div><div class="line">BE_VERBOSE=<span class="literal">false</span></div><div class="line"><span class="comment">###### END CONFIG</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$UID</span>"</span> <span class="_">-ne</span> 0 ]</div><div class="line"><span class="keyword">then</span></div><div class="line"> <span class="built_in">echo</span> <span class="string">"Superuser rights is required"</span></div><div class="line"> <span class="built_in">echo</span> <span class="string">'Printing the # sign'</span></div><div class="line"> <span class="built_in">exit</span> 2</div><div class="line"><span class="keyword">fi</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> <span class="built_in">test</span> <span class="variable">$#</span> <span class="_">-eq</span> 0</div><div class="line"><span class="keyword">then</span></div><div class="line"><span class="keyword">elif</span> <span class="built_in">test</span> [ <span class="variable">$1</span> == <span class="string">'start'</span> ]</div><div class="line"><span class="keyword">else</span></div><div class="line"><span class="keyword">fi</span></div><div class="line"></div><div class="line"><span class="function"><span class="title">genApacheConf</span></span>()&#123;</div><div class="line"> <span class="keyword">if</span> [[ <span class="string">"<span class="variable">$2</span>"</span> = <span class="string">"www"</span> ]]</div><div class="line"> <span class="keyword">then</span></div><div class="line">  full_domain=<span class="variable">$1</span></div><div class="line"> <span class="keyword">else</span></div><div class="line">  full_domain=<span class="variable">$2</span>.<span class="variable">$1</span></div><div class="line"> <span class="keyword">fi</span></div><div class="line"> host_root=<span class="string">"<span class="variable">$&#123;APACHE_HOME_DIR&#125;</span><span class="variable">$1</span>/<span class="variable">$2</span>/<span class="variable">$(title)</span>"</span></div><div class="line"> <span class="built_in">echo</span> <span class="_">-e</span> <span class="string">"# Host <span class="variable">$1</span>/<span class="variable">$2</span> :"</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="Coffeescript"><a href="#Coffeescript" class="headerlink" title="Coffeescript"></a>Coffeescript</h1><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line">###</div><div class="line">Some tests</div><div class="line">###</div><div class="line">class Animal</div><div class="line">  constructor: (@name) -&gt;</div><div class="line">  move: (meters) -&gt; alert @name + &quot; moved &quot; + meters + &quot;m.&quot;</div><div class="line"></div><div class="line">class Snake extends Animal</div><div class="line">  move: -&gt;</div><div class="line">    alert &apos;Slithering...&apos;</div><div class="line">    super 5</div><div class="line"></div><div class="line">number   = 42; opposite = true</div><div class="line"></div><div class="line"></div><div class="line">square = (x) -&gt; x * x</div><div class="line"></div><div class="line">range = [1..2]</div><div class="line">list = [1...5]</div><div class="line"></div><div class="line">math =</div><div class="line">  root:   Math.sqrt</div><div class="line">  cube:   (x) =&gt; x * square x</div><div class="line"></div><div class="line">race = (winner, runners...) -&gt;</div><div class="line">  print winner, runners</div><div class="line"></div><div class="line">alert &quot;I knew it!&quot; if elvis?</div><div class="line"></div><div class="line">cubes = math.cube num for num in list</div><div class="line"></div><div class="line">text = &quot;&quot;&quot;</div><div class="line"> Result</div><div class="line">    is #&#123; @number &#125;&quot;&quot;&quot;</div><div class="line"></div><div class="line">html = &apos;&apos;&apos;   &lt;body&gt;&lt;/body&gt;&apos;&apos;&apos;</div><div class="line"></div><div class="line">String::dasherize = -&gt;</div><div class="line">  this.replace /_/g, &quot;-&quot;</div><div class="line">SINGERS = &#123;Jagger: &quot;Rock&quot;, Elvis: &quot;Roll&quot;&#125;</div><div class="line"></div><div class="line">t = ///</div><div class="line">#&#123; something &#125;[a-z]</div><div class="line">///</div><div class="line"></div><div class="line">$(&apos;.shopping_cart&apos;).bind &apos;click&apos;, (event) =&gt;</div><div class="line">    @customer.purchase @cart</div><div class="line"></div><div class="line">hi = `function() &#123;</div><div class="line">  return [document.title, &quot;Hello JavaScript&quot;].join(&quot;: &quot;);</div><div class="line">&#125;`</div></pre></td></tr></table></figure>
<h1 id="C"><a href="#C" class="headerlink" title="C++"></a>C++</h1><figure class="highlight cpp"><figcaption><span>archives.cpp</span><a href="http://underscorejs.org/#compact" target="_blank" rel="external">archives.cpp</a></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*</span></div><div class="line"> * Block comment</div><div class="line"> */</div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></div><div class="line"></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;  <span class="comment">// line comment</span></div><div class="line"><span class="keyword">namespace</span> foo &#123;</div><div class="line"></div><div class="line">  <span class="keyword">typedef</span> <span class="keyword">struct</span> Struct &#123;</div><div class="line">    <span class="keyword">int</span> field;</div><div class="line">  &#125; Typedef;</div><div class="line">  <span class="keyword">enum</span> Enum &#123;Foo = <span class="number">1</span>, Bar = <span class="number">2</span>&#125;;</div><div class="line"></div><div class="line">  Typedef *globalVar;</div><div class="line">  <span class="keyword">extern</span> Typedef *externVar;</div><div class="line"></div><div class="line">  <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T, <span class="keyword">int</span> N&gt;</div><div class="line">  <span class="keyword">class</span> Class &#123;</div><div class="line">    T n;</div><div class="line">  <span class="keyword">public</span>:</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">function</span><span class="params">(<span class="keyword">int</span> paramName)</span> </span>&#123;</div><div class="line">      <span class="keyword">int</span> *localVar = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">1</span>];</div><div class="line">      <span class="keyword">this</span>-&gt;n = N;</div><div class="line"></div><div class="line">    label:</div><div class="line">      <span class="built_in">printf</span>(<span class="string">"Formatted string %d\n\g"</span>, localVar[<span class="number">0</span>]);</div><div class="line">      <span class="built_in">printf</span>(<span class="string">R"**(Formatted raw-string %d\n)**"</span>, <span class="number">1</span>);</div><div class="line">      <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; (<span class="number">1</span> &lt;&lt; <span class="number">2</span>) &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</div><div class="line"></div><div class="line">    <span class="meta">#<span class="meta-keyword">define</span> FOO(A) A</span></div><div class="line">    <span class="meta">#<span class="meta-keyword">ifdef</span> DEBUG</span></div><div class="line">      <span class="built_in">printf</span>(<span class="string">"debug"</span>);</div><div class="line">    <span class="meta">#<span class="meta-keyword">endif</span></span></div><div class="line">    &#125;</div><div class="line">  &#125;;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="CShparp"><a href="#CShparp" class="headerlink" title="CShparp"></a>CShparp</h1><figure class="highlight cs"><figcaption><span>archives.cs</span><a href="http://underscorejs.org/#compact" target="_blank" rel="external">archives.cs</a></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">using</span> System;</div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span> disable 414, 3021</span></div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Program</span></div><div class="line">&#123;</div><div class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span>The entry point to the program.<span class="doctag">&lt;/summary&gt;</span></span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></div><div class="line">    &#123;</div><div class="line">        Console.WriteLine(<span class="string">"Hello, World!"</span>);</div><div class="line">        <span class="keyword">string</span> s = <span class="string">@"This</span></div><div class="line">""string""</div><div class="line">spans</div><div class="line">multiple</div><div class="line">lines!";</div><div class="line">        <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">async</span> Task&lt;<span class="keyword">int</span>&gt; <span class="title">AccessTheWebAsync</span>(<span class="params"></span>)</span></div><div class="line">&#123;</div><div class="line">    <span class="comment">// ...</span></div><div class="line">    <span class="keyword">string</span> urlContents = <span class="keyword">await</span> getStringTask;</div><div class="line">    <span class="keyword">return</span> urlContents.Length;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h1><figure class="highlight css"><figcaption><span>archives.css</span><a href="http://underscorejs.org/#compact" target="_blank" rel="external">archives.css</a></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">@<span class="keyword">media</span> screen and (-webkit-min-device-pixel-ratio: <span class="number">0</span>) &#123;</div><div class="line">  <span class="selector-tag">body</span><span class="selector-pseudo">:first-of-type</span> <span class="selector-tag">pre</span><span class="selector-pseudo">::after</span> &#123;</div><div class="line">    <span class="attribute">content</span>: <span class="string">'highlight: '</span> <span class="built_in">attr</span>(class);</div><div class="line">  &#125;</div><div class="line">  <span class="selector-tag">body</span> &#123;</div><div class="line">    <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(45deg, blue, red);</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">@<span class="keyword">import</span> url(<span class="string">'print.css'</span>);</div><div class="line">@<span class="keyword">page</span><span class="selector-pseudo">:right</span> &#123;</div><div class="line"> <span class="attribute">margin</span>: <span class="number">1cm</span> <span class="number">2cm</span> <span class="number">1.3cm</span> <span class="number">4cm</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line">@<span class="keyword">font-face</span> &#123;</div><div class="line">  <span class="attribute">font-family</span>: Chunkfive; <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">'Chunkfive.otf'</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-tag">div</span><span class="selector-class">.text</span>,</div><div class="line"><span class="selector-id">#content</span>,</div><div class="line"><span class="selector-tag">li</span><span class="selector-attr">[lang=ru]</span> &#123;</div><div class="line">  <span class="attribute">font</span>: Tahoma, Chunkfive, sans-serif;</div><div class="line">  <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">'hatch.png'</span>) <span class="comment">/* wtf? */</span>;  <span class="attribute">color</span>: <span class="number">#F0F0F0</span> <span class="meta">!important</span>;</div><div class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="DIFF"><a href="#DIFF" class="headerlink" title="DIFF"></a>DIFF</h1><figure class="highlight diff"><figcaption><span>archives.diff</span><a href="http://underscorejs.org/#compact" target="_blank" rel="external">archives.diff</a></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="comment">Index: languages/ini.js</span></div><div class="line"><span class="comment">===================================================================</span></div><div class="line"><span class="comment">--- languages/ini.js    (revision 199)</span></div><div class="line"><span class="comment">+++ languages/ini.js    (revision 200)</span></div><div class="line"><span class="meta">@@ -1,8 +1,7 @@</span></div><div class="line"> hljs.LANGUAGES.ini =</div><div class="line"> &#123;</div><div class="line">   case_insensitive: true,</div><div class="line"><span class="deletion">-  defaultMode:</span></div><div class="line"><span class="deletion">-  &#123;</span></div><div class="line"><span class="addition">+  defaultMode: &#123;</span></div><div class="line">     contains: ['comment', 'title', 'setting'],</div><div class="line">     illegal: '[^\\s]'</div><div class="line">   &#125;,</div><div class="line"></div><div class="line"><span class="comment">*** /path/to/original timestamp</span></div><div class="line"><span class="comment">--- /path/to/new      timestamp</span></div><div class="line"><span class="comment">***************</span></div><div class="line"><span class="meta">*** 1,3 ****</span></div><div class="line"><span class="meta">--- 1,9 ----</span></div><div class="line"><span class="addition">+ This is an important</span></div><div class="line"><span class="addition">+ notice! It should</span></div><div class="line"><span class="addition">+ therefore be located at</span></div><div class="line"><span class="addition">+ the beginning of this</span></div><div class="line"><span class="addition">+ document!</span></div><div class="line"></div><div class="line"><span class="addition">! compress the size of the</span></div><div class="line"><span class="addition">! changes.</span></div><div class="line"></div><div class="line">  It is important to spell</div></pre></td></tr></table></figure>
<h1 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h1><figure class="highlight http"><figcaption><span>archives.http</span><a href="http://underscorejs.org/#compact" target="_blank" rel="external">archives.http</a></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">POST</span> <span class="string">/task?id=1</span> HTTP/1.1</div><div class="line"><span class="attribute">Host</span>: example.org</div><div class="line"><span class="attribute">Content-Type</span>: application/json; charset=utf-8</div><div class="line"><span class="attribute">Content-Length</span>: 19</div><div class="line"></div><div class="line"><span class="json">&#123;<span class="attr">"status"</span>: <span class="string">"ok"</span>, <span class="attr">"extended"</span>: <span class="literal">true</span>&#125;</span></div></pre></td></tr></table></figure>
<h1 id="INI"><a href="#INI" class="headerlink" title="INI"></a>INI</h1><figure class="highlight ini"><figcaption><span>archives.ini</span><a href="http://underscorejs.org/#compact" target="_blank" rel="external">archives.ini</a></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">;Settings relating to the location and loading of the database</span></div><div class="line"><span class="section">[Database]</span></div><div class="line"><span class="attr">ProfileDir</span>=.</div><div class="line"><span class="attr">ShowProfileMgr</span>=smart</div><div class="line"><span class="attr">Profile1_Name[]</span> = <span class="string">"\|/_-=MegaDestoyer=-_\|/"</span></div><div class="line"><span class="attr">DefaultProfile</span>=<span class="literal">True</span></div><div class="line"><span class="attr">AutoCreate</span> = <span class="literal">no</span></div><div class="line"><span class="section"></span></div><div class="line">[AutoExec]</div><div class="line"><span class="attr">use-prompt</span>=<span class="string">"prompt"</span></div><div class="line"><span class="attr">Glob</span>=autoexec_*.ini</div><div class="line"><span class="attr">AskAboutIgnoredPlugins</span>=<span class="number">0</span></div></pre></td></tr></table></figure>
<h1 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h1><figure class="highlight java"><figcaption><span>archives.java</span><a href="http://underscorejs.org/#compact" target="_blank" rel="external">archives.java</a></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/* Block comment */</span></div><div class="line"><span class="keyword">import</span> java.util.Date;</div><div class="line"><span class="comment">/**</span></div><div class="line"> * Doc comment here for &lt;code&gt;SomeClass&lt;/code&gt;</div><div class="line"> * <span class="doctag">@see</span> Math#sin(double)</div><div class="line"> */</div><div class="line"><span class="meta">@Annotation</span> (name=value)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SomeClass</span>&lt;<span class="title">T</span> <span class="keyword">extends</span> <span class="title">Runnable</span>&gt; </span>&#123; <span class="comment">// some comment</span></div><div class="line">  <span class="keyword">private</span> T field = <span class="keyword">null</span>;</div><div class="line">  <span class="keyword">private</span> <span class="keyword">double</span> unusedField = <span class="number">12345.67890</span>;</div><div class="line">  <span class="keyword">private</span> UnknownType anotherString = <span class="string">"Another\nStrin\g"</span>;</div><div class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> staticField = <span class="number">0</span>;</div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="title">SomeClass</span><span class="params">(AnInterface param, <span class="keyword">int</span>[] reassignedParam)</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> localVar = <span class="string">"IntelliJ"</span>; <span class="comment">// Error, incompatible types</span></div><div class="line">    System.out.println(anotherString + toString() + localVar);</div><div class="line">    <span class="keyword">long</span> time = Date.parse(<span class="string">"1.2.3"</span>); <span class="comment">// Method is deprecated</span></div><div class="line">    <span class="keyword">int</span> reassignedValue = <span class="keyword">this</span>.staticField;</div><div class="line">    reassignedValue ++;</div><div class="line">    field.run();</div><div class="line">    <span class="keyword">new</span> SomeClass() &#123;</div><div class="line">      &#123;</div><div class="line">        <span class="keyword">int</span> a = localVar;</div><div class="line">      &#125;</div><div class="line">    &#125;;</div><div class="line">    reassignedParam = <span class="keyword">new</span> ArrayList&lt;String&gt;().toArray(<span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">0</span>]);</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">enum</span> AnEnum &#123; CONST1, CONST2 &#125;</div><div class="line"><span class="class"><span class="keyword">interface</span> <span class="title">AnInterface</span> </span>&#123;</div><div class="line">  <span class="keyword">int</span> CONSTANT = <span class="number">2</span>;</div><div class="line">  <span class="function"><span class="keyword">void</span> <span class="title">method</span><span class="params">()</span></span>;</div><div class="line">&#125;</div><div class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">SomeAbstractClass</span> </span>&#123;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h1><figure class="highlight js"><figcaption><span>archives.js</span><a href="http://underscorejs.org/#compact" target="_blank" rel="external">archives.js</a></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> $initHighlight(<span class="params">block, flags</span>) </span>&#123;</div><div class="line">  <span class="keyword">try</span> &#123;</div><div class="line">    <span class="keyword">if</span> (block.className.search(<span class="regexp">/\bno\-highlight\b/</span>) != <span class="number">-1</span>)</div><div class="line">      <span class="keyword">return</span> processBlock(block.function, <span class="literal">true</span>, <span class="number">0x0F</span>) + <span class="string">' class=""'</span>;</div><div class="line">  &#125; <span class="keyword">catch</span> (e) &#123;</div><div class="line">    <span class="comment">/* handle exception */</span></div><div class="line">    <span class="keyword">var</span> e4x =</div><div class="line">        &lt;div&gt;Example</div><div class="line">            &lt;p&gt;1234&lt;/p&gt;&lt;/div&gt;;</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span> / <span class="number">2</span>; i &lt; classes.length; i++) &#123; <span class="comment">// "0 / 2" should not be parsed as regexp</span></div><div class="line">    <span class="keyword">if</span> (checkCondition(classes[i]) === <span class="literal">undefined</span>)</div><div class="line">      <span class="keyword">return</span> <span class="regexp">/\d+[\s/]/g</span>;</div><div class="line">  &#125;</div><div class="line">  <span class="built_in">console</span>.log(<span class="built_in">Array</span>.every(classes, <span class="built_in">Boolean</span>));</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="JSON"><a href="#JSON" class="headerlink" title="JSON"></a>JSON</h1><figure class="highlight json"><figcaption><span>archives.json</span><a href="http://underscorejs.org/#compact" target="_blank" rel="external">archives.json</a></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">[</div><div class="line">  &#123;</div><div class="line">    <span class="attr">"title"</span>: <span class="string">"apples"</span>,</div><div class="line">    <span class="attr">"count"</span>: [<span class="number">12000</span>, <span class="number">20000</span>],</div><div class="line">    <span class="attr">"description"</span>: &#123;<span class="attr">"text"</span>: <span class="string">"..."</span>, <span class="attr">"sensitive"</span>: <span class="literal">false</span>&#125;</div><div class="line">  &#125;,</div><div class="line">  &#123;</div><div class="line">    <span class="attr">"title"</span>: <span class="string">"oranges"</span>,</div><div class="line">    <span class="attr">"count"</span>: [<span class="number">17500</span>, <span class="literal">null</span>],</div><div class="line">    <span class="attr">"description"</span>: &#123;<span class="attr">"text"</span>: <span class="string">"..."</span>, <span class="attr">"sensitive"</span>: <span class="literal">false</span>&#125;</div><div class="line">  &#125;</div><div class="line">]</div></pre></td></tr></table></figure>
<h1 id="Makefile"><a href="#Makefile" class="headerlink" title="Makefile"></a>Makefile</h1><figure class="highlight mak"><figcaption><span>archives.mak</span><a href="http://underscorejs.org/#compact" target="_blank" rel="external">archives.mak</a></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Makefile</span></div><div class="line"></div><div class="line">BUILDDIR      = _build</div><div class="line">EXTRAS       ?= <span class="variable">$(BUILDDIR)</span>/extras</div><div class="line"></div><div class="line"><span class="meta"><span class="meta-keyword">.PHONY</span>: main clean</span></div><div class="line"></div><div class="line"><span class="section">main:</span></div><div class="line">	@echo <span class="string">"Building main facility..."</span></div><div class="line">	build_main <span class="variable">$(BUILDDIR)</span></div><div class="line"></div><div class="line"><span class="section">clean:</span></div><div class="line">	rm -rf <span class="variable">$(BUILDDIR)</span>/*</div></pre></td></tr></table></figure>
<h1 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h1><figure class="highlight md"><figcaption><span>archives.md</span><a href="http://underscorejs.org/#compact" target="_blank" rel="external">archives.md</a></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="section"># hello world</span></div><div class="line"></div><div class="line">you can write text [<span class="string">with links</span>](<span class="link">http://example.com</span>) inline or [<span class="string">link references</span>][<span class="symbol">1</span>].</div><div class="line"></div><div class="line"><span class="bullet">* </span>one <span class="emphasis">_thing_</span> has <span class="emphasis">*em*</span>phasis</div><div class="line"><span class="bullet">* </span>two <span class="strong">__things__</span> are <span class="strong">**bold**</span></div><div class="line"></div><div class="line">[<span class="symbol">1</span>]: <span class="link">http://example.com</span></div><div class="line"></div><div class="line">---</div><div class="line"></div><div class="line"><span class="section">hello world</span></div><div class="line">===========</div><div class="line"></div><div class="line">&lt;this_is inline="xml"&gt;&lt;/this_is&gt;</div><div class="line"></div><div class="line"><span class="quote">&gt; markdown is so cool</span></div><div class="line"></div><div class="line"><span class="code">    so are code segments</span></div><div class="line"></div><div class="line"><span class="bullet">1. </span>one thing (yeah!)</div><div class="line"><span class="bullet">2. </span>two thing <span class="code">`i can write code`</span>, and <span class="code">`more`</span> wipee!</div></pre></td></tr></table></figure>
<h1 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h1><figure class="highlight nginx"><figcaption><span>archives.conf</span><a href="http://underscorejs.org/#compact" target="_blank" rel="external">archives.conf</a></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">user</span>  www www;</div><div class="line"><span class="attribute">worker_processes</span>  <span class="number">2</span>;</div><div class="line"><span class="attribute">pid</span> /var/run/nginx.pid;</div><div class="line"><span class="attribute">error_log</span>  /var/log/nginx.error_log  <span class="literal">debug</span> | <span class="literal">info</span> | <span class="literal">notice</span> | <span class="literal">warn</span> | <span class="literal">error</span> | <span class="literal">crit</span>;</div><div class="line"></div><div class="line"><span class="section">events</span> &#123;</div><div class="line">    <span class="attribute">connections</span>   <span class="number">2000</span>;</div><div class="line">    <span class="attribute">use</span> <span class="literal">kqueue</span> | <span class="literal">rtsig</span> | <span class="literal">epoll</span> | <span class="literal">/dev/poll</span> | <span class="literal">select</span> | <span class="literal">poll</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="section">http</span> &#123;</div><div class="line">    <span class="attribute">log_format</span> main      <span class="string">'<span class="variable">$remote_addr</span> - <span class="variable">$remote_user</span> [<span class="variable">$time_local</span>] '</span></div><div class="line">                         <span class="string">'"<span class="variable">$request</span>" <span class="variable">$status</span> <span class="variable">$bytes_sent</span> '</span></div><div class="line">                         <span class="string">'"<span class="variable">$http_referer</span>" "<span class="variable">$http_user_agent</span>" '</span></div><div class="line">                         <span class="string">'"<span class="variable">$gzip_ratio</span>"'</span>;</div><div class="line"></div><div class="line">    <span class="attribute">send_timeout</span> <span class="number">3m</span>;</div><div class="line">    <span class="attribute">client_header_buffer_size</span> <span class="number">1k</span>;</div><div class="line"></div><div class="line">    <span class="attribute">gzip</span> <span class="literal">on</span>;</div><div class="line">    <span class="attribute">gzip_min_length</span> <span class="number">1100</span>;</div><div class="line"></div><div class="line">    <span class="comment">#lingering_time 30;</span></div><div class="line"></div><div class="line">    <span class="section">server</span> &#123;</div><div class="line">        <span class="attribute">server_name</span>   one.example.com  www.one.example.com;</div><div class="line">        <span class="attribute">access_log</span>   /var/log/nginx.access_log  main;</div><div class="line"></div><div class="line">        <span class="attribute">rewrite</span> (.*) /index.php?page=<span class="variable">$1</span> <span class="literal">break</span>;</div><div class="line"></div><div class="line">        <span class="attribute">location</span> / &#123;</div><div class="line">            <span class="attribute">proxy_pass</span>         http://127.0.0.1/;</div><div class="line">            <span class="attribute">proxy_redirect</span>     <span class="literal">off</span>;</div><div class="line">            <span class="attribute">proxy_set_header</span>   Host             <span class="variable">$host</span>;</div><div class="line">            <span class="attribute">proxy_set_header</span>   X-Real-IP        <span class="variable">$remote_addr</span>;</div><div class="line">            <span class="attribute">charset</span>            koi8-r;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="attribute">location</span> /api/ &#123;</div><div class="line">            <span class="attribute">fastcgi_pass</span> <span class="number">127.0.0.1:9000</span>;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="attribute">location</span> <span class="regexp">~* \.(jpg|jpeg|gif)$</span> &#123;</div><div class="line">            <span class="attribute">root</span>         /spool/www;</div><div class="line">        &#125;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<h1 id="Objective-C"><a href="#Objective-C" class="headerlink" title="Objective-C"></a>Objective-C</h1><figure class="highlight objectivec"><figcaption><span>archives.m</span><a href="http://underscorejs.org/#compact" target="_blank" rel="external">archives.m</a></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#import <span class="meta-string">&lt;UIKit/UIKit.h&gt;</span></span></div><div class="line"><span class="meta">#import <span class="meta-string">"Dependency.h"</span></span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">@protocol</span> <span class="title">WorldDataSource</span></span></div><div class="line"><span class="keyword">@optional</span></div><div class="line">- (<span class="built_in">NSString</span>*)worldName;</div><div class="line"><span class="keyword">@required</span></div><div class="line">- (<span class="built_in">BOOL</span>)allowsToLive;</div><div class="line"><span class="keyword">@end</span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">Test</span> : <span class="title">NSObject</span> &lt;<span class="title">HelloDelegate</span>, <span class="title">WorldDataSource</span>&gt; </span>&#123;</div><div class="line">  <span class="built_in">NSString</span> *_greeting;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">readonly</span>) <span class="built_in">NSString</span> *greeting;</div><div class="line">- (<span class="keyword">IBAction</span>) show;</div><div class="line"><span class="keyword">@end</span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">Test</span></span></div><div class="line"></div><div class="line"><span class="keyword">@synthesize</span> test=_test;</div><div class="line"></div><div class="line">+ (<span class="keyword">id</span>) test &#123;</div><div class="line">  <span class="keyword">return</span> [<span class="keyword">self</span> testWithGreeting:<span class="string">@"Hello, world!\nFoo bar!"</span>];</div><div class="line">&#125;</div><div class="line"></div><div class="line">+ (<span class="keyword">id</span>) testWithGreeting:(<span class="built_in">NSString</span>*)greeting &#123;</div><div class="line">  <span class="keyword">return</span> [[[<span class="keyword">self</span> alloc] initWithGreeting:greeting] autorelease];</div><div class="line">&#125;</div><div class="line"></div><div class="line">- (<span class="keyword">id</span>) initWithGreeting:(<span class="built_in">NSString</span>*)greeting &#123;</div><div class="line">  <span class="keyword">if</span> ( (<span class="keyword">self</span> = [<span class="keyword">super</span> init]) ) &#123;</div><div class="line">    _greeting = [greeting <span class="keyword">retain</span>];</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">return</span> <span class="keyword">self</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line">- (<span class="keyword">void</span>) dealloc &#123;</div><div class="line">  [_greeting release];</div><div class="line">  [<span class="keyword">super</span> dealloc];</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">@end</span></div></pre></td></tr></table></figure>
<h1 id="Perl"><a href="#Perl" class="headerlink" title="Perl"></a>Perl</h1><figure class="highlight perl"><figcaption><span>archives.perl</span><a href="http://underscorejs.org/#compact" target="_blank" rel="external">archives.perl</a></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># loads object</span></div><div class="line"><span class="function"><span class="keyword">sub</span> <span class="title">load</span></span></div><div class="line">&#123;</div><div class="line">  <span class="keyword">my</span> $flds = $c-&gt;db_load($id,@_) || <span class="keyword">do</span> &#123;</div><div class="line">    Carp::carp <span class="string">"Can`t load (class: $c, id: $id): '$!'"</span>; <span class="keyword">return</span> <span class="keyword">undef</span></div><div class="line">  &#125;;</div><div class="line">  <span class="keyword">my</span> $o = $c-&gt;_perl_new();</div><div class="line">  $id12 = $id / <span class="number">24</span> / <span class="number">3600</span>;</div><div class="line">  $o-&gt;&#123;<span class="string">'ID'</span>&#125; = $id12 + <span class="number">123</span>;</div><div class="line">  <span class="comment">#$o-&gt;&#123;'SHCUT'&#125; = $flds-&gt;&#123;'SHCUT'&#125;;</span></div><div class="line">  <span class="keyword">my</span> $p = $o-&gt;props;</div><div class="line">  <span class="keyword">my</span> $vt;</div><div class="line">  $string =~ <span class="regexp">m/^sought_text$/</span>;</div><div class="line">  $items = <span class="keyword">split</span> <span class="regexp">//</span>, <span class="string">'abc'</span>;</div><div class="line">  $string //= <span class="string">"bar"</span>;</div><div class="line">  <span class="keyword">for</span> <span class="keyword">my</span> $key (<span class="keyword">keys</span> %$p)</div><div class="line">  &#123;</div><div class="line">    <span class="keyword">if</span>($&#123;$vt.<span class="string">'::property'</span>&#125;) &#123;</div><div class="line">      $o-&gt;&#123;$key . <span class="string">'_real'</span>&#125; = $flds-&gt;&#123;$key&#125;;</div><div class="line">      <span class="keyword">tie</span> $o-&gt;&#123;$key&#125;, <span class="string">'CMSBuilder::Property'</span>, $o, $key;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  $o-&gt;save <span class="keyword">if</span> <span class="keyword">delete</span> $o-&gt;&#123;<span class="string">'_save_after_load'</span>&#125;;</div><div class="line"></div><div class="line">  <span class="comment"># GH-117</span></div><div class="line">  <span class="keyword">my</span> $g = <span class="keyword">glob</span>(<span class="string">"/usr/bin/*"</span>);</div><div class="line"></div><div class="line">  <span class="keyword">return</span> $o;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">=head1 NAME</span></div><div class="line">POD till the end of file</div></pre></td></tr></table></figure>
<h1 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h1><figure class="highlight php"><figcaption><span>archives.php</span><a href="http://underscorejs.org/#compact" target="_blank" rel="external">archives.php</a></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">$heredoc = &lt;&lt;&lt; HEREDOC_ID</div><div class="line">some $contents</div><div class="line">HEREDOC_ID;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span><span class="params">()</span> </span>&#123;</div><div class="line">   <span class="keyword">return</span> SomeClass::$shared;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// Sample comment</span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">SomeClass</span> <span class="keyword">extends</span> <span class="title">One</span> <span class="keyword">implements</span> <span class="title">Another</span> </span>&#123;</div><div class="line">   <span class="keyword">private</span> $my;</div><div class="line">   <span class="keyword">public</span> <span class="keyword">static</span> $shared;</div><div class="line">   <span class="keyword">const</span> MAGIC = <span class="number">0987654321</span>;</div><div class="line">   <span class="comment">/**</span></div><div class="line">    * Description by &lt;a href="mailto:"&gt;user<span class="doctag">@host</span>.dom&lt;/a&gt;</div><div class="line">    * <span class="doctag">@return</span> SomeType</div><div class="line">    */</div><div class="line">   <span class="function"><span class="keyword">function</span> <span class="title">doSmth</span><span class="params">($abc, $def)</span> </span>&#123;</div><div class="line">      foo();</div><div class="line">      $def .=  <span class="keyword">self</span>::MAGIC;</div><div class="line">      $v = Helper::convert($abc . <span class="string">"\n &#123;$def&#125;"</span> . $$def);</div><div class="line">      $q = <span class="keyword">new</span> Query( <span class="keyword">$this</span>-&gt;invent(abs(<span class="number">0x80</span>)) );</div><div class="line">      <span class="keyword">return</span> <span class="keyword">array</span>($v =&gt; $q-&gt;result);</div><div class="line">   &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Another</span> </span>&#123;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">include</span> (dirname(<span class="keyword">__FILE__</span>) . <span class="string">"inc.php"</span>);</div><div class="line">`rm -r`;</div><div class="line"></div><div class="line"><span class="keyword">goto</span> Label;</div><div class="line"></div><div class="line">Label:</div><div class="line">&lt;php_bad&gt;№&lt;/php_bad&gt;</div></pre></td></tr></table></figure>
<h1 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h1><figure class="highlight python"><figcaption><span>archives.py</span><a href="http://underscorejs.org/#compact" target="_blank" rel="external">archives.py</a></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@requires_authorization</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">somefunc</span><span class="params">(param1=<span class="string">''</span>, param2=<span class="number">0</span>)</span>:</span></div><div class="line">    <span class="string">r'''A docstring'''</span></div><div class="line">    <span class="keyword">if</span> param1 &gt; param2: <span class="comment"># interesting</span></div><div class="line">        <span class="keyword">print</span> <span class="string">'Gre\'ater'</span></div><div class="line">    <span class="keyword">return</span> (param2 - param1 + <span class="number">1</span> + <span class="number">0b10l</span>) <span class="keyword">or</span> <span class="keyword">None</span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">SomeClass</span>:</span></div><div class="line">    <span class="keyword">pass</span></div><div class="line"></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>message = <span class="string">'''interpreter</span></div><div class="line"><span class="meta">... </span>prompt'''</div></pre></td></tr></table></figure>
<h1 id="Ruby"><a href="#Ruby" class="headerlink" title="Ruby"></a>Ruby</h1><figure class="highlight ruby"><figcaption><span>archives.rb</span><a href="http://underscorejs.org/#compact" target="_blank" rel="external">archives.rb</a></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> &lt; B;</span> <span class="function"><span class="keyword">def</span> <span class="title">self</span>.<span class="title">create</span><span class="params">(object = User)</span></span> object <span class="keyword">end</span> <span class="keyword">end</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Zebra</span>;</span> <span class="function"><span class="keyword">def</span> <span class="title">inspect</span>;</span> <span class="string">"X<span class="subst">#&#123;<span class="number">2</span> + <span class="keyword">self</span>.object_id&#125;</span>"</span> <span class="keyword">end</span> <span class="keyword">end</span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">module</span> <span class="title">ABC::DEF</span></span></div><div class="line">  <span class="keyword">include</span> Comparable</div><div class="line"></div><div class="line">  <span class="comment"># <span class="doctag">@param</span> test</span></div><div class="line">  <span class="comment"># <span class="doctag">@return</span> [String] nothing</span></div><div class="line">  <span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">(test)</span></span></div><div class="line">    Thread.new <span class="keyword">do</span> <span class="params">|blockvar|</span></div><div class="line">      ABC::DEF.reverse(<span class="symbol">:a_symbol</span>, <span class="symbol">:<span class="string">'a symbol'</span></span>, <span class="symbol">:&lt;=&gt;</span>, <span class="string">'test'</span> + <span class="string">?\012</span>)</div><div class="line">      answer = valid?<span class="number">4</span> &amp;&amp; valid?CONST &amp;&amp; <span class="string">?A</span> &amp;&amp; <span class="string">?A</span>.ord</div><div class="line">    <span class="keyword">end</span>.join</div><div class="line">  <span class="keyword">end</span></div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">def</span> []<span class="params">(index)</span></span> <span class="keyword">self</span>[index] <span class="keyword">end</span></div><div class="line">  <span class="function"><span class="keyword">def</span> ==<span class="params">(other)</span></span> other == <span class="keyword">self</span> <span class="keyword">end</span></div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Car</span> &lt; ActiveRecord::Base</span></div><div class="line">  has_many <span class="symbol">:wheels</span>, <span class="symbol">class_name:</span> <span class="string">'Wheel'</span>, <span class="symbol">foreign_key:</span> <span class="string">'car_id'</span></div><div class="line">  scope <span class="symbol">:available</span>, -&gt; &#123; where(<span class="symbol">available:</span> <span class="literal">true</span>) &#125;</div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line">hash = &#123;<span class="number">1</span> =&gt; <span class="string">'one'</span>, <span class="number">2</span> =&gt; <span class="string">'two'</span>&#125;</div><div class="line"></div><div class="line"><span class="meta">2.0.0p0 :001 &gt;</span> [<span class="string">'some'</span>]</div><div class="line"> =&gt; [<span class="string">"some"</span>]</div></pre></td></tr></table></figure>
<h1 id="SQL"><a href="#SQL" class="headerlink" title="SQL"></a>SQL</h1><figure class="highlight sql"><figcaption><span>archives.sql</span><a href="http://underscorejs.org/#compact" target="_blank" rel="external">archives.sql</a></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">BEGIN</span>;</div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">"topic"</span> (</div><div class="line">    <span class="comment">-- This is the greatest table of all time</span></div><div class="line">    <span class="string">"id"</span> <span class="built_in">serial</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> PRIMARY <span class="keyword">KEY</span>,</div><div class="line">    <span class="string">"forum_id"</span> <span class="built_in">integer</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</div><div class="line">    <span class="string">"subject"</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="comment">-- Because nobody likes an empty subject</span></div><div class="line">);</div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="string">"topic"</span> <span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> forum_id FOREIGN <span class="keyword">KEY</span> (<span class="string">"forum_id"</span>) <span class="keyword">REFERENCES</span> <span class="string">"forum"</span> (<span class="string">"id"</span>);</div><div class="line"></div><div class="line"><span class="comment">-- Initials</span></div><div class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="string">"topic"</span> (<span class="string">"forum_id"</span>, <span class="string">"subject"</span>) <span class="keyword">values</span> (<span class="number">2</span>, <span class="string">'D''artagnian'</span>);</div><div class="line"></div><div class="line"><span class="keyword">select</span> <span class="comment">/* comment */</span> <span class="keyword">count</span>(*) <span class="keyword">from</span> cicero_forum;</div><div class="line"></div><div class="line"><span class="comment">-- this line lacks ; at the end to allow people to be sloppy and omit it in one-liners</span></div><div class="line"><span class="comment">/*</span></div><div class="line">but who cares?</div><div class="line">*/</div><div class="line"><span class="keyword">COMMIT</span></div></pre></td></tr></table></figure>
<h1 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h1><figure class="highlight xml"><figcaption><span>archives.html</span><a href="http://underscorejs.org/#compact" target="_blank" rel="external">archives.html</a></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span><span class="meta">?&gt;</span></span></div><div class="line"><span class="tag">&lt;<span class="name">response</span> <span class="attr">value</span>=<span class="string">"ok"</span> <span class="attr">xml:lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">text</span>&gt;</span>Ok<span class="tag">&lt;/<span class="name">text</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">comment</span> <span class="attr">html_allowed</span>=<span class="string">"true"</span>/&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">ns1:description</span>&gt;</span>&lt;![CDATA[</div><div class="line">  CDATA is &lt;not&gt; magical.</div><div class="line">  ]]&gt;<span class="tag">&lt;/<span class="name">ns1:description</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span>/&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">response</span>&gt;</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"><span class="selector-tag">body</span> &#123;<span class="attribute">width</span>: <span class="number">500px</span>;&#125;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"application/javascript"</span>&gt;</span><span class="javascript"></span></div><div class="line">  <span class="function"><span class="keyword">function</span> $init(<span class="params"></span>) </span>&#123;<span class="keyword">return</span> <span class="literal">true</span>;&#125;</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">checked</span> <span class="attr">class</span>=<span class="string">"title"</span> <span class="attr">id</span>=<span class="string">'title'</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="comment">&lt;!-- here goes the rest of the page --&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div></pre></td></tr></table></figure>
<h1 id="Puppet"><a href="#Puppet" class="headerlink" title="Puppet"></a>Puppet</h1><figure class="highlight puppet"><figcaption><span>archives.pp</span><a href="http://underscorejs.org/#compact" target="_blank" rel="external">archives.pp</a></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">class</span> <span class="title">hg_punch::library</span> &#123;</div><div class="line"></div><div class="line">  <span class="keyword">firewall</span> &#123;<span class="string">'101 puppet library access'</span>:</div><div class="line">    <span class="attr">proto</span>       =&gt; <span class="string">'tcp'</span>,</div><div class="line">    <span class="attr">dport</span>       =&gt; <span class="string">'80'</span>,</div><div class="line">    <span class="attr">action</span>      =&gt; <span class="string">'accept'</span>,</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="keyword">package</span> &#123; <span class="string">'git'</span>:</div><div class="line">    <span class="attr">ensure</span> =&gt; <span class="literal">present</span>,</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="keyword">vcsrepo</span> &#123; <span class="string">"puppet-library"</span>:</div><div class="line">    <span class="attr">path</span> =&gt; <span class="string">'/var/www/puppet-library/'</span>,</div><div class="line">    <span class="attr">ensure</span> =&gt; <span class="literal">present</span>,</div><div class="line">    <span class="attr">owner</span> =&gt; <span class="string">'root'</span>,</div><div class="line">    <span class="attr">group</span> =&gt; <span class="string">'root'</span>,</div><div class="line">    <span class="attr">provider</span> =&gt; git,</div><div class="line">    <span class="attr">source</span> =&gt; <span class="string">'https://github.com/Moliholy/puppet-library.git'</span>,</div><div class="line">    <span class="attr">revision</span> =&gt; <span class="string">'master'</span>,</div><div class="line">    <span class="attr">require</span> =&gt; Package[<span class="string">'git'</span>],</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="keyword">package</span> &#123; <span class="string">'nfs-utils'</span>:</div><div class="line">    <span class="attr">ensure</span> =&gt; <span class="literal">present</span>,</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="keyword">package</span> &#123; <span class="string">'bundler'</span>:</div><div class="line">    <span class="attr">ensure</span> =&gt; <span class="literal">present</span>,</div><div class="line">    <span class="attr">provider</span> =&gt; gem,</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="keyword">package</span> &#123; [ <span class="string">"ruby"</span>, <span class="string">"ruby-devel"</span>, <span class="string">"gcc"</span>, <span class="string">"make"</span> ]:</div><div class="line">    <span class="attr">ensure</span> =&gt; <span class="literal">present</span>,</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="keyword">exec</span> &#123; <span class="string">'bundler update'</span>:</div><div class="line">    <span class="attr">command</span> =&gt; <span class="string">"bundler update &amp;&amp; bundler"</span>,</div><div class="line">    <span class="attr">cwd</span> =&gt; <span class="string">'/var/www/puppet-library'</span>,</div><div class="line">    <span class="attr">path</span> =&gt; [<span class="string">"/usr/bin"</span>, <span class="string">"/bin"</span>, <span class="string">"/usr/sbin"</span>],</div><div class="line">    <span class="attr">require</span> =&gt; [ Package[<span class="string">'ruby'</span>], Package[<span class="string">'ruby-devel'</span>],</div><div class="line">                Package[<span class="string">'gcc'</span>], Package[<span class="string">'make'</span>],</div><div class="line">                Package[<span class="string">'bundler'</span>], Vcsrepo[<span class="string">'puppet-library'</span>] ]</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="keyword">package</span> &#123; <span class="string">'mod_passenger'</span>:</div><div class="line">    <span class="attr">ensure</span> =&gt; <span class="literal">present</span>,</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="keyword">file</span> &#123; <span class="string">"/etc/httpd/conf.d/puppetlibrary.conf"</span>:</div><div class="line">    <span class="attr">owner</span>   =&gt; <span class="literal">root</span>,</div><div class="line">    <span class="attr">group</span>   =&gt; <span class="literal">root</span>,</div><div class="line">    <span class="attr">mode</span>    =&gt; <span class="number">0644</span>,</div><div class="line">    <span class="attr">content</span> =&gt; template(<span class="string">'hg_punch/puppetlibrary.conf.erb'</span>),</div><div class="line">    <span class="attr">require</span> =&gt; Package[<span class="string">'mod_passenger'</span>],</div><div class="line">    <span class="attr">selinux_ignore_defaults</span> =&gt; <span class="keyword">true</span>,</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="keyword">file</span> &#123; <span class="string">"/var/www/puppet-library/config.ru"</span>:</div><div class="line">    <span class="attr">owner</span>   =&gt; <span class="literal">root</span>,</div><div class="line">    <span class="attr">group</span>   =&gt; <span class="literal">root</span>,</div><div class="line">    <span class="attr">mode</span>    =&gt; <span class="number">0644</span>,</div><div class="line">    <span class="attr">content</span> =&gt; template(<span class="string">'hg_punch/config.ru.erb'</span>),</div><div class="line">    <span class="attr">require</span> =&gt; Vcsrepo[<span class="string">'puppet-library'</span>],</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="keyword">file</span> &#123; [ <span class="string">'/var/www/puppet-library/public'</span>, <span class="string">'/var/www/puppet-library/tmp'</span> ]:</div><div class="line">    <span class="attr">ensure</span> =&gt; <span class="literal">directory</span>,</div><div class="line">    <span class="attr">owner</span>   =&gt; <span class="literal">root</span>,</div><div class="line">    <span class="attr">group</span>   =&gt; <span class="literal">root</span>,</div><div class="line">    <span class="attr">mode</span> =&gt; <span class="number">755</span>,</div><div class="line">    <span class="attr">require</span> =&gt; Vcsrepo[<span class="string">'puppet-library'</span>],</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  # Disable SELinux</div><div class="line">  <span class="keyword">package</span> &#123; <span class="string">"augeas"</span>:</div><div class="line">    <span class="attr">ensure</span> =&gt; <span class="literal">present</span>,</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="keyword">augeas</span> &#123;<span class="string">'disable_selinux'</span>:</div><div class="line">    <span class="attr">context</span> =&gt; <span class="string">'/files/etc/sysconfig/selinux'</span>,</div><div class="line">    <span class="attr">changes</span> =&gt; <span class="string">'set SELINUX disabled'</span>,</div><div class="line">    <span class="attr">lens</span>    =&gt; <span class="string">'shellvars.lns'</span>,</div><div class="line">    <span class="attr">incl</span>     =&gt; <span class="string">'/etc/sysconfig/selinux'</span></div><div class="line">  &#125; ~&gt;</div><div class="line">  <span class="keyword">exec</span> &#123;<span class="string">'sudo disable_selinux'</span>:</div><div class="line">    <span class="attr">command</span> =&gt; <span class="string">'/bin/echo 0 &gt; /selinux/enforce'</span>,</div><div class="line">    <span class="attr">refreshonly</span> =&gt; <span class="keyword">true</span>,</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="keyword">service</span> &#123; <span class="string">"httpd"</span>:</div><div class="line">    <span class="attr">enable</span> =&gt; <span class="keyword">true</span>,</div><div class="line">    <span class="attr">ensure</span> =&gt; <span class="literal">running</span>,</div><div class="line">    <span class="attr">hasrestart</span> =&gt; <span class="keyword">true</span>,</div><div class="line">    <span class="attr">require</span> =&gt; [ Exec[<span class="string">'bundler update'</span>],</div><div class="line">                File[<span class="string">'/etc/httpd/conf.d/puppetlibrary.conf'</span>],</div><div class="line">                File[<span class="string">'/var/www/puppet-library/public'</span>],</div><div class="line">                File[<span class="string">'/var/www/puppet-library/tmp'</span>],</div><div class="line">                Vcsrepo[<span class="string">'puppet-library'</span>],</div><div class="line">                Package[<span class="string">'mod_passenger'</span>] ],</div><div class="line">  &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="Less"><a href="#Less" class="headerlink" title="Less"></a>Less</h1><figure class="highlight less"><figcaption><span>archives.less</span><a href="http://underscorejs.org/#compact" target="_blank" rel="external">archives.less</a></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">@import</span> <span class="string">'mixins'</span>; <span class="comment">// external mixins</span></div><div class="line"></div><div class="line"><span class="variable">@the-border:</span> <span class="number">1px</span>;</div><div class="line"><span class="variable">@base-color:</span> <span class="number">#111</span>;</div><div class="line"></div><div class="line"><span class="selector-id">#header</span><span class="selector-pseudo">:after</span> &#123;</div><div class="line">  <span class="attribute">color</span>: <span class="variable">@base-color</span> * <span class="number">3</span>;</div><div class="line">  <span class="attribute">border-right</span>: <span class="variable">@the-border</span> * <span class="number">2</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.colored</span>(<span class="variable">@c</span>) <span class="keyword">when</span> (iscolor(<span class="variable">@c</span>)) &#123;</div><div class="line">  <span class="attribute">color</span>: (<span class="variable">@base-color</span> + <span class="number">#111</span>) * <span class="number">1.5</span>;</div><div class="line">&#125;</div><div class="line"><span class="variable">@var:</span> <span class="built_in">`"hello".toUpperCase() + '!'`</span>;</div><div class="line"></div><div class="line"><span class="keyword">@font-face</span> &#123;</div><div class="line">  <span class="attribute">font-family</span>: DroidSans;</div><div class="line">  <span class="attribute">src</span>: url(<span class="string">DroidSans.ttf</span>);</div><div class="line">  <span class="attribute">unicode-range</span>: U+<span class="number">000</span>-<span class="number">5</span>FF, U+<span class="number">1</span>e00-<span class="number">1</span>fff, U+<span class="number">2000</span>-<span class="number">2300</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-tag">div</span> &gt; <span class="selector-tag">p</span>, <span class="selector-tag">p</span> ~ <span class="selector-tag">ul</span>, <span class="selector-tag">input</span><span class="selector-attr">[type="radio"]</span> &#123;</div><div class="line">  <span class="attribute">color</span>: green <span class="meta">!important</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="SCSS"><a href="#SCSS" class="headerlink" title="SCSS"></a>SCSS</h1><figure class="highlight scss"><figcaption><span>archives.scss</span><a href="http://underscorejs.org/#compact" target="_blank" rel="external">archives.scss</a></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.btn</span> &#123;</div><div class="line">    <span class="attribute">font-size</span>:      <span class="variable">$font-size-base</span>;</div><div class="line">    <span class="attribute">background</span>:     <span class="number">#fff</span>;</div><div class="line">    <span class="attribute">width</span>:          auto;</div><div class="line">    <span class="attribute">height</span>:         auto;</div><div class="line">    <span class="attribute">border-radius</span>:  <span class="number">3px</span>;</div><div class="line">    <span class="attribute">letter-spacing</span>: <span class="variable">$letter-spacing-base</span>;</div><div class="line">    <span class="attribute">padding</span>:        <span class="number">8px</span> <span class="number">15px</span>;</div><div class="line">    <span class="attribute">cursor</span>:         pointer;</div><div class="line">    <span class="attribute">margin</span>:         <span class="number">0</span>;</div><div class="line"></div><div class="line">    &amp;:hover,</div><div class="line">    &amp;:focus,</div><div class="line">    &amp;:active &#123;</div><div class="line">        <span class="attribute">text-decoration</span>: none;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// Colors variant</span></div><div class="line"><span class="selector-class">.btn--default</span> &#123;</div><div class="line">    @<span class="keyword">include</span> button-color-variant(<span class="variable">$font-color-light</span>);</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.btn--success</span> &#123;</div><div class="line">    @<span class="keyword">include</span> button-color-variant(<span class="variable">$color-success</span>);</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.btn--primary</span> &#123;</div><div class="line">    @<span class="keyword">include</span> button-color-variant(<span class="variable">$color-primary</span>);</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.btn--danger</span> &#123;</div><div class="line">    @<span class="keyword">include</span> button-color-variant(<span class="variable">$color-danger</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// Size variant</span></div><div class="line"><span class="selector-class">.btn--medium</span> &#123;</div><div class="line">    @<span class="keyword">include</span> button-size-variant(<span class="variable">$font-size-medium</span>, 8px, 15px);</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.btn--small</span> &#123;</div><div class="line">    @<span class="keyword">include</span> button-size-variant(<span class="variable">$font-size-small</span>, 8px, 15px);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// States variant</span></div><div class="line"><span class="selector-class">.btn--disabled</span>,</div><div class="line"><span class="selector-class">.btn--disabled</span>:hover &#123;</div><div class="line">    <span class="attribute">color</span>:           lighten(<span class="variable">$font-color-light</span>, <span class="number">10</span>) <span class="meta">!important</span>;</div><div class="line">    <span class="attribute">border</span>:          <span class="number">1px</span> solid lighten(<span class="variable">$font-color-light</span>, <span class="number">10</span>);</div><div class="line">    <span class="attribute">cursor</span>:          not-allowed;</div><div class="line">    <span class="attribute">text-decoration</span>: none;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="Stylus"><a href="#Stylus" class="headerlink" title="Stylus"></a>Stylus</h1><figure class="highlight stylus"><figcaption><span>archives.styl</span><a href="http://underscorejs.org/#compact" target="_blank" rel="external">archives.styl</a></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">@import <span class="string">"nib"</span></div><div class="line"></div><div class="line"><span class="comment">// variables</span></div><div class="line"><span class="variable">$green</span> = <span class="number">#008000</span></div><div class="line"><span class="variable">$green_dark</span> = darken(<span class="variable">$green</span>, <span class="number">10</span>)</div><div class="line"></div><div class="line"><span class="comment">// mixin/function</span></div><div class="line"><span class="function"><span class="title">container</span><span class="params">()</span></span></div><div class="line">  <span class="attribute">max-width</span> <span class="number">980px</span></div><div class="line"></div><div class="line"><span class="comment">// mixin/function with parameters</span></div><div class="line"><span class="function"><span class="title">buttonBG</span><span class="params">(<span class="variable">$color</span> = green)</span></span></div><div class="line">  <span class="keyword">if</span> <span class="variable">$color</span> == green</div><div class="line">    <span class="attribute">background-color</span> <span class="number">#008000</span></div><div class="line">  <span class="keyword">else</span> <span class="keyword">if</span> <span class="variable">$color</span> == red</div><div class="line">    <span class="attribute">background-color</span> <span class="number">#B22222</span></div><div class="line"></div><div class="line"><span class="selector-tag">button</span></div><div class="line">  buttonBG(red)</div><div class="line"></div><div class="line"><span class="selector-id">#content</span>, <span class="selector-class">.content</span></div><div class="line">  <span class="attribute">font</span> Tahoma, Chunkfive, sans-serif</div><div class="line">  <span class="attribute">background</span> url(<span class="string">'hatch.png'</span>)</div><div class="line">  <span class="attribute">color</span> <span class="number">#F0F0F0</span> !important</div><div class="line">  <span class="attribute">width</span> <span class="number">100%</span></div></pre></td></tr></table></figure>
<h1 id="Go"><a href="#Go" class="headerlink" title="Go"></a>Go</h1><figure class="highlight go"><figcaption><span>archives.go</span><a href="http://underscorejs.org/#compact" target="_blank" rel="external">archives.go</a></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> main</div><div class="line"></div><div class="line"><span class="keyword">import</span> (</div><div class="line">    <span class="string">"fmt"</span></div><div class="line">    <span class="string">"os"</span></div><div class="line">)</div><div class="line"></div><div class="line"><span class="keyword">const</span> (</div><div class="line">    Sunday = <span class="literal">iota</span></div><div class="line">    numberOfDays  <span class="comment">// this constant is not exported</span></div><div class="line">)</div><div class="line"></div><div class="line"><span class="keyword">type</span> Foo <span class="keyword">interface</span> &#123;</div><div class="line">    FooFunc(<span class="keyword">int</span>, <span class="keyword">float32</span>) (<span class="keyword">complex128</span>, []<span class="keyword">int</span>)</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">type</span> Bar <span class="keyword">struct</span> &#123;</div><div class="line">    os.File <span class="comment">/* multi-line</span></div><div class="line">               comment */</div><div class="line">    PublicData <span class="keyword">chan</span> <span class="keyword">int</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</div><div class="line">    ch := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">int</span>)</div><div class="line">    ch &lt;- <span class="number">1</span></div><div class="line">    x, ok := &lt;- ch</div><div class="line">    ok = <span class="literal">true</span></div><div class="line">    float_var := <span class="number">1.0e10</span></div><div class="line">    <span class="keyword">defer</span> fmt.Println(<span class="string">'\''</span>)</div><div class="line">    <span class="keyword">defer</span> fmt.Println(<span class="string">`exitting now\`</span>)</div><div class="line">    <span class="keyword">var</span> fv1 <span class="keyword">float64</span> = <span class="number">0.75</span></div><div class="line">    <span class="keyword">go</span> <span class="built_in">println</span>(<span class="built_in">len</span>(<span class="string">"hello world!"</span>))</div><div class="line">    <span class="keyword">return</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="Swift"><a href="#Swift" class="headerlink" title="Swift"></a>Swift</h1><figure class="highlight swift"><figcaption><span>archives.swift</span><a href="http://underscorejs.org/#compact" target="_blank" rel="external">archives.swift</a></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">extension</span> <span class="title">MyClass</span> : <span class="title">Interface</span> </span>&#123;</div><div class="line">    <span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">unarchiveFromFile</span>&lt;<span class="title">A</span>&gt;(<span class="title">file</span> : <span class="title">A</span>, (<span class="title">Int</span>,<span class="title">Int</span>) -&gt; <span class="title">B</span>) -&gt; <span class="title">SKNode</span>? </span>&#123;</div><div class="line">        <span class="keyword">let</span> path: <span class="type">String</span> = bundle.pathForResource(file, ofType: <span class="string">"file\(name + 5).txt"</span>)</div><div class="line">        <span class="keyword">let</span> funnyNumber = <span class="number">3</span> + <span class="number">0xC2.15p2</span> * (<span class="number">1_000_000.000_000_1</span> - <span class="number">000123.456</span>) + <span class="number">0o21</span></div><div class="line">        <span class="keyword">var</span> sceneData = <span class="type">NSData</span>.dataWithContentsOfFile(path, options: .<span class="type">DataReadingMappedIfSafe</span>, error: <span class="literal">nil</span>)</div><div class="line">        <span class="comment">/* a comment <span class="comment">/* with a nested comment */</span> and the end */</span></div><div class="line">    &#125;</div><div class="line">    <span class="meta">@objc</span> <span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">shouldAutorotate</span><span class="params">()</span></span> &#123;</div><div class="line">        <span class="keyword">return</span> <span class="literal">true</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Tranquilpeak Hexo theme have its own theme to highlight source code. It’s based on GitHub theme: simple and elegant. Check out how it sublimate source codes.&lt;br&gt;
    
    </summary>
    
      <category term="tranquilpeak" scheme="http://darcylee.coding.me/hexo-blog/categories/tranquilpeak/"/>
    
      <category term="features" scheme="http://darcylee.coding.me/hexo-blog/categories/tranquilpeak/features/"/>
    
    
      <category term="highlight code" scheme="http://darcylee.coding.me/hexo-blog/tags/highlight-code/"/>
    
      <category term="github theme" scheme="http://darcylee.coding.me/hexo-blog/tags/github-theme/"/>
    
  </entry>
  
  <entry>
    <title>Tags plugins showcase</title>
    <link href="http://darcylee.coding.me/hexo-blog/2014/10/29/Tags-plugins-showcase/"/>
    <id>http://darcylee.coding.me/hexo-blog/2014/10/29/Tags-plugins-showcase/</id>
    <published>2014-10-29T12:30:05.000Z</published>
    <updated>2016-12-06T06:39:10.052Z</updated>
    
    <content type="html"><![CDATA[<p>This post is used to show how tag plugins are displayed. See <a href="https://github.com/LouisBarranqueiro/hexo-theme-tranquilpeak/blob/master/docs/user.md#tags" target="_blank" rel="external">docs</a> for more info.<br><a id="more"></a></p>
<!-- toc -->
<h1 id="Alert"><a href="#Alert" class="headerlink" title="Alert"></a>Alert</h1><p>Read documentation to know how to use <a href="https://github.com/LouisBarranqueiro/hexo-theme-tranquilpeak/blob/master/docs/user.md#alert" target="_blank" rel="external">Alert tag</a></p>
<div class="alert info"><p>Praesent diam elit, interdum ut pulvinar placerat, imperdiet at magna.</p>
</div>
<div class="alert success"><p>Praesent diam elit, interdum ut pulvinar placerat, imperdiet at magna.</p>
</div>
<div class="alert warning"><p>Praesent diam elit, interdum ut pulvinar placerat, imperdiet at magna.</p>
</div>
<div class="alert danger"><p>Praesent diam elit, interdum ut pulvinar placerat, imperdiet at magna.</p>
</div>
<h1 id="Block-Quote"><a href="#Block-Quote" class="headerlink" title="Block Quote"></a>Block Quote</h1><p>Read documentation to know how to use <a href="https://hexo.io/docs/tag-plugins.html#Block_Quote" target="_blank" rel="external">Block Quote tag</a></p>
<p><strong>Normal blockquote</strong></p>
<blockquote>
<p>Praesent diam elit, interdum ut pulvinar placerat, imperdiet at magna.</p>
</blockquote>
<p><strong>Quote from a book</strong></p>
<blockquote><p>Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</p>
<footer><strong>David Levithan</strong><cite>Wide Awake</cite></footer></blockquote>
<p><strong>Quote from Twitter</strong></p>
<blockquote><p>NEW: DevDocs now comes with syntax highlighting. <a href="http://devdocs.io" target="_blank" rel="external">http://devdocs.io</a></p>
<footer><strong>@DevDocs</strong><cite><a href="https://twitter.com/devdocs/status/356095192085962752" target="_blank" rel="external">twitter.com/devdocs/status/356095192085962752</a></cite></footer></blockquote>
<p><strong>Quote from an article on the web</strong></p>
<blockquote><p>Every interaction is both precious and an opportunity to delight.</p>
<footer><strong>Seth Godin</strong><cite><a href="http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html" target="_blank" rel="external">Welcome to Island Marketing</a></cite></footer></blockquote>
<h1 id="Code-Block"><a href="#Code-Block" class="headerlink" title="Code Block"></a>Code Block</h1><p>Read documentation to know how to use <a href="https://hexo.io/docs/tag-plugins.html#Code_Block" target="_blank" rel="external">Code Block tag</a></p>
<p></p>

<p><strong>Normal code block</strong></p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">alert(<span class="string">'Hello World!'</span>);</div><div class="line">alert(<span class="string">'Hello World!'</span>);</div></pre></td></tr></table></figure>
<p><strong>With caption</strong></p>
<figure class="highlight plain"><figcaption><span>Array.map</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">array.map(callback[, thisArg])</div></pre></td></tr></table></figure>
<p><strong>With caption and URL</strong></p>
<figure class="highlight apacheconf"><figcaption><span>apache.conf</span><a href="http://underscorejs.org/#compact" target="_blank" rel="external">apache.conf</a></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># rewrite`s rules for wordpress pretty url</span></div><div class="line"><span class="attribute"><span class="nomarkup">LoadModule</span></span> rewrite_module  modules/mod_rewrite.so</div><div class="line"><span class="attribute"><span class="nomarkup">RewriteCond</span></span> <span class="variable">%&#123;REQUEST_FILENAME&#125;</span> !-f</div><div class="line"></div><div class="line"><span class="section">&lt;Location /maps/&gt;</span></div><div class="line">  <span class="attribute">RewriteMap</span> map txt:map.txt</div><div class="line">  <span class="attribute">RewriteMap</span> lower int:tolower</div><div class="line">  <span class="attribute"><span class="nomarkup">RewriteCond</span></span> <span class="variable">%&#123;REQUEST_URI&#125;</span> ^/([^/.]+)\.html$<span class="meta"> [NC]</span></div><div class="line">  <span class="attribute"><span class="nomarkup">RewriteCond</span></span> <span class="variable">$&#123;map:<span class="variable">$&#123;lower:<span class="number">%1</span>&#125;</span>|NOT_FOUND&#125;</span> !NOT_FOUND</div><div class="line">  <span class="attribute"><span class="nomarkup">RewriteRule</span></span> .? /index.php?q=<span class="variable">$&#123;map:<span class="variable">$&#123;lower:<span class="number">%1</span>&#125;</span>&#125;</span><span class="meta"> [NC,L]</span></div><div class="line"><span class="section">&lt;/Location&gt;</span></div></pre></td></tr></table></figure>
<h1 id="Gist"><a href="#Gist" class="headerlink" title="Gist"></a>Gist</h1><p>Read documentation to know how to use <a href="https://hexo.io/docs/tag-plugins.html#Gist" target="_blank" rel="external">Gist tag</a></p>
<p></p>

<script src="//gist.github.com/996818.js"></script>
<h1 id="Image"><a href="#Image" class="headerlink" title="Image"></a>Image</h1><p>Read documentation to know how to use <a href="https://github.com/LouisBarranqueiro/hexo-theme-tranquilpeak/blob/master/docs/user.md#image" target="_blank" rel="external">Image tag</a></p>
<p></p>

<div class="figure fig-100" style="width:;"><a class="fancybox" href="http://d1u9biwaxjngwg.cloudfront.net/tag-plugins-showcase/car-15.jpg" title="" data-fancybox-group="" target="_blank" rel="external"><img class="fig-img" src="http://d1u9biwaxjngwg.cloudfront.net/tag-plugins-showcase/car-15-750.jpg" alt=""></a></div>
<div class="figure nocaption fig-50" style="width:;"><a class="fancybox" href="http://d1u9biwaxjngwg.cloudfront.net/tag-plugins-showcase/car-4.jpg" title="" data-fancybox-group="" target="_blank" rel="external"><img class="fig-img" src="http://d1u9biwaxjngwg.cloudfront.net/tag-plugins-showcase/car-4-375.jpg" ferrari""="" alt=""></a></div>
<div class="figure nocaption fig-50" style="width:;"><a class="fancybox" href="http://d1u9biwaxjngwg.cloudfront.net/tag-plugins-showcase/car-12.jpg" title="BMW i8 Concept" data-fancybox-group="" target="_blank" rel="external"><img class="fig-img" src="http://d1u9biwaxjngwg.cloudfront.net/tag-plugins-showcase/car-12-375.jpg" alt="BMW i8 Concept"></a></div>
<div class="figure nocaption fig-33" style="width:;"><a class="fancybox" href="http://d1u9biwaxjngwg.cloudfront.net/tag-plugins-showcase/car-14.jpg" title="" data-fancybox-group="" target="_blank" rel="external"><img class="fig-img" src="http://d1u9biwaxjngwg.cloudfront.net/tag-plugins-showcase/car-14-250.jpg" alt=""></a></div>
<div class="figure nocaption fig-33" style="width:;"><a class="fancybox" href="http://d1u9biwaxjngwg.cloudfront.net/tag-plugins-showcase/car-9.jpg" title="" data-fancybox-group="" target="_blank" rel="external"><img class="fig-img" src="http://d1u9biwaxjngwg.cloudfront.net/tag-plugins-showcase/car-9-250.jpg" alt=""></a></div>
<div class="figure nocaption fig-33" style="width:;"><a class="fancybox" href="http://d1u9biwaxjngwg.cloudfront.net/tag-plugins-showcase/car-2.jpg" title="" data-fancybox-group="" target="_blank" rel="external"><img class="fig-img" src="http://d1u9biwaxjngwg.cloudfront.net/tag-plugins-showcase/car-2-250.jpg" alt=""></a></div>
<div class="figure right fig-75" style="width:;"><a class="fancybox" href="http://d1u9biwaxjngwg.cloudfront.net/tag-plugins-showcase/car-11.jpg" title="" data-fancybox-group="" target="_blank" rel="external"><img class="fig-img" src="http://d1u9biwaxjngwg.cloudfront.net/tag-plugins-showcase/car-11-560.jpg" alt=""></a></div>
<div class="figure right fig-25" style="width:;"><a class="fancybox" href="http://d1u9biwaxjngwg.cloudfront.net/tag-plugins-showcase/car-8.jpg" title="" data-fancybox-group="" target="_blank" rel="external"><img class="fig-img" src="http://d1u9biwaxjngwg.cloudfront.net/tag-plugins-showcase/car-8-185.jpg" alt=""></a></div>
<div class="figure right fig-25" style="width:;"><a class="fancybox" href="http://d1u9biwaxjngwg.cloudfront.net/tag-plugins-showcase/car-10.jpg" title="" data-fancybox-group="" target="_blank" rel="external"><img class="fig-img" src="http://d1u9biwaxjngwg.cloudfront.net/tag-plugins-showcase/car-10-185.jpg" alt=""></a></div>
<div class="figure right fig-25" style="width:;"><a class="fancybox" href="http://d1u9biwaxjngwg.cloudfront.net/tag-plugins-showcase/car-5.jpg" title="" data-fancybox-group="" target="_blank" rel="external"><img class="fig-img" src="http://d1u9biwaxjngwg.cloudfront.net/tag-plugins-showcase/car-5-185.jpg" alt=""></a></div>
<div class="figure fig-50" style="width:;"><a class="fancybox" href="http://d1u9biwaxjngwg.cloudfront.net/tag-plugins-showcase/car-13.jpg" title="" data-fancybox-group="" target="_blank" rel="external"><img class="fig-img" src="http://d1u9biwaxjngwg.cloudfront.net/tag-plugins-showcase/car-13-375.jpg" alt=""></a></div>
<div class="figure fig-25" style="width:;"><a class="fancybox" href="http://d1u9biwaxjngwg.cloudfront.net/tag-plugins-showcase/car-17.jpg" title="" data-fancybox-group="" target="_blank" rel="external"><img class="fig-img" src="http://d1u9biwaxjngwg.cloudfront.net/tag-plugins-showcase/car-17-185.jpg" alt=""></a></div>
<div class="figure fig-25" style="width:;"><a class="fancybox" href="http://d1u9biwaxjngwg.cloudfront.net/tag-plugins-showcase/car-18.jpg" title="" data-fancybox-group="" target="_blank" rel="external"><img class="fig-img" src="http://d1u9biwaxjngwg.cloudfront.net/tag-plugins-showcase/car-18-185.jpg" alt=""></a></div>
<div class="figure fig-25" style="width:;"><a class="fancybox" href="http://d1u9biwaxjngwg.cloudfront.net/tag-plugins-showcase/car-19.jpg" title="" data-fancybox-group="" target="_blank" rel="external"><img class="fig-img" src="http://d1u9biwaxjngwg.cloudfront.net/tag-plugins-showcase/car-19-185.jpg" alt=""></a></div>
<div class="figure fig-25" style="width:;"><a class="fancybox" href="http://d1u9biwaxjngwg.cloudfront.net/tag-plugins-showcase/car-20.jpg" title="" data-fancybox-group="" target="_blank" rel="external"><img class="fig-img" src="http://d1u9biwaxjngwg.cloudfront.net/tag-plugins-showcase/car-20-185.jpg" alt=""></a></div><div style="clear:both;"></div>
<div class="figure fig-25" style="width:;"><a class="fancybox" href="http://d1u9biwaxjngwg.cloudfront.net/tag-plugins-showcase/car-21.jpg" title="" data-fancybox-group="" target="_blank" rel="external"><img class="fig-img" src="http://d1u9biwaxjngwg.cloudfront.net/tag-plugins-showcase/car-21-185.jpg" alt=""></a></div>
<div class="figure fig-25" style="width:;"><a class="fancybox" href="http://d1u9biwaxjngwg.cloudfront.net/tag-plugins-showcase/car-22.jpg" title="" data-fancybox-group="" target="_blank" rel="external"><img class="fig-img" src="http://d1u9biwaxjngwg.cloudfront.net/tag-plugins-showcase/car-22-185.jpg" alt=""></a></div>
<div class="figure fig-25" style="width:;"><a class="fancybox" href="http://d1u9biwaxjngwg.cloudfront.net/tag-plugins-showcase/car-23.jpg" title="" data-fancybox-group="" target="_blank" rel="external"><img class="fig-img" src="http://d1u9biwaxjngwg.cloudfront.net/tag-plugins-showcase/car-23-185.jpg" alt=""></a></div>
<div class="figure fig-25" style="width:;"><a class="fancybox" href="http://d1u9biwaxjngwg.cloudfront.net/tag-plugins-showcase/car-24.jpg" title="" data-fancybox-group="" target="_blank" rel="external"><img class="fig-img" src="http://d1u9biwaxjngwg.cloudfront.net/tag-plugins-showcase/car-24-185.jpg" alt=""></a></div><div style="clear:both;"></div>
<div class="figure fig-20" style="width:;"><img class="fig-img" src="http://d1u9biwaxjngwg.cloudfront.net/tag-plugins-showcase/car-25-150.jpg" alt=""></div>
<div class="figure fig-20" style="width:;"><img class="fig-img" src="http://d1u9biwaxjngwg.cloudfront.net/tag-plugins-showcase/car-26-150.jpg" alt=""></div>
<div class="figure fig-20" style="width:;"><img class="fig-img" src="http://d1u9biwaxjngwg.cloudfront.net/tag-plugins-showcase/car-27-150.jpg" alt=""></div>
<div class="figure fig-20" style="width:;"><img class="fig-img" src="http://d1u9biwaxjngwg.cloudfront.net/tag-plugins-showcase/car-28-150.jpg" alt=""></div>
<div class="figure fig-20" style="width:;"><img class="fig-img" src="http://d1u9biwaxjngwg.cloudfront.net/tag-plugins-showcase/car-29-150.jpg" alt=""></div><div style="clear:both;"></div>
<div class="figure fig-20" style="width:;"><img class="fig-img" src="http://d1u9biwaxjngwg.cloudfront.net/tag-plugins-showcase/car-35-150.jpg" alt=""></div>
<div class="figure fig-20" style="width:;"><img class="fig-img" src="http://d1u9biwaxjngwg.cloudfront.net/tag-plugins-showcase/car-30-150.jpg" alt=""></div>
<div class="figure fig-20" style="width:;"><img class="fig-img" src="http://d1u9biwaxjngwg.cloudfront.net/tag-plugins-showcase/car-31-150.jpg" alt=""></div>
<div class="figure fig-20" style="width:;"><img class="fig-img" src="http://d1u9biwaxjngwg.cloudfront.net/tag-plugins-showcase/car-32-150.jpg" alt=""></div>
<div class="figure fig-20" style="width:;"><img class="fig-img" src="http://d1u9biwaxjngwg.cloudfront.net/tag-plugins-showcase/car-34-150.jpg" alt=""></div><div style="clear:both;"></div>
<h1 id="jsFiddle"><a href="#jsFiddle" class="headerlink" title="jsFiddle"></a>jsFiddle</h1><p>Read documentation to know how to use <a href="https://hexo.io/docs/tag-plugins.html#jsFiddle" target="_blank" rel="external">jsFiddle tag</a></p>
<p></p>

<iframe scrolling="no" width="100%" height="300" src="http://jsfiddle.net/ccWP7/embedded/js,resources,html,css,result/light" frameborder="0" allowfullscreen></iframe>
<h1 id="Pull-Quote"><a href="#Pull-Quote" class="headerlink" title="Pull Quote"></a>Pull Quote</h1><p>Read documentation to know how to use <a href="https://hexo.io/docs/tag-plugins.html#Pull_Quote" target="_blank" rel="external">Pull Quote tag</a></p>
<p>Donec non tempus arcu.<br>Phasellus adipiscing, mauris nec mollis egestas, ipsum nunc auctor velit, et rhoncus lorem ipsum at ante. Duis vel mauris nulla. Maecenas mattis interdum ante, quis sagittis.<br><blockquote class="pullquote left"><p>Here is a pullquote left. Lorem ipsum dolor sit amet, consectetur adipiscing elit. </p>
</blockquote><br>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas tempus molestie arcu, et<br>fringilla mauris placerat ac. Nullam luctus bibendum risus. Ut cursus sed ipsum feugiat egestas. Suspendisse elementum, velit eu consequat consequat, augue lorem dapibus libero, eget pulvinar dolor est sit amet nulla. Suspendisse a porta tortor, et posuere mi. Pellentesque ultricies, mi quis volutpat malesuada, erat felis vulputate nisl, ac congue ante tortor ut ante. Proin aliquam sem vel mauris tincidunt, elementum ullamcorper nisl pretium, ultrices cursus justo. Mauris porttitor commodo eros, ac ornare orci interdum in. Cras fermentum cursus leo sed mattis. In dignissim lorem sem, sit amet elementum mauris venenatis ac.<br><blockquote class="pullquote right"><p>Here is a pullquote right. Lorem ipsum dolor sit amet, consectetur adipiscing elit. </p>
</blockquote><br>Donec non tempus arcu. Phasellus adipiscing, mauris nec mollis egestas, ipsum nunc auctor velit, et rhoncus lorem ipsum at ante. Duis vel mauris nulla.<br>Maecenas mattis interdum ante, quis sagittis nibh cursus et. Nulla facilisi. Morbi convallis gravida tortor, ut fermentum enim gravida et. Nunc vel dictum nisl, non ultrices libero.<br>Proin vestibulum felis eget orci consectetur lobortis. Vestibulum augue nulla, iaculis vitae augue vehicula,<br>dignissim ultrices libero. Sed imperdiet urna et quam ultrices tincidunt nec ac magna. Etiam vel pharetra elit.</p>
<h1 id="Highlight-text"><a href="#Highlight-text" class="headerlink" title="Highlight text"></a>Highlight text</h1><p>Read documentation to know how to use <a href="https://github.com/LouisBarranqueiro/hexo-theme-tranquilpeak/blob/master/docs/user.md#highlight-text" target="_blank" rel="external">Highlight text tag</a></p>
<p><span class="highlight-text red">highlight red</span> dignissim ultrices libero. Sed imperdiet urna et quam ultrices tincidunt nec ac magna. Etiam vel pharetra elit.<span class="highlight-text green">highlight green</span> dignissim ultrices libero. Sed imperdiet urna et quam ultrices tincidunt nec ac magna. Etiam vel pharetra elit.<span class="highlight-text blue">highlight blue</span> dignissim ultrices libero. Sed imperdiet urna et quam ultrices tincidunt nec ac magna. Etiam vel pharetra elit.<span class="highlight-text purple">highlight purple</span> dignissim ultrices libero. Sed imperdiet urna et quam ultrices tincidunt nec ac magna. Etiam vel pharetra elit.<span class="highlight-text orange">highlight orange</span> dignissim ultrices libero. Sed imperdiet urna et quam ultrices tincidunt nec ac magna. Etiam vel pharetra elit.<span class="highlight-text yellow">highlight yellow</span> dignissim ultrices libero. Sed imperdiet urna et quam ultrices tincidunt nec ac magna. Etiam vel pharetra elit.<span class="highlight-text cyan">highlight cyan</span> dignissim ultrices libero. Sed imperdiet urna et quam ultrices tincidunt nec ac magna. Etiam vel pharetra elit.<span class="highlight-text primary">highlight primary</span> dignissim ultrices libero. Sed imperdiet urna et quam ultrices tincidunt nec ac magna. Etiam vel pharetra elit.<span class="highlight-text success">highlight success</span> dignissim ultrices libero. Sed imperdiet urna et quam ultrices tincidunt nec ac magna. Etiam vel pharetra elit.<span class="highlight-text warning">highlight warning</span> dignissim ultrices libero. Sed imperdiet urna et quam ultrices tincidunt nec ac magna. Etiam vel pharetra elit.<span class="highlight-text danger">highlight danger</span> dignissim ultrices libero. Sed imperdiet urna et quam ultrices tincidunt nec ac magna. Etiam vel pharetra elit.</p>

<h1 id="Tabbed-code-block"><a href="#Tabbed-code-block" class="headerlink" title="Tabbed code block"></a>Tabbed code block</h1><p>Read documentation to know how to use <a href="https://github.com/LouisBarranqueiro/hexo-theme-tranquilpeak/blob/master/docs/user.md#tabbed-code-block" target="_blank" rel="external">Tabbed code block</a></p>
<p></p>

<figure class="codeblock codeblock--tabbed"><figcaption><span>tabbed_codeblock</span><ul class="tabs"><li class="tab active">js</li><li class="tab">css</li><li class="tab">html</li></ul></figcaption><div class="tabs-content"><figure class="highlight js" style="display: block;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">$initHighlight</span>(<span class="params">block, flags</span>) </span>{</span><br><span class="line">  <span class="keyword">try</span> {</span><br><span class="line">    <span class="keyword">if</span> (block.className.search(<span class="regexp">/\bno\-highlight\b/</span>) != <span class="number">-1</span>)</span><br><span class="line">      <span class="keyword">return</span> processBlock(block.function, <span class="literal">true</span>, <span class="number">0x0F</span>) + <span class="string">' class=""'</span>;</span><br><span class="line">  } <span class="keyword">catch</span> (e) {</span><br><span class="line">    <span class="comment">/* handle exception */</span></span><br><span class="line">    <span class="keyword">var</span> e4x =</span><br><span class="line">        &lt;div&gt;Example</span><br><span class="line">            &lt;p&gt;1234&lt;/p&gt;&lt;/div&gt;;</span><br><span class="line">  }</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span> / <span class="number">2</span>; i &lt; classes.length; i++) { <span class="comment">// "0 / 2" should not be parsed as regexp</span></span><br><span class="line">    <span class="keyword">if</span> (checkCondition(classes[i]) === <span class="literal">undefined</span>)</span><br><span class="line">      <span class="keyword">return</span> <span class="regexp">/\d+[\s/]/g</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="built_in">Array</span>.every(classes, <span class="built_in">Boolean</span>));</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight css" style="display: none;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">media</span> screen and (-webkit-min-device-pixel-ratio: <span class="number">0</span>) {</span><br><span class="line">  <span class="selector-tag">body</span><span class="selector-pseudo">:first-of-type</span> <span class="selector-tag">pre</span><span class="selector-pseudo">::after</span> {</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">'highlight: '</span> <span class="built_in">attr</span>(class);</span><br><span class="line">  }</span><br><span class="line">  <span class="selector-tag">body</span> {</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(45deg, blue, red);</span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">@<span class="keyword">import</span> url(<span class="string">'print.css'</span>);</span><br><span class="line">@<span class="keyword">page</span><span class="selector-pseudo">:right</span> {</span><br><span class="line"> <span class="attribute">margin</span>: <span class="number">1cm</span> <span class="number">2cm</span> <span class="number">1.3cm</span> <span class="number">4cm</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">@<span class="keyword">font-face</span> {</span><br><span class="line">  <span class="attribute">font-family</span>: Chunkfive; <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">'Chunkfive.otf'</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-class">.text</span>,</span><br><span class="line"><span class="selector-id">#content</span>,</span><br><span class="line"><span class="selector-tag">li</span><span class="selector-attr">[lang=ru]</span> {</span><br><span class="line">  <span class="attribute">font</span>: Tahoma, Chunkfive, sans-serif;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">'hatch.png'</span>) <span class="comment">/* wtf? */</span>;  <span class="attribute">color</span>: <span class="number">#F0F0F0</span> <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight html" style="display: none;"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">response</span> <span class="attr">value</span>=<span class="string">"ok"</span> <span class="attr">xml:lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">text</span>&gt;</span>Ok<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">comment</span> <span class="attr">html_allowed</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ns1:description</span>&gt;</span>&lt;![CDATA[</span><br><span class="line">  CDATA is &lt;not&gt; magical.</span><br><span class="line">  ]]&gt;<span class="tag">&lt;/<span class="name">ns1:description</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">response</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"><span class="selector-tag">body</span> {<span class="attribute">width</span>: <span class="number">500px</span>;}</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"application/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">$init</span>(<span class="params"></span>) </span>{<span class="keyword">return</span> <span class="literal">true</span>;}</span><br><span class="line"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">checked</span> <span class="attr">class</span>=<span class="string">"title"</span> <span class="attr">id</span>=<span class="string">'title'</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- here goes the rest of the page --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure></div></figure>
<h1 id="Youtube"><a href="#Youtube" class="headerlink" title="Youtube"></a>Youtube</h1><p>Read documentation to know how to use <a href="https://hexo.io/docs/tag-plugins.html#YouTube" target="_blank" rel="external">Youtube tag</a></p>
<p></p>

<div class="video-container"><iframe src="//www.youtube.com/embed/BSVkI3Ds8E" frameborder="0" allowfullscreen></iframe></div>
<h1 id="Vimeo"><a href="#Vimeo" class="headerlink" title="Vimeo"></a>Vimeo</h1><p>Read documentation to know how to use <a href="https://hexo.io/docs/tag-plugins.html#Vimeo" target="_blank" rel="external">Vimeo tag</a></p>
<p></p>

<div class="video-container"><iframe src="//player.vimeo.com/video/147585091" frameborder="0" allowfullscreen></iframe></div>
<h1 id="Wide-image"><a href="#Wide-image" class="headerlink" title="Wide image"></a>Wide image</h1><p>Read documentation to know how to use <a href="https://github.com/LouisBarranqueiro/hexo-theme-tranquilpeak/blob/master/docs/user.md#wide-image" target="_blank" rel="external">Wide image tag</a></p>
<p>At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio.</p>
<p></p>

<!-- endcontent --><div class="figure figure--fullWidth"><img class="figure-img" src="http://d1u9biwaxjngwg.cloudfront.net/tag-plugins-showcase/car-1.jpg" alt="Mercedes SLS"><span class="caption">Mercedes SLS</span></div><!-- content -->
<p>At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This post is used to show how tag plugins are displayed. See &lt;a href=&quot;https://github.com/LouisBarranqueiro/hexo-theme-tranquilpeak/blob/master/docs/user.md#tags&quot;&gt;docs&lt;/a&gt; for more info.&lt;br&gt;
    
    </summary>
    
    
      <category term="tag plugins" scheme="http://darcylee.coding.me/hexo-blog/tags/tag-plugins/"/>
    
  </entry>
  
  <entry>
    <title>Video integrations showcase</title>
    <link href="http://darcylee.coding.me/hexo-blog/2014/08/09/Video-integrations-showcase/"/>
    <id>http://darcylee.coding.me/hexo-blog/2014/08/09/Video-integrations-showcase/</id>
    <published>2014-08-09T12:30:05.000Z</published>
    <updated>2016-12-06T06:39:10.052Z</updated>
    
    <content type="html"><![CDATA[<p>Youtube and Vimeo videos are easily integrated thanks to tags plugins. Of course, you can add video other platforms like dailymotion.<br><a id="more"></a></p>
<p><strong>Youtube</strong></p>
<div class="video-container"><iframe src="//www.youtube.com/embed/xL45JMI8IFg" frameborder="0" allowfullscreen></iframe></div>
<p><strong>Vimeo</strong></p>
<div class="video-container"><iframe src="//player.vimeo.com/video/17877190" frameborder="0" allowfullscreen></iframe></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Youtube and Vimeo videos are easily integrated thanks to tags plugins. Of course, you can add video other platforms like dailymotion.&lt;br&gt;
    
    </summary>
    
      <category term="tranquilpeak" scheme="http://darcylee.coding.me/hexo-blog/categories/tranquilpeak/"/>
    
      <category term="features" scheme="http://darcylee.coding.me/hexo-blog/categories/tranquilpeak/features/"/>
    
    
      <category term="videos integration" scheme="http://darcylee.coding.me/hexo-blog/tags/videos-integration/"/>
    
      <category term="youtube" scheme="http://darcylee.coding.me/hexo-blog/tags/youtube/"/>
    
      <category term="vimeo" scheme="http://darcylee.coding.me/hexo-blog/tags/vimeo/"/>
    
      <category term="dailymotion" scheme="http://darcylee.coding.me/hexo-blog/tags/dailymotion/"/>
    
  </entry>
  
  <entry>
    <title>中文測試</title>
    <link href="http://darcylee.coding.me/hexo-blog/2013/10/02/%E4%B8%AD%E6%96%87%E6%B8%AC%E8%A9%A6/"/>
    <id>http://darcylee.coding.me/hexo-blog/2013/10/02/中文測試/</id>
    <published>2013-10-02T15:31:30.000Z</published>
    <updated>2016-12-06T06:39:10.056Z</updated>
    
    <content type="html"><![CDATA[<p>This is a chinese test post to show you how chinese is displayed.<br><a id="more"></a></p>
<p>善我王上魚、產生資西員合兒臉趣論。畫衣生這著爸毛親可時，安程幾？合學作。觀經而作建。都非子作這！法如言子你關！手師也。</p>
<p>以也座論頭室業放。要車時地變此親不老高小是統習直麼調未，行年香一？</p>
<p>就竟在，是我童示讓利分和異種百路關母信過明驗有個歷洋中前合著區亮風值新底車有正結，進快保的行戰從：弟除文辦條國備當來際年每小腳識世可的的外的廣下歌洲保輪市果底天影；全氣具些回童但倒影發狀在示，數上學大法很，如要我……月品大供這起服滿老？應學傳者國：山式排只不之然清同關；細車是！停屋常間又，資畫領生，相們制在？公別的人寫教資夠。資再我我！只臉夫藝量不路政吃息緊回力之；兒足灣電空時局我怎初安。意今一子區首者微陸現際安除發連由子由而走學體區園我車當會，經時取頭，嚴了新科同？很夫營動通打，出和導一樂，查旅他。坐是收外子發物北看蘭戰坐車身做可來。道就學務。</p>
<p>國新故。</p>
<blockquote>
<p>工步他始能詩的，裝進分星海演意學值例道……於財型目古香亮自和這乎？化經溫詩。只賽嚴大一主價世哥受的沒有中年即病行金拉麼河。主小路了種就小為廣不？</p>
</blockquote>
<p><em>From <a href="http://www.richyli.com/tool/loremipsum/" target="_blank" rel="external">亂數假文產生器 - Chinese Lorem Ipsum</a></em></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This is a chinese test post to show you how chinese is displayed.&lt;br&gt;
    
    </summary>
    
      <category term="tranquilpeak" scheme="http://darcylee.coding.me/hexo-blog/categories/tranquilpeak/"/>
    
      <category term="features" scheme="http://darcylee.coding.me/hexo-blog/categories/tranquilpeak/features/"/>
    
    
      <category term="chinese" scheme="http://darcylee.coding.me/hexo-blog/tags/chinese/"/>
    
  </entry>
  
  <entry>
    <title>Image gallery showcase</title>
    <link href="http://darcylee.coding.me/hexo-blog/2013/02/18/Image-gallery-showcase/"/>
    <id>http://darcylee.coding.me/hexo-blog/2013/02/18/Image-gallery-showcase/</id>
    <published>2013-02-18T12:30:05.000Z</published>
    <updated>2016-12-06T06:58:31.825Z</updated>
    
    <content type="html"><![CDATA[<p>And here is the image gallery!<br><a id="more"></a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;And here is the image gallery!&lt;br&gt;
    
    </summary>
    
      <category term="tranquilpeak" scheme="http://darcylee.coding.me/hexo-blog/categories/tranquilpeak/"/>
    
      <category term="features" scheme="http://darcylee.coding.me/hexo-blog/categories/tranquilpeak/features/"/>
    
    
      <category term="image gallery" scheme="http://darcylee.coding.me/hexo-blog/tags/image-gallery/"/>
    
  </entry>
  
</feed>
